{"version":3,"sources":["core/pc2d-core.js","core/pc2d-eventhandle.js","core/pc2d-tags.js","math/math.js","math/curve.js","math/curve-set.js","math/curve-evaluator.js","math/vec2.js","math/vec3.js","math/vec4.js","framework/utils/sorted-loop-array.js","framework/components/data.js","framework/components/component.js","framework/components/system.js","framework/components/register.js","framework/components/script/data.js","framework/components/script/component.js","framework/components/script/system.js","framework/components/css/data.js","framework/components/css/component.js","framework/components/css/system.js","pc2d-graphnode-web.js","net/http.js","script/script.js","script/script-type.js","script/script-attributes.js","script/script-registry.js","asset/asset-list-loader.js","asset/asset-variant.js","asset/asset.js","asset/asset-registry.js","resources/loader.js","resources/script.js","resources/parser/scene-web.js","resources/scene.js","resources/css.js","resources/json.js","resources/template.js","template/template-utils.js","template/template.js","graphics/device.js","framework/pc2d-entity.js","framework/pc2d-script.js","framework/pc2d-scene-registry.js","framework/pc2d-application.js","pc2d-entry.js"],"names":["_typeLookup","result","names","i","length","toLowerCase","pc2d","version","revision","config","common","apps","data","makeArray","arr","ret","push","type","obj","Object","prototype","toString","call","extend","target","ex","prop","copy","isDefined","o","a","pc","guid","create","replace","c","r","Math","random","v","path","delimiter","join","index","num","arguments","one","two","Error","normalize","lead","startsWith","trail","endsWith","parts","split","cleaned","slice","tail","getBasename","getDirectory","getExtension","ext","pop","isRelativePath","s","charAt","match","extractPath","string","ASCII_LOWERCASE","HIGH_SURROGATE_BEGIN","HIGH_SURROGATE_END","LOW_SURROGATE_BEGIN","LOW_SURROGATE_END","REGIONAL_INDICATOR_BEGIN","REGIONAL_INDICATOR_END","FITZPATRICK_MODIFIER_BEGIN","FITZPATRICK_MODIFIER_END","VARIATION_MODIFIER_BEGIN","VARIATION_MODIFIER_END","getCodePointData","size","first","second","charCodeAt","code","long","isCodeBetween","begin","end","codeData","numCharsToTakeForNextSymbol","substring","ASCII_UPPERCASE","ASCII_LETTERS","format","regexp","args","shift","RegExp","toBool","strict","TypeError","getCodePoint","codePointData","getCodePoints","codePoint","getSymbols","ch","output","take","char","fromCodePoint","chars","current","units","Number","String","fromCharCode","apply","assign","hashCode","str","hash","len","Timer","_isRunning","_a","_b","start","now","stop","getMilliseconds","window","performance","timing","Date","createURI","options","authority","scheme","host","hostpath","query","fragment","URI","uri","re","getQuery","vars","pair","decodeURIComponent","forEach","item","setQuery","params","q","key","hasOwnProperty","encodeURIComponent","exports","EventHandler","_callbacks","_callbackActive","_addCallback","name","callback","scope","once","on","off","events","count","fire","arg1","arg2","arg3","arg4","arg5","arg6","arg7","arg8","callbacks","evt","ind","indexOf","splice","hasEvent","attach","ev","TagsCache","_index","_key","addItem","tags","_list","add","removeItem","remove","tag","list","keys","find","self","n","t","tagsRest","missingIndex","items","sort","b","Array","has","Tags","parent","_parent","constructor","changed","_processArguments","clear","_has","multiple","flat","tmp","defineProperty","get","math","DEG_TO_RAD","PI","RAD_TO_DEG","clamp","value","min","max","intToBytes24","intToBytes32","bytesToInt24","g","bytesToInt32","lerp","alpha","lerpAngle","powerOfTwo","x","nextPowerOfTwo","val","diff","smoothstep","smootherstep","CURVE_LINEAR","Curve","tension","_eval","CurveEvaluator","time","evaluate","closest","abs","clone","quantize","precision","values","Float32Array","step","quantizeClamped","CURVE_SMOOTHSTEP","CURVE_CATMULL","CURVE_CARDINAL","CURVE_SPLINE","CURVE_STEP","CurveSet","curves","_type","arg","numCurves","set","curve","_curve","_left","Infinity","_right","_recip","_p0","_p1","_m0","_m1","_reset","forceReset","_evaluateHermite","isFinite","_isHermite","_calcTangents","d","s1_","s2_","s1","s2","a_","d_","p0","p1","m0","m1","t2","twot","omt","omt2","Vec2","y","rhs","add2","lhs","distance","sqrt","dot","equals","lengthSq","mul","mul2","invLength","scale","scalar","sub","sub2","defineProperties","ZERO","ONE","UP","DOWN","RIGHT","LEFT","Vec3","z","cross","lx","ly","lz","rx","ry","rz","project","a_dot_b","FORWARD","BACK","Vec4","w","SortedLoopArray","_sortBy","sortBy","loopIndex","_sortHandler","_doSort","bind","_binarySearch","left","middle","right","search","floor","insert","append","idx","ComponentData","Component","system","entity","schema","_accessorsBuilt","buildAccessors","oldValue","newValue","onSetEnabled","_buildAccessors","descriptor","configurable","enabled","onEnable","onDisable","onPostStateChange","record","store","getGuid","ComponentSystem","app","convertValue","Color","_helper","p","l","f","initialize","root","_init","postInitialize","_postInit","update","dt","inTools","_toolsUpdate","_update","fixedUpdate","_fixedUpdate","postUpdate","_postUpdate","event","func","console","error","_erase","unbind","addComponent","component","ComponentType","componentData","DataType","id","initializeComponentData","removeComponent","cloneComponent","src","properties","undefined","getPropertiesOfType","matchingProperties","destroy","ComponentSystemRegistry","ScriptComponentData","ScriptComponent","_scripts","_updateList","_postUpdateList","_scriptsIndex","_destroyedScripts","_destroyed","_scriptsData","_oldState","_enabled","_beingEnabled","_isLoopingThroughScripts","_executionOrder","_onSetEnabled","scriptMethods","swap","_checkState","script","wasLooping","_beginLooping","scripts","_initialized","_postInitialized","_scriptMethod","_endLooping","looping","wasLoopingBefore","_removeDestroyedScripts","old","state","_addComponentToEnabled","_removeComponentFromEnabled","_onBeforeRemove","__scriptType","__name","_removeScriptInstance","_resetExecutionOrder","_onInitializeAttributes","__initializeAttributes","method","warn","_onInitialize","_onPostInitialize","_onUpdate","_onPostUpdate","_insertScriptInstance","scriptInstance","scriptsLength","__executionOrder","startIndex","instance","scriptType","scriptName","attributes","onSwap","preloading","awaiting","scriptData","scriptInstanceOld","__attributes","resolveDuplicatedEntityReferenceProperties","oldScriptComponent","duplicatedIdsMap","newScriptComponent","newAttributesRaw","__attributesRaw","newAttributes","oldAttributes","attributeName","attribute","array","oldGuidArray","newGuidArray","Entity","oldGuid","move","indOld","attr","createScript","reservedAttributes","log","order","METHOD_INITIALIZE_ATTRIBUTES","executionOrderCounter","ScriptComponentSystem","_components","_enabledComponents","MAX_SAFE_INTEGER","_callComponentMethod","components","CssComponentData","ELEMENTTYPE_GROUP","ELEMENTTYPE_IMAGE","ELEMENTTYPE_TEXT","CssComponent","_beingInitialized","_onInsert","_patch","_cssText","_innerText","_textureAsset","_image","_text","_group","_drawOrder","buildsource","buildinStyle","document","createElement","setAttribute","_styleSheets","_sync","_unpatch","css","sheets","cssText","styleSheets","stylesheet","innerHTML","dom","textureAsset","removeAttribute","innerText","domOn","node","eventName","handler","attachEvent","Windows","detachEvent","addEventListener","removeEventListener","show","style","display","hide","querySet","selector","querySelector","_dirtifyWorld","onUpdate","head","appendChild","parentNode","removeChild","onRemove","addStyleSheet","text","removeStyleSheet","found","olddom","nextSlibing","childNodes","nodes","insertBefore","_schema","CssComponentSystem","_onRemoveComponent","GraphNode","_labels","_dirtyLocal","_aabbVer","_frozen","_dirtyWorld","_dirtyNormal","_up","_forward","_children","_graphDepth","_enabledInHierarchy","scaleCompensation","_notifyHierarchyStateChanged","_onHierarchyStateChanged","_unfreezeParentToRoot","_cloneInternal","descendants","results","Function","fn","concat","findOne","findByTag","_findByTag","findByName","findByPath","currentParent","imax","part","children","j","jmax","thisArg","isDescendantOf","isAncestorOf","reparent","insertChild","addChild","_dirtifyLocal","_dirtifyWorldInternal","_onInsertChild","addChildAndSaveTransform","enabledInHierarchy","_updateGraphDepth","child","syncHierarchy","Http","ContentType","FORM_URLENCODED","GIF","JPEG","DDS","JSON","PNG","TEXT","XML","WAV","OGG","MP3","MP4","AAC","BIN","BASIS","ResponseType","ARRAY_BUFFER","BLOB","DOCUMENT","binaryExtensions","retryDelay","url","request","post","postdata","put","del","timestamp","xhr","errored","retry","retries","maxRetries","async","headers","Document","FormData","contentType","bFirstItem","escape","stringify","header","cache","XMLHttpRequest","open","withCredentials","responseType","_guessResponseType","setRequestHeader","onreadystatechange","_onReadyStateChange","onerror","_onError","send","e","status","_isBinaryContentType","binTypes","readyState","_onSuccess","response","getResponseHeader","trim","parse","responseText","logWARNING","responseXML","err","retrying","pow","maxRetryDelay","setTimeout","http","reservedScripts","ScriptType","ScriptAttributes","registerScript","__getScriptName","Application","getApplication","ScriptHandler","_push","funcNameRegex","_enabledOld","__destroyed","constructorFn","force","default","methods","rawToValue","parseInt","isNaN","Asset","assets","getEntityFromIndex","test","fromString","raw","ScriptRegistry","systems","scriptInstances","scriptInstancesInitialized","nameOrType","AssetListLoader","assetList","assetRegistry","_assets","_registry","_loaded","_count","_total","_failed","_waitingAssets","asset","_waitForAsset","_onLoad","_onAddAsset","load","done","_callback","_scope","loading","loaded","ready","_loadingComplete","assetId","AssetVariants","defineVariantProperty","field","filename","opt","file","_file","reload","assetIdCounter","ABSOLUTE_URL","VARIANT_SUPPORT","pvr","dxt","etc2","etc1","basis","VARIANT_DEFAULT_PRIORITY","_id","_preload","variants","_data","_resources","_i18n","registry","getFileUrl","getPreferredFile","prefix","separator","_loader","_app","device","graphicsDevice","variant","enableBundles","bundles","listBundlesForAsset","len2","getLocalizedAssetId","locale","I18n","findAvailableLocale","addLocalizedAssetId","removeLocalizedAssetId","resource","patch","unload","clearCache","valueAsBool","_old","ASSET_ANIMATION","ASSET_AUDIO","ASSET_IMAGE","ASSET_JSON","ASSET_TEXT","ASSET_TEXTURE","ASSET_SHADER","ASSET_CSS","ASSET_HTML","ASSET_SCRIPT","AssetRegistry","loader","_cache","_names","_tags","_urls","filters","filter","include","preload","_onTagAdd","_onTagRemove","getByUrl","extra","resources","getHandler","loadFromUrl","loadFromUrlAndFilename","onLoadAsset","loadedAsset","_loadTextures","textures","_loadModel","dir","basename","_loadAsset","assetToLoad","mappingUrl","mapping","_loadMaterials","materials","materialAssets","used","urls","materialData","mappingFormat","textureUrl","pi","StandardMaterial","TEXTURE_PARAMETERS","paramName","texturePath","texture","findAll","idxs","map","ResourceLoader","_handlers","_requests","addHandler","removeHandler","handleLoad","urlObj","_onFailure","original","normalizedUrl","hasUrl","canLoadUrl","loadUrl","fileUrlFromBundle","getFromCache","enableRetry","retryRequests","disableRetry","_types","Type","_loadScript","legacy","element","onload","SceneParser","isTemplate","_isTemplate","entities","collapsedInstances","_addCollapsedToEntities","_createEntity","resource_id","_openComponentData","setGuid","template","labels","label","addLabel","systemsList","entityData","h","expanded","TemplateUtils","expandTemplateEntities","instanceEntities","SceneHandler","errMsg","message","stack","waitForTemplatesInScene","parser","scene","applySceneSettings","settings","CssHandler","link","rel","href","createStyle","cssString","styleSheet","createTextNode","JsonHandler","TemplateHandler","waitForTemplateAssets","Template","_getAllCollapsedEntities","templateIds","_extractTemplateIds","template_id","collapsed_entity","expandEntity","_expandedData","_templateRoot","instantiate","_parseTemplate","getExpandedData","EVENT_RESIZE","GraphicsDevice","canvas","_maxPixelRatio","renderTarget","_width","_height","resizeCanvas","width","height","ratio","devicePixelRatio","setResolution","fullscreenElement","fullscreen","requestFullscreen","exitFullscreen","_batchHandle","_guid","_destroying","findComponent","findComponents","_entityIndex","enableFirst","_enableList","_onHierarchyStatePostChanged","findByGuid","_cloneRecursively","oldSubtreeRoot","oldEntity","newEntity","componentName","entityProperties","propertyDescriptor","propertyName","oldEntityReferenceId","entityIsWithinOldSubtree","newEntityReferenceId","useLegacyScriptAttributeCloning","_new","cloneShallow","oldChild","newChild","_legacy","_createdLoadingScreen","_pcScriptName","defaultValue","createLoadingScreen","SceneRegistryItem","SceneRegistry","_urlIndex","findByUrl","loadSceneHierarchy","_preloadScripts","loadSceneSettings","loadScene","_applications","_currentApplication","_time","timeScale","maxDeltaTime","frame","autoRender","renderNextFrame","_librariesLoaded","_fillMode","FILLMODE_KEEP_ASPECT","_resolutionMode","RESOLUTION_FIXED","_allowResize","context","rootIframe","contentWindow","body","scriptsOrder","scenes","_visibilityChangeHandler","onVisibilityChange","hidden","_hiddenAttr","mozHidden","msHidden","webkitHidden","tick","makeTick","Progress","inc","configure","props","application_properties","_parseApplicationProperties","_parseScenes","_parseAssets","total","_done","onAssetLoad","onAssetError","getSceneUrl","entry","sceneData","scriptUrl","_getScriptReferences","progress","regex","onLoad","_scriptPrefix","useDevicePixelRatio","use_device_pixel_ratio","resolutionMode","resolution_mode","fillMode","fill_mode","maxPixelRatio","setCanvasResolution","setCanvasFillMode","layers","layerOrder","composition","LayerComposition","LAYERID_DEPTH","Layer","sublayer","layer","transparent","pushTransparent","pushOpaque","subLayerEnabled","batchGroups","grp","batcher","addGroup","dynamic","maxAabbSize","i18nAssets","i18n","_loadLibraries","libraries","onLibrariesLoaded","_sceneRegistry","scriptsIndex","bundlesIndex","loadingType","priorityScripts","priority_scripts","_inTools","controller","mouse","keyboard","gamepads","render","updateAll","_skipRenderCounter","renderer","renderComposition","mode","RESOLUTION_AUTO","clientWidth","clientHeight","isHidden","windowWidth","innerWidth","windowHeight","innerHeight","FILLMODE_FILL_WINDOW","_processTimestamp","canvasId","detach","touch","elementInput","lightmapper","destroyManager","defaultLayerDepth","onPreRenderOpaque","onPostRenderOpaque","defaultLayerWorld","destroyPostEffectQuad","vr","xr","_audioManager","ParticleEmitter","DEFAULT_PARAM_TEXTURE","_frameEndData","frameRequest","cancelAnimationFrame","requestAnimationFrame","FILLMODE_NONE"],"mappings":"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","file":"pc2d-entry.js","sourceRoot":"..\\..\\editor\\scene\\js\\editor\\animatorviewport\\pc2d","sourcesContent":["/**\r\n * @private\r\n * @function\r\n * @name _typeLookup\r\n * @description Create look up table for types.\r\n */\r\nvar _typeLookup = function () {\r\n    var result = { };\r\n    var names = [\"Array\", \"Object\", \"Function\", \"Date\", \"RegExp\", \"Float32Array\"];\r\n\r\n    for (var i = 0; i < names.length; i++)\r\n        result[\"[object \" + names[i] + \"]\"] = names[i].toLowerCase();\r\n\r\n    return result;\r\n}();\r\n\r\n\r\nvar pc2d = {\r\n    version: \"__CURRENT_SDK_VERSION__\",\r\n    revision: \"__REVISION__\",\r\n    config: { },\r\n    common: { },\r\n    apps: { }, // Storage for the applications using the PlayCanvas Engine\r\n    data: { }, // Storage for exported entity data\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @name pc2d.makeArray\r\n     * @description Convert an array-like object into a normal array.\r\n     * For example, this is useful for converting the arguments object into an array.\r\n     * @param {object} arr - The array to convert.\r\n     * @returns {Array} An array.\r\n     */\r\n    makeArray: function (arr) {\r\n        var i,\r\n            ret = [],\r\n            length = arr.length;\r\n\r\n        for (i = 0; i < length; ++i) {\r\n            ret.push(arr[i]);\r\n        }\r\n\r\n        return ret;\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @name pc2d.type\r\n     * @description Extended typeof() function, returns the type of the object.\r\n     * @param {object} obj - The object to get the type of.\r\n     * @returns {string} The type string: \"null\", \"undefined\", \"number\", \"string\", \"boolean\", \"array\", \"object\", \"function\", \"date\", \"regexp\" or \"float32array\".\r\n     */\r\n    type: function (obj) {\r\n        if (obj === null) {\r\n            return \"null\";\r\n        }\r\n\r\n        var type = typeof obj;\r\n\r\n        if (type === \"undefined\" || type === \"number\" || type === \"string\" || type === \"boolean\") {\r\n            return type;\r\n        }\r\n\r\n        return _typeLookup[Object.prototype.toString.call(obj)];\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @name pc2d.extend\r\n     * @description Merge the contents of two objects into a single object.\r\n     * @param {object} target - The target object of the merge.\r\n     * @param {object} ex - The object that is merged with target.\r\n     * @returns {object} The target object.\r\n     * @example\r\n     * var A = {\r\n     *     a: function () {\r\n     *         console.log(this.a);\r\n     *     }\r\n     * };\r\n     * var B = {\r\n     *     b: function () {\r\n     *         console.log(this.b);\r\n     *     }\r\n     * };\r\n     *\r\n     * pc2d.extend(A, B);\r\n     * A.a();\r\n     * // logs \"a\"\r\n     * A.b();\r\n     * // logs \"b\"\r\n     */\r\n    extend: function (target, ex) {\r\n        var prop,\r\n            copy;\r\n\r\n        for (prop in ex) {\r\n            copy = ex[prop];\r\n            if (pc2d.type(copy) == \"object\") {\r\n                target[prop] = pc2d.extend({}, copy);\r\n            } else if (pc2d.type(copy) == \"array\") {\r\n                target[prop] = pc2d.extend([], copy);\r\n            } else {\r\n                target[prop] = copy;\r\n            }\r\n        }\r\n\r\n        return target;\r\n    },\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @function\r\n     * @name pc2d.isDefined\r\n     * @description Return true if the Object is not undefined.\r\n     * @param {object} o - The Object to test.\r\n     * @returns {boolean} True if the Object is not undefined.\r\n     */\r\n    isDefined: function (o) {\r\n        var a;\r\n        return (o !== a);\r\n    }\r\n};\r\n\r\nvar pc = pc2d;\r\n\r\npc2d.guid = function () {\r\n    return {\r\n        /**\r\n         * @function\r\n         * @name pc2d.guid.create\r\n         * @description Create an RFC4122 version 4 compliant GUID.\r\n         * @returns {string} A new GUID.\r\n         */\r\n        create: function () {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = Math.random() * 16 | 0,\r\n                    v = (c == 'x') ? r : (r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\npc2d.path = function () {\r\n    return {\r\n        delimiter: \"/\",\r\n\r\n        join: function () {\r\n            var index;\r\n            var num = arguments.length;\r\n            var result = arguments[0];\r\n\r\n            for (index = 0; index < num - 1; ++index) {\r\n                var one = arguments[index];\r\n                var two = arguments[index + 1];\r\n                if (!pc2d.isDefined(one) || !pc2d.isDefined(two)) {\r\n                    throw new Error(\"undefined argument to pc2d.path.join\");\r\n                }\r\n                if (two[0] === pc2d.path.delimiter) {\r\n                    result = two;\r\n                    continue;\r\n                }\r\n\r\n                if (one && two && one[one.length - 1] !== pc2d.path.delimiter && two[0] !== pc2d.path.delimiter) {\r\n                    result += (pc2d.path.delimiter + two);\r\n                } else {\r\n                    result += (two);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        normalize: function (path) {\r\n            var lead = path.startsWith(pc2d.path.delimiter);\r\n            var trail = path.endsWith(pc2d.path.delimiter);\r\n\r\n            var parts = path.split('/');\r\n\r\n            var result = '';\r\n\r\n            var cleaned = [];\r\n\r\n            for (var i = 0; i < parts.length; i++) {\r\n                if (parts[i] === '') continue;\r\n                if (parts[i] === '.') continue;\r\n                if (parts[i] === '..' && cleaned.length > 0) {\r\n                    cleaned = cleaned.slice(0, cleaned.length - 2);\r\n                    continue;\r\n                }\r\n\r\n                if (i > 0) cleaned.push(pc2d.path.delimiter);\r\n                cleaned.push(parts[i]);\r\n            }\r\n\r\n\r\n            result = cleaned.join('');\r\n            if (!lead && result[0] === pc2d.path.delimiter) {\r\n                result = result.slice(1);\r\n            }\r\n\r\n            if (trail && result[result.length - 1] !== pc2d.path.delimiter) {\r\n                result += pc2d.path.delimiter;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        split: function (path) {\r\n            var parts = path.split(pc2d.path.delimiter);\r\n            var tail = parts.slice(parts.length - 1)[0];\r\n            var head = parts.slice(0, parts.length - 1).join(pc2d.path.delimiter);\r\n            return [head, tail];\r\n        },\r\n\r\n        getBasename: function (path) {\r\n            return pc2d.path.split(path)[1];\r\n        },\r\n\r\n        getDirectory: function (path) {\r\n            var parts = path.split(pc2d.path.delimiter);\r\n            return parts.slice(0, parts.length - 1).join(pc2d.path.delimiter);\r\n        },\r\n        getExtension: function (path) {\r\n            var ext = path.split('?')[0].split('.').pop();\r\n            if (ext !== path) {\r\n                return \".\" + ext;\r\n            }\r\n            return \"\";\r\n        },\r\n\r\n        isRelativePath: function (s) {\r\n            return s.charAt(0) !== \"/\" && s.match(/:\\/\\//) === null;\r\n        },\r\n\r\n        extractPath: function (s) {\r\n            var path = \"\";\r\n            var parts = s.split(\"/\");\r\n            var i = 0;\r\n\r\n            if (parts.length > 1) {\r\n                if (pc2d.path.isRelativePath(s)) {\r\n                    if (parts[0] === \".\") {\r\n                        for (i = 0; i < parts.length - 1; ++i) {\r\n                            path += (i === 0) ? parts[i] : \"/\" + parts[i];\r\n\r\n                        }\r\n                    } else if (parts[0] === \"..\") {\r\n                        for (i = 0; i < parts.length - 1; ++i) {\r\n                            path += (i === 0) ? parts[i] : \"/\" + parts[i];\r\n                        }\r\n                    } else {\r\n                        path = \".\";\r\n                        for (i = 0; i < parts.length - 1; ++i) {\r\n                            path += \"/\" + parts[i];\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (i = 0; i < parts.length - 1; ++i) {\r\n                        path += (i === 0) ? parts[i] : \"/\" + parts[i];\r\n                    }\r\n                }\r\n            }\r\n            return path;\r\n        }\r\n    };\r\n}();\r\n\r\n\r\npc2d.string = function () {\r\n    var ASCII_LOWERCASE = \"abcdefghijklmnopqrstuvwxyz\";\r\n    var ASCII_UPPERCASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    var ASCII_LETTERS = ASCII_LOWERCASE + ASCII_UPPERCASE;\r\n\r\n    var HIGH_SURROGATE_BEGIN = 0xD800;\r\n    var HIGH_SURROGATE_END = 0xDBFF;\r\n    var LOW_SURROGATE_BEGIN = 0xDC00;\r\n    var LOW_SURROGATE_END = 0xDFFF;\r\n    var ZERO_WIDTH_JOINER = 0x200D;\r\n\r\n    // Flag emoji\r\n    var REGIONAL_INDICATOR_BEGIN = 0x1F1E6;\r\n    var REGIONAL_INDICATOR_END = 0x1F1FF;\r\n\r\n    // Skin color modifications to emoji\r\n    var FITZPATRICK_MODIFIER_BEGIN = 0x1F3FB;\r\n    var FITZPATRICK_MODIFIER_END = 0x1F3FF;\r\n\r\n    // Accent characters\r\n    var DIACRITICAL_MARKS_BEGIN = 0x20D0;\r\n    var DIACRITICAL_MARKS_END = 0x20FF;\r\n\r\n    // Special emoji joins\r\n    var VARIATION_MODIFIER_BEGIN = 0xFE00;\r\n    var VARIATION_MODIFIER_END = 0xFE0F;\r\n\r\n    function getCodePointData(string, i) {\r\n        var size = string.length;\r\n        i = i || 0;\r\n        // Account for out-of-bounds indices:\r\n        if (i < 0 || i >= size) {\r\n            return null;\r\n        }\r\n        var first = string.charCodeAt(i);\r\n        var second;\r\n        if (size > 1 && first >= HIGH_SURROGATE_BEGIN && first <= HIGH_SURROGATE_END) {\r\n            second = string.charCodeAt(i + 1);\r\n            if (second >= LOW_SURROGATE_BEGIN && second <= LOW_SURROGATE_END) {\r\n                // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n                return { code: (first - HIGH_SURROGATE_BEGIN) * 0x400 + second - LOW_SURROGATE_BEGIN + 0x10000, long: true };\r\n            }\r\n        }\r\n        return { code: first, long: false };\r\n    }\r\n\r\n    function isCodeBetween(string, begin, end) {\r\n        if (!string)\r\n            return false;\r\n        var codeData = getCodePointData(string);\r\n        if (codeData) {\r\n            var code = codeData.code;\r\n            return code >= begin && code <= end;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function numCharsToTakeForNextSymbol(string, index) {\r\n        if (index === string.length - 1) {\r\n            // Last character in the string, so we can only take 1\r\n            return 1;\r\n        }\r\n        if (isCodeBetween(string[index], HIGH_SURROGATE_BEGIN, HIGH_SURROGATE_END)) {\r\n            var first = string.substring(index, index + 2);\r\n            var second = string.substring(index + 2, index + 4);\r\n\r\n            // check if second character is fitzpatrick (color) modifier\r\n            // or if this is a pair of regional indicators (a flag)\r\n            if (isCodeBetween(second, FITZPATRICK_MODIFIER_BEGIN, FITZPATRICK_MODIFIER_END) ||\r\n                (isCodeBetween(first, REGIONAL_INDICATOR_BEGIN, REGIONAL_INDICATOR_END) &&\r\n                isCodeBetween(second, REGIONAL_INDICATOR_BEGIN, REGIONAL_INDICATOR_END))\r\n            ) {\r\n                return 4;\r\n            }\r\n\r\n            // check if next character is a modifier, in which case we should return it\r\n            if (isCodeBetween(second, VARIATION_MODIFIER_BEGIN, VARIATION_MODIFIER_END)) {\r\n                return 3;\r\n            }\r\n\r\n            // return surrogate pair\r\n            return 2;\r\n        }\r\n\r\n        // check if next character is the emoji modifier, in which case we should include it\r\n        if (isCodeBetween(string[index + 1], VARIATION_MODIFIER_BEGIN, VARIATION_MODIFIER_END)) {\r\n            return 2;\r\n        }\r\n\r\n        // just a regular character\r\n        return 1;\r\n    }\r\n\r\n    return {\r\n        ASCII_LOWERCASE: ASCII_LOWERCASE,\r\n        ASCII_UPPERCASE: ASCII_UPPERCASE,\r\n        ASCII_LETTERS: ASCII_LETTERS,\r\n\r\n        format: function (s) {\r\n            var i = 0,\r\n                regexp,\r\n                args = pc2d.makeArray(arguments);\r\n\r\n            // drop first argument\r\n            args.shift();\r\n\r\n            for (i = 0; i < args.length; i++) {\r\n                regexp = new RegExp('\\\\{' + i + '\\\\}', 'gi');\r\n                s = s.replace(regexp, args[i]);\r\n            }\r\n            return s;\r\n        },\r\n\r\n        toBool: function (s, strict) {\r\n            if (s === 'true') {\r\n                return true;\r\n            }\r\n\r\n            if (strict) {\r\n                if (s === 'false') {\r\n                    return false;\r\n                }\r\n\r\n                throw new TypeError('Not a boolean string');\r\n            }\r\n\r\n            return false;\r\n        },\r\n        getCodePoint: function (string, i) {\r\n            var codePointData = getCodePointData(string, i);\r\n            return codePointData && codePointData.code;\r\n        },\r\n        getCodePoints: function (string) {\r\n            if (typeof string !== 'string') {\r\n                throw new TypeError('Not a string');\r\n            }\r\n            var i = 0;\r\n            var arr = [];\r\n            var codePoint;\r\n            while (!!(codePoint = getCodePointData(string, i))) {\r\n                arr.push(codePoint.code);\r\n                i += codePoint.long ? 2 : 1;\r\n            }\r\n            return arr;\r\n        },\r\n        getSymbols: function (string) {\r\n            if (typeof string !== 'string') {\r\n                throw new TypeError('Not a string');\r\n            }\r\n            var index = 0;\r\n            var length = string.length;\r\n            var output = [];\r\n            var take = 0;\r\n            var ch;\r\n            while (index < length) {\r\n                take += numCharsToTakeForNextSymbol(string, index + take);\r\n                ch = string[index + take];\r\n                // Handle special cases\r\n                if (isCodeBetween(ch, DIACRITICAL_MARKS_BEGIN, DIACRITICAL_MARKS_END)) {\r\n                    ch = string[index + (take++)];\r\n                }\r\n                if (isCodeBetween(ch, VARIATION_MODIFIER_BEGIN, VARIATION_MODIFIER_END)) {\r\n                    ch = string[index + (take++)];\r\n                }\r\n                if (ch && ch.charCodeAt(0) === ZERO_WIDTH_JOINER) {\r\n                    ch = string[index + (take++)];\r\n                    // Not a complete char yet\r\n                    continue;\r\n                }\r\n                var char = string.substring(index, index + take);\r\n                output.push(char);\r\n                index += take;\r\n                take = 0;\r\n            }\r\n            return output;\r\n        },\r\n        fromCodePoint: function (/* ...args */) {\r\n            var chars = [];\r\n            var current;\r\n            var codePoint;\r\n            var units;\r\n            for (var i = 0; i < arguments.length; ++i) {\r\n                current = Number(arguments[i]);\r\n                codePoint = current - 0x10000;\r\n                units = current > 0xFFFF ? [(codePoint >> 10) + 0xD800, (codePoint % 0x400) + 0xDC00] : [current];\r\n                chars.push(String.fromCharCode.apply(null, units));\r\n            }\r\n            return chars.join('');\r\n        }\r\n    };\r\n}();\r\nObject.assign(pc2d, (function () {\r\n    return {\r\n        /**\r\n         * @private\r\n         * @function\r\n         * @name pc2d.hashCode\r\n         * @description Calculates simple hash value of a string. Designed for performance, not perfect.\r\n         * @param {string} str - String.\r\n         * @returns {number} Hash value.\r\n         */\r\n        hashCode: function (str) {\r\n            var hash = 0;\r\n            for (var i = 0, len = str.length; i < len; i++) {\r\n                hash = ((hash << 5) - hash) + str.charCodeAt(i);\r\n                // Convert to 32bit integer\r\n                hash |= 0;\r\n            }\r\n            return hash;\r\n        }\r\n    };\r\n}()));\r\n\r\n\r\nObject.assign(pc2d, (function () {\r\n    var Timer = function Timer() {\r\n        this._isRunning = false;\r\n        this._a = 0;\r\n        this._b = 0;\r\n    };\r\n\r\n    Object.assign(Timer.prototype, {\r\n\r\n        start: function () {\r\n            this._isRunning = true;\r\n            this._a = pc2d.now();\r\n        },\r\n\r\n        stop: function () {\r\n            this._isRunning = false;\r\n            this._b = pc2d.now();\r\n        },\r\n\r\n        getMilliseconds: function () {\r\n            return this._b - this._a;\r\n        }\r\n    });\r\n\r\n    return {\r\n        Timer: Timer,\r\n        now: (typeof window !== 'undefined') && window.performance && window.performance.now && window.performance.timing ? function () {\r\n            return window.performance.now();\r\n        } : Date.now\r\n    };\r\n}()));\r\n\r\n\r\n\r\nObject.assign(pc2d, function () {\r\n    return {\r\n\r\n        createURI: function (options) {\r\n            var s = \"\";\r\n            if ((options.authority || options.scheme) && (options.host || options.hostpath)) {\r\n                throw new Error(\"Can't have 'scheme' or 'authority' and 'host' or 'hostpath' option\");\r\n            }\r\n            if (options.host && options.hostpath) {\r\n                throw new Error(\"Can't have 'host' and 'hostpath' option\");\r\n            }\r\n            if (options.path && options.hostpath) {\r\n                throw new Error(\"Can't have 'path' and 'hostpath' option\");\r\n            }\r\n\r\n            if (options.scheme) {\r\n                s += options.scheme + \":\";\r\n            }\r\n\r\n            if (options.authority) {\r\n                s += \"//\" + options.authority;\r\n            }\r\n\r\n            if (options.host) {\r\n                s += options.host;\r\n            }\r\n\r\n            if (options.path) {\r\n                s += options.path;\r\n            }\r\n\r\n            if (options.hostpath) {\r\n                s += options.hostpath;\r\n            }\r\n\r\n            if (options.query) {\r\n                s += \"?\" + options.query;\r\n            }\r\n\r\n            if (options.fragment) {\r\n                s += \"#\" + options.fragment;\r\n            }\r\n\r\n            return s;\r\n        },\r\n\r\n        URI: function (uri) {\r\n            // See http://tools.ietf.org/html/rfc2396#appendix-B for details of RegExp\r\n            var re = /^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/,\r\n                result = uri.match(re);\r\n\r\n            this.scheme = result[2];\r\n\r\n            this.authority = result[4];\r\n\r\n            this.path = result[5];\r\n\r\n            this.query = result[7];\r\n\r\n            this.fragment = result[9];\r\n\r\n            this.toString = function () {\r\n                var s = \"\";\r\n\r\n                if (this.scheme) {\r\n                    s += this.scheme + \":\";\r\n                }\r\n\r\n                if (this.authority) {\r\n                    s += \"//\" + this.authority;\r\n                }\r\n\r\n                s += this.path;\r\n\r\n                if (this.query) {\r\n                    s += \"?\" + this.query;\r\n                }\r\n\r\n                if (this.fragment) {\r\n                    s += \"#\" + this.fragment;\r\n                }\r\n\r\n                return s;\r\n            };\r\n\r\n            this.getQuery = function () {\r\n                var vars;\r\n                var pair;\r\n                var result = {};\r\n\r\n                if (this.query) {\r\n                    vars = decodeURIComponent(this.query).split(\"&\");\r\n                    vars.forEach(function (item, index, arr) {\r\n                        pair = item.split(\"=\");\r\n                        result[pair[0]] = pair[1];\r\n                    }, this);\r\n                }\r\n\r\n                return result;\r\n            };\r\n\r\n            this.setQuery = function (params) {\r\n                var q = \"\";\r\n                for (var key in params) {\r\n                    if (params.hasOwnProperty(key)) {\r\n                        if (q !== \"\") {\r\n                            q += \"&\";\r\n                        }\r\n                        q += encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\r\n                    }\r\n                }\r\n\r\n                this.query = q;\r\n            };\r\n        }\r\n    };\r\n}());\r\nwindow.pc2d = pc2d;\r\nwindow.pc = window.pc2d;\r\nif (typeof exports !== 'undefined')\r\n    exports.pc2d = pc2d;","Object.assign(pc2d, (function () {\r\n    'use strict';\r\n\r\n\r\n    var EventHandler = function () {\r\n        this._callbacks = { };\r\n        this._callbackActive = { };\r\n    };\r\n\r\n    Object.assign(EventHandler.prototype, {\r\n\r\n        _addCallback: function (name, callback, scope, once) {\r\n            if (!name || typeof name !== 'string' || !callback)\r\n                return;\r\n\r\n            if (!this._callbacks[name])\r\n                this._callbacks[name] = [];\r\n\r\n            if (this._callbackActive[name] && this._callbackActive[name] === this._callbacks[name])\r\n                this._callbackActive[name] = this._callbackActive[name].slice();\r\n\r\n            this._callbacks[name].push({\r\n                callback: callback,\r\n                scope: scope || this,\r\n                once: once || false\r\n            });\r\n        },\r\n\r\n        on: function (name, callback, scope) {\r\n            this._addCallback(name, callback, scope, false);\r\n\r\n            return this;\r\n        },\r\n\r\n        off: function (name, callback, scope) {\r\n            if (name) {\r\n                if (this._callbackActive[name] && this._callbackActive[name] === this._callbacks[name])\r\n                    this._callbackActive[name] = this._callbackActive[name].slice();\r\n            } else {\r\n                for (var key in this._callbackActive) {\r\n                    if (!this._callbacks[key])\r\n                        continue;\r\n\r\n                    if (this._callbacks[key] !== this._callbackActive[key])\r\n                        continue;\r\n\r\n                    this._callbackActive[key] = this._callbackActive[key].slice();\r\n                }\r\n            }\r\n\r\n            if (!name) {\r\n                this._callbacks = { };\r\n            } else if (!callback) {\r\n                if (this._callbacks[name])\r\n                    this._callbacks[name] = [];\r\n            } else {\r\n                var events = this._callbacks[name];\r\n                if (!events)\r\n                    return this;\r\n\r\n                var count = events.length;\r\n\r\n                for (var i = 0; i < count; i++) {\r\n                    if (events[i].callback !== callback)\r\n                        continue;\r\n\r\n                    if (scope && events[i].scope !== scope)\r\n                        continue;\r\n\r\n                    events[i--] = events[--count];\r\n                }\r\n                events.length = count;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        fire: function (name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\r\n            if (!name || !this._callbacks[name])\r\n                return this;\r\n\r\n            var callbacks;\r\n\r\n            if (!this._callbackActive[name]) {\r\n                this._callbackActive[name] = this._callbacks[name];\r\n            } else {\r\n                if (this._callbackActive[name] === this._callbacks[name])\r\n                    this._callbackActive[name] = this._callbackActive[name].slice();\r\n\r\n                callbacks = this._callbacks[name].slice();\r\n            }\r\n\r\n            // TODO: What does callbacks do here?\r\n            // In particular this condition check looks wrong: (i < (callbacks || this._callbackActive[name]).length)\r\n            // Because callbacks is not an integer\r\n            // eslint-disable-next-line no-unmodified-loop-condition\r\n            for (var i = 0; (callbacks || this._callbackActive[name]) && (i < (callbacks || this._callbackActive[name]).length); i++) {\r\n                var evt = (callbacks || this._callbackActive[name])[i];\r\n                evt.callback.call(evt.scope, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);\r\n\r\n                if (evt.once) {\r\n                    var ind = this._callbacks[name].indexOf(evt);\r\n                    if (ind !== -1) {\r\n                        if (this._callbackActive[name] === this._callbacks[name])\r\n                            this._callbackActive[name] = this._callbackActive[name].slice();\r\n\r\n                        this._callbacks[name].splice(ind, 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!callbacks)\r\n                this._callbackActive[name] = null;\r\n\r\n            return this;\r\n        },\r\n\r\n        once: function (name, callback, scope) {\r\n            this._addCallback(name, callback, scope, true);\r\n            return this;\r\n        },\r\n\r\n        hasEvent: function (name) {\r\n            return (this._callbacks[name] && this._callbacks[name].length !== 0) || false;\r\n        }\r\n    });\r\n\r\n    return {\r\n        EventHandler: EventHandler\r\n    };\r\n}()));\r\n\r\n\r\npc2d.events = {\r\n    attach: function (target) {\r\n        var ev = pc2d.events;\r\n        target.on = ev.on;\r\n        target.off = ev.off;\r\n        target.fire = ev.fire;\r\n        target.once = ev.once;\r\n        target.hasEvent = ev.hasEvent;\r\n        target._callbacks = { };\r\n        target._callbackActive = { };\r\n        return target;\r\n    },\r\n\r\n    on: pc2d.EventHandler.prototype.on,\r\n    off: pc2d.EventHandler.prototype.off,\r\n    fire: pc2d.EventHandler.prototype.fire,\r\n    once: pc2d.EventHandler.prototype.once,\r\n    hasEvent: pc2d.EventHandler.prototype.hasEvent\r\n};","Object.assign(pc2d, (function () {\r\n    var TagsCache = function (key) {\r\n        this._index = { };\r\n        this._key = key || null;\r\n    };\r\n\r\n    Object.assign(TagsCache.prototype, {\r\n        addItem: function (item) {\r\n            var tags = item.tags._list;\r\n\r\n            for (var i = 0; i < tags.length; i++)\r\n                this.add(tags[i], item);\r\n        },\r\n\r\n        removeItem: function (item) {\r\n            var tags = item.tags._list;\r\n\r\n            for (var i = 0; i < tags.length; i++)\r\n                this.remove(tags[i], item);\r\n        },\r\n\r\n        add: function (tag, item) {\r\n            // already in cache\r\n            if (this._index[tag] && this._index[tag].list.indexOf(item) !== -1)\r\n                return;\r\n\r\n            // create index for tag\r\n            if (!this._index[tag]) {\r\n                this._index[tag] = {\r\n                    list: []\r\n                };\r\n                // key indexing is available\r\n                if (this._key)\r\n                    this._index[tag].keys = { };\r\n            }\r\n\r\n            // add to index list\r\n            this._index[tag].list.push(item);\r\n\r\n            // add to index keys\r\n            if (this._key)\r\n                this._index[tag].keys[item[this._key]] = item;\r\n        },\r\n\r\n        remove: function (tag, item) {\r\n            // no index created for that tag\r\n            if (!this._index[tag])\r\n                return;\r\n\r\n            // check if item not in cache\r\n            if (this._key) {\r\n                // by key\r\n                if (!this._index[tag].keys[item[this._key]])\r\n                    return;\r\n            }\r\n\r\n            // by position in list\r\n            var ind = this._index[tag].indexOf(item);\r\n            if (ind === -1)\r\n                return;\r\n\r\n            // remove item from index list\r\n            this._index[tag].list.splice(ind, 1);\r\n\r\n            // rmeove item from index keys\r\n            if (this._key)\r\n                delete this._index[tag].keys[item[this._key]];\r\n\r\n            // if index empty, remove it\r\n            if (this._index[tag].list.length === 0)\r\n                delete this._index[tag];\r\n        },\r\n\r\n        find: function (args) {\r\n            var self = this;\r\n            var index = { };\r\n            var items = [];\r\n            var i, n, t;\r\n            var item, tag, tags, tagsRest, missingIndex;\r\n\r\n            var sort = function (a, b) {\r\n                return self._index[a].list.length - self._index[b].list.length;\r\n            };\r\n\r\n            for (i = 0; i < args.length; i++) {\r\n                tag = args[i];\r\n\r\n                if (tag instanceof Array) {\r\n                    if (tag.length === 0)\r\n                        continue;\r\n\r\n                    if (tag.length === 1) {\r\n                        tag = tag[0];\r\n                    } else {\r\n                        // check if all indexes are in present\r\n                        missingIndex = false;\r\n                        for (t = 0; t < tag.length; t++) {\r\n                            if (!this._index[tag[t]]) {\r\n                                missingIndex = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (missingIndex)\r\n                            continue;\r\n\r\n                        // sort tags by least number of matches first\r\n                        tags = tag.slice(0).sort(sort);\r\n\r\n                        // remainder of tags for `has` checks\r\n                        tagsRest = tags.slice(1);\r\n                        if (tagsRest.length === 1)\r\n                            tagsRest = tagsRest[0];\r\n\r\n                        for (n = 0; n < this._index[tags[0]].list.length; n++) {\r\n                            item = this._index[tags[0]].list[n];\r\n                            if ((this._key ? !index[item[this._key]] : (items.indexOf(item) === -1)) && item.tags.has(tagsRest)) {\r\n                                if (this._key)\r\n                                    index[item[this._key]] = true;\r\n                                items.push(item);\r\n                            }\r\n                        }\r\n\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                if (tag && typeof tag === 'string' && this._index[tag]) {\r\n                    for (n = 0; n < this._index[tag].list.length; n++) {\r\n                        item = this._index[tag].list[n];\r\n\r\n                        if (this._key) {\r\n                            if (!index[item[this._key]]) {\r\n                                index[item[this._key]] = true;\r\n                                items.push(item);\r\n                            }\r\n                        } else if (items.indexOf(item) === -1) {\r\n                            items.push(item);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return items;\r\n        }\r\n    });\r\n\r\n    var Tags = function (parent) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this._index = { };\r\n        this._list = [];\r\n        this._parent = parent;\r\n    };\r\n    Tags.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    Tags.prototype.constructor = Tags;\r\n\r\n    Object.assign(Tags.prototype, {\r\n     \r\n        add: function () {\r\n            var changed = false;\r\n            var tags = this._processArguments(arguments, true);\r\n\r\n            if (!tags.length)\r\n                return changed;\r\n\r\n            for (var i = 0; i < tags.length; i++) {\r\n                if (this._index[tags[i]])\r\n                    continue;\r\n\r\n                changed = true;\r\n\r\n                this._index[tags[i]] = true;\r\n                this._list.push(tags[i]);\r\n\r\n                this.fire('add', tags[i], this._parent);\r\n            }\r\n\r\n            if (changed)\r\n                this.fire('change', this._parent);\r\n\r\n            return changed;\r\n        },\r\n\r\n        remove: function () {\r\n            var changed = false;\r\n\r\n            if (!this._list.length)\r\n                return changed;\r\n\r\n            var tags = this._processArguments(arguments, true);\r\n\r\n            if (!tags.length)\r\n                return changed;\r\n\r\n            for (var i = 0; i < tags.length; i++) {\r\n                if (!this._index[tags[i]])\r\n                    continue;\r\n\r\n                changed = true;\r\n\r\n                delete this._index[tags[i]];\r\n                this._list.splice(this._list.indexOf(tags[i]), 1);\r\n\r\n                this.fire('remove', tags[i], this._parent);\r\n            }\r\n\r\n            if (changed)\r\n                this.fire('change', this._parent);\r\n\r\n            return changed;\r\n        },\r\n\r\n\r\n        clear: function () {\r\n            if (!this._list.length)\r\n                return;\r\n\r\n            var tags = this._list.slice(0);\r\n            this._list = [];\r\n            this._index = { };\r\n\r\n            for (var i = 0; i < tags.length; i++)\r\n                this.fire('remove', tags[i], this._parent);\r\n\r\n            this.fire('change', this._parent);\r\n        },\r\n\r\n\r\n        has: function () {\r\n            if (!this._list.length)\r\n                return false;\r\n\r\n            return this._has(this._processArguments(arguments));\r\n        },\r\n\r\n\r\n        _has: function (tags) {\r\n            if (!this._list.length || !tags.length)\r\n                return false;\r\n\r\n            for (var i = 0; i < tags.length; i++) {\r\n                if (tags[i].length === 1) {\r\n                    // single occurance\r\n                    if (this._index[tags[i][0]])\r\n                        return true;\r\n                } else {\r\n                    // combined occurance\r\n                    var multiple = true;\r\n\r\n                    for (var t = 0; t < tags[i].length; t++) {\r\n                        if (this._index[tags[i][t]])\r\n                            continue;\r\n\r\n                        multiple = false;\r\n                        break;\r\n                    }\r\n\r\n                    if (multiple)\r\n                        return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n\r\n        list: function () {\r\n            return this._list.slice(0);\r\n        },\r\n\r\n\r\n        _processArguments: function (args, flat) {\r\n            var tags = [];\r\n            var tmp = [];\r\n\r\n            if (!args || !args.length)\r\n                return tags;\r\n\r\n            for (var i = 0; i < args.length; i++) {\r\n                if (args[i] instanceof Array) {\r\n                    if (!flat)\r\n                        tmp = [];\r\n\r\n                    for (var t = 0; t < args[i].length; t++) {\r\n                        if (typeof args[i][t] !== 'string')\r\n                            continue;\r\n\r\n                        if (flat) {\r\n                            tags.push(args[i][t]);\r\n                        } else {\r\n                            tmp.push(args[i][t]);\r\n                        }\r\n                    }\r\n\r\n                    if (!flat && tmp.length)\r\n                        tags.push(tmp);\r\n                } else if (typeof args[i] === 'string') {\r\n                    if (flat) {\r\n                        tags.push(args[i]);\r\n                    } else {\r\n                        tags.push([args[i]]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return tags;\r\n        }\r\n    });\r\n\r\n  \r\n    Object.defineProperty(Tags.prototype, 'size', {\r\n        get: function () {\r\n            return this._list.length;\r\n        }\r\n    });\r\n\r\n\r\n    return {\r\n        TagsCache: TagsCache,\r\n        Tags: Tags\r\n    };\r\n}()));","/**\n * @name pc2d.math\n * @namespace\n * @description Math API.\n */\npc2d.math = {\n    /**\n     * @constant\n     * @type {number}\n     * @name pc2d.math.DEG_TO_RAD\n     * @description Conversion factor between degrees and radians.\n     * @example\n     * // Convert 180 degrees to pi radians\n     * var rad = 180 * pc2d.math.DEG_TO_RAD;\n     */\n    DEG_TO_RAD: Math.PI / 180,\n\n    /**\n     * @constant\n     * @type {number}\n     * @name pc2d.math.RAD_TO_DEG\n     * @description Conversion factor between degrees and radians.\n     * @example\n     * // Convert pi radians to 180 degrees\n     * var deg = Math.PI * pc2d.math.RAD_TO_DEG;\n     */\n    RAD_TO_DEG: 180 / Math.PI,\n\n    /**\n     * @function\n     * @name pc2d.math.clamp\n     * @description Clamp a number between min and max inclusive.\n     * @param {number} value - Number to clamp.\n     * @param {number} min - Min value.\n     * @param {number} max - Max value.\n     * @returns {number} The clamped value.\n     */\n    clamp: function (value, min, max) {\n        if (value >= max) return max;\n        if (value <= min) return min;\n        return value;\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.intToBytes24\n     * @description Convert an 24 bit integer into an array of 3 bytes.\n     * @param {number} i - Number holding an integer value.\n     * @returns {number[]} An array of 3 bytes.\n     * @example\n     * // Set bytes to [0x11, 0x22, 0x33]\n     * var bytes = pc2d.math.intToBytes24(0x112233);\n     */\n    intToBytes24: function (i) {\n        var r, g, b;\n\n        r = (i >> 16) & 0xff;\n        g = (i >> 8) & 0xff;\n        b = (i) & 0xff;\n\n        return [r, g, b];\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.intToBytes32\n     * @description Convert an 32 bit integer into an array of 4 bytes.\n     * @returns {number[]} An array of 4 bytes.\n     * @param {number} i - Number holding an integer value.\n     * @example\n     * // Set bytes to [0x11, 0x22, 0x33, 0x44]\n     * var bytes = pc2d.math.intToBytes32(0x11223344);\n     */\n    intToBytes32: function (i) {\n        var r, g, b, a;\n\n        r = (i >> 24) & 0xff;\n        g = (i >> 16) & 0xff;\n        b = (i >> 8) & 0xff;\n        a = (i) & 0xff;\n\n        return [r, g, b, a];\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.bytesToInt24\n     * @description Convert 3 8 bit Numbers into a single unsigned 24 bit Number.\n     * @example\n     * // Set result1 to 0x112233 from an array of 3 values\n     * var result1 = pc2d.math.bytesToInt24([0x11, 0x22, 0x33]);\n     *\n     * // Set result2 to 0x112233 from 3 discrete values\n     * var result2 = pc2d.math.bytesToInt24(0x11, 0x22, 0x33);\n     * @param {number} r - A single byte (0-255).\n     * @param {number} g - A single byte (0-255).\n     * @param {number} b - A single byte (0-255).\n     * @returns {number} A single unsigned 24 bit Number.\n     */\n    bytesToInt24: function (r, g, b) {\n        if (r.length) {\n            b = r[2];\n            g = r[1];\n            r = r[0];\n        }\n        return ((r << 16) | (g << 8) | b);\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.bytesToInt32\n     * @description Convert 4 1-byte Numbers into a single unsigned 32bit Number.\n     * @returns {number} A single unsigned 32bit Number.\n     * @example\n     * // Set result1 to 0x11223344 from an array of 4 values\n     * var result1 = pc2d.math.bytesToInt32([0x11, 0x22, 0x33, 0x44]);\n     *\n     * // Set result2 to 0x11223344 from 4 discrete values\n     * var result2 = pc2d.math.bytesToInt32(0x11, 0x22, 0x33, 0x44);\n     * @param {number} r - A single byte (0-255).\n     * @param {number} g - A single byte (0-255).\n     * @param {number} b - A single byte (0-255).\n     * @param {number} a - A single byte (0-255).\n     */\n    bytesToInt32: function (r, g, b, a) {\n        if (r.length) {\n            a = r[3];\n            b = r[2];\n            g = r[1];\n            r = r[0];\n        }\n        // Why ((r << 24)>>>32)?\n        // << operator uses signed 32 bit numbers, so 128<<24 is negative.\n        // >>> used unsigned so >>>32 converts back to an unsigned.\n        // See http://stackoverflow.com/questions/1908492/unsigned-integer-in-javascript\n        return ((r << 24) | (g << 16) | (b << 8) | a) >>> 32;\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.lerp\n     * @returns {number} The linear interpolation of two numbers.\n     * @description Calculates the linear interpolation of two numbers.\n     * @param {number} a - Number to linearly interpolate from.\n     * @param {number} b - Number to linearly interpolate to.\n     * @param {number} alpha - The value controlling the result of interpolation. When alpha is 0,\n     * a is returned. When alpha is 1, b is returned. Between 0 and 1, a linear interpolation between\n     * a and b is returned. alpha is clamped between 0 and 1.\n     */\n    lerp: function (a, b, alpha) {\n        return a + (b - a) * pc2d.math.clamp(alpha, 0, 1);\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.lerpAngle\n     * @description Calculates the linear interpolation of two angles ensuring that interpolation\n     * is correctly performed across the 360 to 0 degree boundary. Angles are supplied in degrees.\n     * @returns {number} The linear interpolation of two angles.\n     * @param {number} a - Angle (in degrees) to linearly interpolate from.\n     * @param {number} b - Angle (in degrees) to linearly interpolate to.\n     * @param {number} alpha - The value controlling the result of interpolation. When alpha is 0,\n     * a is returned. When alpha is 1, b is returned. Between 0 and 1, a linear interpolation between\n     * a and b is returned. alpha is clamped between 0 and 1.\n     */\n    lerpAngle: function (a, b, alpha) {\n        if (b - a > 180 ) {\n            b -= 360;\n        }\n        if (b - a < -180 ) {\n            b += 360;\n        }\n        return pc2d.math.lerp(a, b, pc2d.math.clamp(alpha, 0, 1));\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.powerOfTwo\n     * @description Returns true if argument is a power-of-two and false otherwise.\n     * @param {number} x - Number to check for power-of-two property.\n     * @returns {boolean} True if power-of-two and false otherwise.\n     */\n    powerOfTwo: function (x) {\n        return ((x !== 0) && !(x & (x - 1)));\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.nextPowerOfTwo\n     * @description Returns the next power of 2 for the specified value.\n     * @param {number} val - The value for which to calculate the next power of 2.\n     * @returns {number} The next power of 2.\n     */\n    nextPowerOfTwo: function (val) {\n        val--;\n        val |= (val >> 1);\n        val |= (val >> 2);\n        val |= (val >> 4);\n        val |= (val >> 8);\n        val |= (val >> 16);\n        val++;\n        return val;\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.random\n     * @description Return a pseudo-random number between min and max.\n     * The number generated is in the range [min, max), that is inclusive of the minimum but exclusive of the maximum.\n     * @param {number} min - Lower bound for range.\n     * @param {number} max - Upper bound for range.\n     * @returns {number} Pseudo-random number between the supplied range.\n     */\n    random: function (min, max) {\n        var diff = max - min;\n        return Math.random() * diff + min;\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.smoothstep\n     * @description The function interpolates smoothly between two input values based on\n     * a third one that should be between the first two. The returned value is clamped\n     * between 0 and 1.\n     * <br/>The slope (i.e. derivative) of the smoothstep function starts at 0 and ends at 0.\n     * This makes it easy to create a sequence of transitions using smoothstep to interpolate\n     * each segment rather than using a more sophisticated or expensive interpolation technique.\n     * <br/>See http://en.wikipedia.org/wiki/Smoothstep for more details.\n     * @param {number} min - The lower bound of the interpolation range.\n     * @param {number} max - The upper bound of the interpolation range.\n     * @param {number} x - The value to interpolate.\n     * @returns {number} The smoothly interpolated value clamped between zero and one.\n     */\n    smoothstep: function (min, max, x) {\n        if (x <= min) return 0;\n        if (x >= max) return 1;\n\n        x = (x - min) / (max - min);\n\n        return x * x * (3 - 2 * x);\n    },\n\n    /**\n     * @function\n     * @name pc2d.math.smootherstep\n     * @description An improved version of the pc2d.math.smoothstep function which has zero\n     * 1st and 2nd order derivatives at t=0 and t=1.\n     * <br/>See http://en.wikipedia.org/wiki/Smoothstep for more details.\n     * @param {number} min - The lower bound of the interpolation range.\n     * @param {number} max - The upper bound of the interpolation range.\n     * @param {number} x - The value to interpolate.\n     * @returns {number} The smoothly interpolated value clamped between zero and one.\n     */\n    smootherstep: function (min, max, x) {\n        if (x <= min) return 0;\n        if (x >= max) return 1;\n\n        x = (x - min) / (max - min);\n\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n};\n","Object.assign(pc2d, (function () {\n    'use strict';\n\n    /**\n     * @constant\n     * @type {number}\n     * @name pc2d.CURVE_LINEAR\n     * @description A linear interpolation scheme.\n     */\n    var CURVE_LINEAR = 0;\n    /**\n     * @constant\n     * @type {number}\n     * @name pc2d.CURVE_SMOOTHSTEP\n     * @description A smooth step interpolation scheme.\n     */\n    var CURVE_SMOOTHSTEP = 1;\n    /**\n     * @deprecated\n     * @constant\n     * @type {number}\n     * @name pc2d.CURVE_CATMULL\n     * @description A Catmull-Rom spline interpolation scheme. This interpolation scheme is deprecated. Use CURVE_SPLINE instead.\n     */\n    var CURVE_CATMULL = 2;\n    /**\n     * @deprecated\n     * @constant\n     * @type {number}\n     * @name pc2d.CURVE_CARDINAL\n     * @description A cardinal spline interpolation scheme. This interpolation scheme is deprecated. Use CURVE_SPLINE instead.\n     */\n    var CURVE_CARDINAL = 3;\n    /**\n     * @constant\n     * @type {number}\n     * @name pc2d.CURVE_SPLINE\n     * @description Cardinal spline interpolation scheme. For Catmull-Rom, specify curve tension 0.5.\n     */\n    var CURVE_SPLINE = 4;\n    /**\n     * @constant\n     * @type {number}\n     * @name pc2d.CURVE_STEP\n     * @description A stepped interpolater, free from the shackles of blending.\n     */\n    var CURVE_STEP = 5;\n\n    /**\n     * @class\n     * @name pc2d.Curve\n     * @classdesc A curve is a collection of keys (time/value pairs). The shape of the\n     * curve is defined by its type that specifies an interpolation scheme for the keys.\n     * @description Creates a new curve.\n     * @param {number[]} [data] - An array of keys (pairs of numbers with the time first and\n     * value second).\n     * @property {number} length The number of keys in the curve. [read only].\n     * @property {number} type The curve interpolation scheme. Can be:\n     *\n     * * {@link pc2d.CURVE_LINEAR}\n     * * {@link pc2d.CURVE_SMOOTHSTEP}\n     * * {@link pc2d.CURVE_SPLINE}\n     * * {@link pc2d.CURVE_STEP}\n     *\n     * Defaults to {@link pc2d.CURVE_SMOOTHSTEP}.\n     */\n    var Curve = function (data) {\n        this.keys = [];\n        this.type = CURVE_SMOOTHSTEP;\n        this.tension = 0.5; // used for CURVE_CARDINAL\n        this._eval = new pc2d.CurveEvaluator(this);\n\n        if (data) {\n            for (var i = 0; i < data.length - 1; i += 2) {\n                this.keys.push([data[i], data[i + 1]]);\n            }\n        }\n\n        this.sort();\n    };\n\n    Object.assign(Curve.prototype, {\n        /**\n         * @function\n         * @name pc2d.Curve#add\n         * @description Add a new key to the curve.\n         * @param {number} time - Time to add new key.\n         * @param {number} value - Value of new key.\n         * @returns {number[]} [time, value] pair.\n         */\n        add: function (time, value) {\n            var keys = this.keys;\n            var len = keys.length;\n            var i = 0;\n\n            for (; i < len; i++) {\n                if (keys[i][0] > time) {\n                    break;\n                }\n            }\n\n            var key = [time, value];\n            this.keys.splice(i, 0, key);\n            return key;\n        },\n\n        /**\n         * @function\n         * @name pc2d.Curve#get\n         * @description Return a specific key.\n         * @param {number} index - The index of the key to return.\n         * @returns {number[]} The key at the specified index.\n         */\n        get: function (index) {\n            return this.keys[index];\n        },\n\n        /**\n         * @function\n         * @name pc2d.Curve#sort\n         * @description Sort keys by time.\n         */\n        sort: function () {\n            this.keys.sort(function (a, b) {\n                return a[0] - b[0];\n            });\n        },\n\n        /**\n         * @function\n         * @name pc2d.Curve#value\n         * @description Returns the interpolated value of the curve at specified time.\n         * @param {number} time - The time at which to calculate the value.\n         * @returns {number} The interpolated value.\n         */\n        value: function (time) {\n            // we for the evaluation because keys may have changed since the last evaluate\n            // (we can't know)\n            return this._eval.evaluate(time, true);\n        },\n\n        closest: function (time) {\n            var keys = this.keys;\n            var length = keys.length;\n            var min = 2;\n            var result = null;\n\n            for (var i = 0; i < length; i++) {\n                var diff = Math.abs(time - keys[i][0]);\n                if (min >= diff) {\n                    min = diff;\n                    result = keys[i];\n                } else {\n                    break;\n                }\n            }\n\n            return result;\n        },\n\n        /**\n         * @function\n         * @name pc2d.Curve#clone\n         * @description Returns a clone of the specified curve object.\n         * @returns {pc2d.Curve} A clone of the specified curve.\n         */\n        clone: function () {\n            var result = new pc2d.Curve();\n            result.keys = pc2d.extend(result.keys, this.keys);\n            result.type = this.type;\n            result.tension = this.tension;\n            return result;\n        },\n\n        /**\n         * @private\n         * @function\n         * @name pc2d.Curve#quantize\n         * @description Sample the curve at regular intervals over the range [0..1].\n         * @param {number} precision - The number of samples to return.\n         * @returns {Float32Array} The set of quantized values.\n         */\n        quantize: function (precision) {\n            precision = Math.max(precision, 2);\n\n            var values = new Float32Array(precision);\n            var step = 1.0 / (precision - 1);\n\n            // quantize graph to table of interpolated values\n            values[0] = this._eval.evaluate(0, true);\n            for (var i = 1; i < precision; i++) {\n                values[i] = this._eval.evaluate(step * i);\n            }\n\n            return values;\n        },\n\n        /**\n         * @private\n         * @function\n         * @name pc2d.Curve#quantizeClamped\n         * @description Sample the curve at regular intervals over the range [0..1]\n         * and clamp the resulting samples to [min..max].\n         * @param {number} precision - The number of samples to return.\n         * @param {number} min - The minimum output value.\n         * @param {number} max - The maximum output value.\n         * @returns {Float32Array} The set of quantized values.\n         */\n        quantizeClamped: function (precision, min, max) {\n            var result = this.quantize(precision);\n            for (var i = 0; i < result.length; ++i) {\n                result[i] = Math.min(max, Math.max(min, result[i]));\n            }\n            return result;\n        }\n    });\n\n    Object.defineProperty(Curve.prototype, 'length', {\n        get: function () {\n            return this.keys.length;\n        }\n    });\n\n    return {\n        Curve: Curve,\n        CURVE_LINEAR: CURVE_LINEAR,\n        CURVE_SMOOTHSTEP: CURVE_SMOOTHSTEP,\n        CURVE_CATMULL: CURVE_CATMULL,\n        CURVE_CARDINAL: CURVE_CARDINAL,\n        CURVE_SPLINE: CURVE_SPLINE,\n        CURVE_STEP: CURVE_STEP\n    };\n}()));\n","Object.assign(pc2d, (function () {\n    'use strict';\n\n    /**\n     * @class\n     * @name pc2d.CurveSet\n     * @classdesc A curve set is a collection of curves.\n     * @description Creates a new curve set.\n     * @param {Array<number[]>} [curveKeys] - An array of arrays of keys (pairs of numbers with\n     * the time first and value second).\n     */\n    var CurveSet = function () {\n        var i;\n\n        this.curves = [];\n        this._type = pc2d.CURVE_SMOOTHSTEP;\n\n        if (arguments.length > 1) {\n            for (i = 0; i < arguments.length; i++) {\n                this.curves.push(new pc2d.Curve(arguments[i]));\n            }\n        } else {\n            if (arguments.length === 0) {\n                this.curves.push(new pc2d.Curve());\n            } else {\n                var arg = arguments[0];\n                if (pc2d.type(arg) === 'number') {\n                    for (i = 0; i < arg; i++) {\n                        this.curves.push(new pc2d.Curve());\n                    }\n                } else {\n                    for (i = 0; i < arg.length; i++) {\n                        this.curves.push(new pc2d.Curve(arg[i]));\n                    }\n                }\n            }\n        }\n    };\n\n    Object.assign(CurveSet.prototype, {\n        /**\n         * @function\n         * @name pc2d.CurveSet#get\n         * @description Return a specific curve in the curve set.\n         * @param {number} index - The index of the curve to return.\n         * @returns {pc2d.Curve} The curve at the specified index.\n         */\n        get: function (index) {\n            return this.curves[index];\n        },\n\n        /**\n         * @function\n         * @name pc2d.CurveSet#value\n         * @description Returns the interpolated value of all curves in the curve\n         * set at the specified time.\n         * @param {number} time - The time at which to calculate the value.\n         * @param {number[]} [result] - The interpolated curve values at the specified time.\n         * If this parameter is not supplied, the function allocates a new array internally\n         * to return the result.\n         * @returns {number[]} The interpolated curve values at the specified time.\n         */\n        value: function (time, result) {\n            var length = this.curves.length;\n            result = result || [];\n            result.length = length;\n\n            for (var i = 0; i < length; i++) {\n                result[i] = this.curves[i].value(time);\n            }\n\n            return result;\n        },\n\n        /**\n         * @function\n         * @name pc2d.CurveSet#clone\n         * @description Returns a clone of the specified curve set object.\n         * @returns {pc2d.CurveSet} A clone of the specified curve set.\n         */\n        clone: function () {\n            var result = new pc2d.CurveSet();\n\n            result.curves = [];\n            for (var i = 0; i < this.curves.length; i++) {\n                result.curves.push(this.curves[i].clone());\n            }\n\n            result._type = this._type;\n\n            return result;\n        },\n\n        quantize: function (precision) {\n            precision = Math.max(precision, 2);\n\n            var numCurves = this.curves.length;\n            var values = new Float32Array(precision * numCurves);\n            var step = 1.0 / (precision - 1);\n\n            for (var c = 0; c < numCurves; c++) {\n                var ev = new pc2d.CurveEvaluator(this.curves[c]);\n                for (var i = 0; i < precision; i++) { // quantize graph to table of interpolated values\n                    values[i * numCurves + c] = ev.evaluate(step * i);\n                }\n            }\n\n            return values;\n        },\n\n        /**\n         * @private\n         * @function\n         * @name pc2d.CurveSet#quantizeClamped\n         * @description This function will sample the curveset at regular intervals\n         * over the range [0..1] and clamp the result to min and max.\n         * @param {number} precision - The number of samples to return.\n         * @param {number} min - The minimum output value.\n         * @param {number} max - The maximum output value.\n         * @returns {number[]} The set of quantized values.\n         */\n        quantizeClamped: function (precision, min, max) {\n            var result = this.quantize(precision);\n            for (var i = 0; i < result.length; ++i) {\n                result[i] = Math.min(max, Math.max(min, result[i]));\n            }\n            return result;\n        }\n    });\n\n    /**\n     * @readonly\n     * @name pc2d.CurveSet#length\n     * @type {number}\n     * @description The number of curves in the curve set.\n     */\n    Object.defineProperty(CurveSet.prototype, 'length', {\n        get: function () {\n            return this.curves.length;\n        }\n    });\n\n    /**\n     * @name pc2d.CurveSet#type\n     * @type {number}\n     * @description The interpolation scheme applied to all curves in the curve set. Can be:\n     *\n     * * {@link pc2d.CURVE_LINEAR}\n     * * {@link pc2d.CURVE_SMOOTHSTEP}\n     * * {@link pc2d.CURVE_SPLINE}\n     * * {@link pc2d.CURVE_STEP}\n     *\n     * Defaults to {@link pc2d.CURVE_SMOOTHSTEP}.\n     */\n    Object.defineProperty(CurveSet.prototype, 'type', {\n        get: function () {\n            return this._type;\n        },\n\n        set: function (value) {\n            this._type = value;\n            for (var i = 0; i < this.curves.length; i++) {\n                this.curves[i].type = value;\n            }\n        }\n    });\n\n    return {\n        CurveSet: CurveSet\n    };\n}()));\n","Object.assign(pc2d, (function () {\n    'use strict';\n\n    var CurveEvaluator = function (curve, time) {\n        this._curve = curve;\n        this._left = -Infinity;\n        this._right = Infinity;\n        this._recip = 0;\n        this._p0 = 0;\n        this._p1 = 0;\n        this._m0 = 0;\n        this._m1 = 0;\n        this._reset(time || 0);\n    };\n\n    Object.assign(CurveEvaluator.prototype, {\n\n        // Evaluate the curve at the given time. Specify forceReset if the\n        // underlying curve keys have changed since the last evaluation.\n        evaluate: function (time, forceReset) {\n            if (forceReset || time < this._left || time >= this._right) {\n                this._reset(time);\n            }\n\n            var result;\n\n            var type = this._curve.type;\n            if (type === pc2d.CURVE_STEP) {\n                // step\n                result = this._p0;\n            } else {\n                // calculate normalized t\n                var t = (this._recip === 0) ? 0 : (time - this._left) * this._recip;\n\n                if (type === pc2d.CURVE_LINEAR) {\n                    // linear\n                    result = pc2d.math.lerp(this._p0, this._p1, t);\n                } else if (type === pc2d.CURVE_SMOOTHSTEP) {\n                    // smoothstep\n                    result = pc2d.math.lerp(this._p0, this._p1, t * t * (3 - 2 * t));\n                } else {\n                    // curve\n                    result = this._evaluateHermite(this._p0, this._p1, this._m0, this._m1, t);\n                }\n            }\n            return result;\n        },\n\n        // Calculate weights for the curve interval at the given time\n        _reset: function (time) {\n            var keys = this._curve.keys;\n            var len = keys.length;\n\n            if (!len) {\n                // curve is empty\n                this._left = -Infinity;\n                this._right = Infinity;\n                this._recip = 0;\n                this._p0 = this._p1 = this._m0 = this._m1 = 0;\n            } else {\n                if (time < keys[0][0]) {\n                    // iterator falls to the left of the start of the curve\n                    this._left = -Infinity;\n                    this._right = keys[0][0];\n                    this._recip = 0;\n                    this._p0 = this._p1 = keys[0][1];\n                    this._m0 = this._m1 = 0;\n                } else if (time >= keys[len - 1][0]) {\n                    // iterator falls to the right of the end of the curve\n                    this._left = keys[len - 1][0];\n                    this._right = Infinity;\n                    this._recip = 0;\n                    this._p0 = this._p1 = keys[len - 1][1];\n                    this._m0 = this._m1 = 0;\n                } else {\n                    // iterator falls within the bounds of the curve\n                    // perform a linear search for the key just left of the current time.\n                    // (TODO: for cases where the curve has more than 'n' keys it will\n                    // be more efficient to perform a binary search here instead. Which is\n                    // straight forward thanks to the sorted list of knots).\n                    var index = 0;\n                    while (time >= keys[index + 1][0]) {\n                        index++;\n                    }\n                    this._left = keys[index][0];\n                    this._right = keys[index + 1][0];\n                    var diff = 1.0 / (this._right - this._left);\n                    this._recip = (isFinite(diff) ? diff : 0);\n                    this._p0 = keys[index][1];\n                    this._p1 = keys[index + 1][1];\n                    if (this._isHermite()) {\n                        this._calcTangents(keys, index);\n                    }\n                }\n            }\n        },\n\n        // returns true if the curve is a hermite and false otherwise\n        _isHermite: function () {\n            return this._curve.type === pc2d.CURVE_CATMULL ||\n                   this._curve.type === pc2d.CURVE_CARDINAL ||\n                   this._curve.type === pc2d.CURVE_SPLINE;\n        },\n\n        // calculate tangents for the hermite curve\n        _calcTangents: function (keys, index) {\n            var a;\n            var b = keys[index];\n            var c = keys[index + 1];\n            var d;\n\n            if (index === 0) {\n                a = [keys[0][0] + (keys[0][0] - keys[1][0]),\n                    keys[0][1] + (keys[0][1] - keys[1][1])];\n            } else {\n                a = keys[index - 1];\n            }\n\n            if (index == keys.length - 2) {\n                d = [keys[index + 1][0] + (keys[index + 1][0] - keys[index][0]),\n                    keys[index + 1][1] + (keys[index + 1][1] - keys[index][1])];\n            } else {\n                d = keys[index + 2];\n            }\n\n            if (this._curve.type === pc2d.CURVE_SPLINE) {\n                // calculate tangent scale (due to non-uniform knot spacing)\n                var s1_ = 2 * (c[0] - b[0]) / (c[0] - a[0]);\n                var s2_ = 2 * (c[0] - b[0]) / (d[0] - b[0]);\n\n                this._m0 = this._curve.tension * (isFinite(s1_) ? s1_ : 0) * (c[1] - a[1]);\n                this._m1 = this._curve.tension * (isFinite(s2_) ? s2_ : 0) * (d[1] - b[1]);\n            } else {\n                // original tangent scale calc\n                var s1 = (c[0] - b[0]) / (b[0] - a[0]);\n                var s2 = (c[0] - b[0]) / (d[0] - c[0]);\n\n                var a_ = b[1] + (a[1] - b[1]) * (isFinite(s1) ? s1 : 0);\n                var d_ = c[1] + (d[1] - c[1]) * (isFinite(s2) ? s2 : 0);\n\n                var tension = (this._curve.type === pc2d.CURVE_CATMULL) ? 0.5 : this._curve.tension;\n\n                this._m0 = tension * (c[1] - a_);\n                this._m1 = tension * (d_ - b[1]);\n            }\n        },\n\n        _evaluateHermite: function (p0, p1, m0, m1, t) {\n            var t2 = t * t;\n            var twot = t + t;\n            var omt = 1 - t;\n            var omt2 = omt * omt;\n            return p0 * ((1 + twot) * omt2) +\n                   m0 * (t * omt2) +\n                   p1 * (t2 * (3 - twot)) +\n                   m1 * (t2 * (t - 1));\n        }\n    });\n\n    return {\n        CurveEvaluator: CurveEvaluator\n    };\n}()));\n","Object.assign(pc2d, (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @class\r\n     * @name pc2d.Vec2\r\n     * @classdesc A 2-dimensional vector.\r\n     * @description Creates a new Vec2 object.\r\n     * @param {number|number[]} [x] - The x value. If x is an array of length 2, the array will be used to populate all components.\r\n     * @param {number} [y] - The y value.\r\n     * @example\r\n     * var v = new pc2d.Vec2(1, 2);\r\n     */\r\n    var Vec2 = function (x, y) {\r\n        if (x && x.length === 2) {\r\n            this.x = x[0];\r\n            this.y = x[1];\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n        }\r\n    };\r\n\r\n    Object.assign(Vec2.prototype, {\r\n\r\n        add: function (rhs) {\r\n            this.x += rhs.x;\r\n            this.y += rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n\r\n        add2: function (lhs, rhs) {\r\n            this.x = lhs.x + rhs.x;\r\n            this.y = lhs.y + rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#clone\r\n         * @description Returns an identical copy of the specified 2-dimensional vector.\r\n         * @returns {pc2d.Vec2} A 2-dimensional vector containing the result of the cloning.\r\n         * @example\r\n         * var v = new pc2d.Vec2(10, 20);\r\n         * var vclone = v.clone();\r\n         * console.log(\"The result of the cloning is: \" + vclone.toString());\r\n         */\r\n        clone: function () {\r\n            return new Vec2().copy(this);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#copy\r\n         * @description Copied the contents of a source 2-dimensional vector to a destination 2-dimensional vector.\r\n         * @param {pc2d.Vec2} rhs - A vector to copy to the specified vector.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var src = new pc2d.Vec2(10, 20);\r\n         * var dst = new pc2d.Vec2();\r\n         *\r\n         * dst.copy(src);\r\n         *\r\n         * console.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\r\n         */\r\n        copy: function (rhs) {\r\n            this.x = rhs.x;\r\n            this.y = rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#distance\r\n         * @description Returns the distance between the two specified 2-dimensional vectors.\r\n         * @param {pc2d.Vec2} rhs - The second 2-dimensional vector to test.\r\n         * @returns {number} The distance between the two vectors.\r\n         * @example\r\n         * var v1 = new pc2d.Vec2(5, 10);\r\n         * var v2 = new pc2d.Vec2(10, 20);\r\n         * var d = v1.distance(v2);\r\n         * console.log(\"The between v1 and v2 is: \" + d);\r\n         */\r\n        distance: function (rhs) {\r\n            var x = this.x - rhs.x;\r\n            var y = this.y - rhs.y;\r\n            return Math.sqrt(x * x + y * y);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#dot\r\n         * @description Returns the result of a dot product operation performed on the two specified 2-dimensional vectors.\r\n         * @param {pc2d.Vec2} rhs - The second 2-dimensional vector operand of the dot product.\r\n         * @returns {number} The result of the dot product operation.\r\n         * @example\r\n         * var v1 = new pc2d.Vec2(5, 10);\r\n         * var v2 = new pc2d.Vec2(10, 20);\r\n         * var v1dotv2 = v1.dot(v2);\r\n         * console.log(\"The result of the dot product is: \" + v1dotv2);\r\n         */\r\n        dot: function (rhs) {\r\n            return this.x * rhs.x + this.y * rhs.y;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#equals\r\n         * @description Reports whether two vectors are equal.\r\n         * @param {pc2d.Vec2} rhs - The vector to compare to the specified vector.\r\n         * @returns {boolean} True if the vectors are equal and false otherwise.\r\n         * @example\r\n         * var a = new pc2d.Vec2(1, 2);\r\n         * var b = new pc2d.Vec2(4, 5);\r\n         * console.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\r\n         */\r\n        equals: function (rhs) {\r\n            return this.x === rhs.x && this.y === rhs.y;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#length\r\n         * @description Returns the magnitude of the specified 2-dimensional vector.\r\n         * @returns {number} The magnitude of the specified 2-dimensional vector.\r\n         * @example\r\n         * var vec = new pc2d.Vec2(3, 4);\r\n         * var len = vec.length();\r\n         * // Should output 5\r\n         * console.log(\"The length of the vector is: \" + len);\r\n         */\r\n        length: function () {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#lengthSq\r\n         * @description Returns the magnitude squared of the specified 2-dimensional vector.\r\n         * @returns {number} The magnitude of the specified 2-dimensional vector.\r\n         * @example\r\n         * var vec = new pc2d.Vec2(3, 4);\r\n         * var len = vec.lengthSq();\r\n         * // Should output 25\r\n         * console.log(\"The length squared of the vector is: \" + len);\r\n         */\r\n        lengthSq: function () {\r\n            return this.x * this.x + this.y * this.y;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#lerp\r\n         * @description Returns the result of a linear interpolation between two specified 2-dimensional vectors.\r\n         * @param {pc2d.Vec2} lhs - The 2-dimensional to interpolate from.\r\n         * @param {pc2d.Vec2} rhs - The 2-dimensional to interpolate to.\r\n         * @param {number} alpha - The value controlling the point of interpolation. Between 0 and 1, the linear interpolant\r\n         * will occur on a straight line between lhs and rhs. Outside of this range, the linear interpolant will occur on\r\n         * a ray extrapolated from this line.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec2(0, 0);\r\n         * var b = new pc2d.Vec2(10, 10);\r\n         * var r = new pc2d.Vec2();\r\n         *\r\n         * r.lerp(a, b, 0);   // r is equal to a\r\n         * r.lerp(a, b, 0.5); // r is 5, 5\r\n         * r.lerp(a, b, 1);   // r is equal to b\r\n         */\r\n        lerp: function (lhs, rhs, alpha) {\r\n            this.x = lhs.x + alpha * (rhs.x - lhs.x);\r\n            this.y = lhs.y + alpha * (rhs.y - lhs.y);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#mul\r\n         * @description Multiplies a 2-dimensional vector to another in place.\r\n         * @param {pc2d.Vec2} rhs - The 2-dimensional vector used as the second multiplicand of the operation.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec2(2, 3);\r\n         * var b = new pc2d.Vec2(4, 5);\r\n         *\r\n         * a.mul(b);\r\n         *\r\n         * // Should output 8, 15\r\n         * console.log(\"The result of the multiplication is: \" + a.toString());\r\n         */\r\n        mul: function (rhs) {\r\n            this.x *= rhs.x;\r\n            this.y *= rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#mul2\r\n         * @description Returns the result of multiplying the specified 2-dimensional vectors together.\r\n         * @param {pc2d.Vec2} lhs - The 2-dimensional vector used as the first multiplicand of the operation.\r\n         * @param {pc2d.Vec2} rhs - The 2-dimensional vector used as the second multiplicand of the operation.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec2(2, 3);\r\n         * var b = new pc2d.Vec2(4, 5);\r\n         * var r = new pc2d.Vec2();\r\n         *\r\n         * r.mul2(a, b);\r\n         *\r\n         * // Should output 8, 15\r\n         * console.log(\"The result of the multiplication is: \" + r.toString());\r\n         */\r\n        mul2: function (lhs, rhs) {\r\n            this.x = lhs.x * rhs.x;\r\n            this.y = lhs.y * rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#normalize\r\n         * @description Returns this 2-dimensional vector converted to a unit vector in place.\r\n         * If the vector has a length of zero, the vector's elements will be set to zero.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec2(25, 0);\r\n         *\r\n         * v.normalize();\r\n         *\r\n         * // Should output 1, 0\r\n         * console.log(\"The result of the vector normalization is: \" + v.toString());\r\n         */\r\n        normalize: function () {\r\n            var lengthSq = this.x * this.x + this.y * this.y;\r\n            if (lengthSq > 0) {\r\n                var invLength = 1 / Math.sqrt(lengthSq);\r\n                this.x *= invLength;\r\n                this.y *= invLength;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#scale\r\n         * @description Scales each component of the specified 2-dimensional vector by the supplied\r\n         * scalar value.\r\n         * @param {number} scalar - The value by which each vector component is multiplied.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec2(2, 4);\r\n         *\r\n         * // Multiply by 2\r\n         * v.scale(2);\r\n         *\r\n         * // Negate\r\n         * v.scale(-1);\r\n         *\r\n         * // Divide by 2\r\n         * v.scale(0.5);\r\n         */\r\n        scale: function (scalar) {\r\n            this.x *= scalar;\r\n            this.y *= scalar;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#set\r\n         * @description Sets the specified 2-dimensional vector to the supplied numerical values.\r\n         * @param {number} x - The value to set on the first component of the vector.\r\n         * @param {number} y - The value to set on the second component of the vector.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec2();\r\n         * v.set(5, 10);\r\n         *\r\n         * // Should output 5, 10\r\n         * console.log(\"The result of the vector set is: \" + v.toString());\r\n         */\r\n        set: function (x, y) {\r\n            this.x = x;\r\n            this.y = y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#sub\r\n         * @description Subtracts a 2-dimensional vector from another in place.\r\n         * @param {pc2d.Vec2} rhs - The vector to add to the specified vector.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec2(10, 10);\r\n         * var b = new pc2d.Vec2(20, 20);\r\n         *\r\n         * a.sub(b);\r\n         *\r\n         * // Should output [-10, -10]\r\n         * console.log(\"The result of the addition is: \" + a.toString());\r\n         */\r\n        sub: function (rhs) {\r\n            this.x -= rhs.x;\r\n            this.y -= rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#sub2\r\n         * @description Subtracts two 2-dimensional vectors from one another and returns the result.\r\n         * @param {pc2d.Vec2} lhs - The first vector operand for the addition.\r\n         * @param {pc2d.Vec2} rhs - The second vector operand for the addition.\r\n         * @returns {pc2d.Vec2} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec2(10, 10);\r\n         * var b = new pc2d.Vec2(20, 20);\r\n         * var r = new pc2d.Vec2();\r\n         *\r\n         * r.sub2(a, b);\r\n         *\r\n         * // Should output [-10, -10]\r\n         * console.log(\"The result of the addition is: \" + r.toString());\r\n         */\r\n        sub2: function (lhs, rhs) {\r\n            this.x = lhs.x - rhs.x;\r\n            this.y = lhs.y - rhs.y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec2#toString\r\n         * @description Converts the vector to string form.\r\n         * @returns {string} The vector in string form.\r\n         * @example\r\n         * var v = new pc2d.Vec2(20, 10);\r\n         * // Should output '[20, 10]'\r\n         * console.log(v.toString());\r\n         */\r\n        toString: function () {\r\n            return '[' + this.x + ', ' + this.y + ']';\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @field\r\n     * @name pc2d.Vec2#x\r\n     * @type {number}\r\n     * @description The first element of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec2(10, 20);\r\n     *\r\n     * // Get x\r\n     * var x = vec.x;\r\n     *\r\n     * // Set x\r\n     * vec.x = 0;\r\n     */\r\n    /**\r\n     * @field\r\n     * @name pc2d.Vec2#y\r\n     * @type {number}\r\n     * @description The second element of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec2(10, 20);\r\n     *\r\n     * // Get y\r\n     * var y = vec.y;\r\n     *\r\n     * // Set y\r\n     * vec.y = 0;\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec2.ONE\r\n     * @type {pc2d.Vec2}\r\n     * @description A constant vector set to [1, 1].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec2.RIGHT\r\n     * @type {pc2d.Vec2}\r\n     * @description A constant vector set to [1, 0].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec2.LEFT\r\n     * @type {pc2d.Vec2}\r\n     * @description A constant vector set to [-1, 0].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec2.UP\r\n     * @type {pc2d.Vec2}\r\n     * @description A constant vector set to [0, 1].\r\n     */\r\n\r\n     /**\r\n      * @field\r\n      * @static\r\n      * @readonly\r\n      * @name pc2d.Vec2.DOWN\r\n      * @type {pc2d.Vec2}\r\n      * @description A constant vector set to [0, -1].\r\n      */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec2.ZERO\r\n     * @type {pc2d.Vec2}\r\n     * @description A constant vector set to [0, 0].\r\n     */\r\n\r\n    Object.defineProperties(Vec2, {\r\n        ZERO: { value: new Vec2(0, 0) },\r\n        ONE: { value: new Vec2(1, 1) },\r\n        UP: { value: new Vec2(0, 1) },\r\n        DOWN: { value: new Vec2(0, -1) },\r\n        RIGHT: { value: new Vec2(1, 0) },\r\n        LEFT: { value: new Vec2(-1, 0) }\r\n    });\r\n\r\n    return {\r\n        Vec2: Vec2\r\n    };\r\n}()));\r\n","Object.assign(pc2d, (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @class\r\n     * @name pc2d.Vec3\r\n     * @classdesc A 3-dimensional vector.\r\n     * @description Creates a new Vec3 object.\r\n     * @param {number|number[]} [x] - The x value. If x is an array of length 3, the array will be used to populate all components.\r\n     * @param {number} [y] - The y value.\r\n     * @param {number} [z] - The z value.\r\n     * @example\r\n     * var v = new pc2d.Vec3(1, 2, 3);\r\n     */\r\n    var Vec3 = function (x, y, z) {\r\n        if (x && x.length === 3) {\r\n            this.x = x[0];\r\n            this.y = x[1];\r\n            this.z = x[2];\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n        }\r\n    };\r\n\r\n    Object.assign(Vec3.prototype, {\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#add\r\n         * @description Adds a 3-dimensional vector to another in place.\r\n         * @param {pc2d.Vec3} rhs - The vector to add to the specified vector.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(10, 10, 10);\r\n         * var b = new pc2d.Vec3(20, 20, 20);\r\n         *\r\n         * a.add(b);\r\n         *\r\n         * // Should output [30, 30, 30]\r\n         * console.log(\"The result of the addition is: \" + a.toString());\r\n         */\r\n        add: function (rhs) {\r\n            this.x += rhs.x;\r\n            this.y += rhs.y;\r\n            this.z += rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#add2\r\n         * @description Adds two 3-dimensional vectors together and returns the result.\r\n         * @param {pc2d.Vec3} lhs - The first vector operand for the addition.\r\n         * @param {pc2d.Vec3} rhs - The second vector operand for the addition.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(10, 10, 10);\r\n         * var b = new pc2d.Vec3(20, 20, 20);\r\n         * var r = new pc2d.Vec3();\r\n         *\r\n         * r.add2(a, b);\r\n         * // Should output [30, 30, 30]\r\n         *\r\n         * console.log(\"The result of the addition is: \" + r.toString());\r\n         */\r\n        add2: function (lhs, rhs) {\r\n            this.x = lhs.x + rhs.x;\r\n            this.y = lhs.y + rhs.y;\r\n            this.z = lhs.z + rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#clone\r\n         * @description Returns an identical copy of the specified 3-dimensional vector.\r\n         * @returns {pc2d.Vec3} A 3-dimensional vector containing the result of the cloning.\r\n         * @example\r\n         * var v = new pc2d.Vec3(10, 20, 30);\r\n         * var vclone = v.clone();\r\n         * console.log(\"The result of the cloning is: \" + vclone.toString());\r\n         */\r\n        clone: function () {\r\n            return new Vec3().copy(this);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#copy\r\n         * @description Copied the contents of a source 3-dimensional vector to a destination 3-dimensional vector.\r\n         * @param {pc2d.Vec3} rhs - A vector to copy to the specified vector.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var src = new pc2d.Vec3(10, 20, 30);\r\n         * var dst = new pc2d.Vec3();\r\n         *\r\n         * dst.copy(src);\r\n         *\r\n         * console.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\r\n         */\r\n        copy: function (rhs) {\r\n            this.x = rhs.x;\r\n            this.y = rhs.y;\r\n            this.z = rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#cross\r\n         * @description Returns the result of a cross product operation performed on the two specified 3-dimensional vectors.\r\n         * @param {pc2d.Vec3} lhs - The first 3-dimensional vector operand of the cross product.\r\n         * @param {pc2d.Vec3} rhs - The second 3-dimensional vector operand of the cross product.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var back = new pc2d.Vec3().cross(pc2d.Vec3.RIGHT, pc2d.Vec3.UP);\r\n         *\r\n         * // Should print the Z axis (i.e. [0, 0, 1])\r\n         * console.log(\"The result of the cross product is: \" + back.toString());\r\n         */\r\n        cross: function (lhs, rhs) {\r\n            // Create temporary variables in case lhs or rhs are 'this'\r\n            var lx = lhs.x;\r\n            var ly = lhs.y;\r\n            var lz = lhs.z;\r\n            var rx = rhs.x;\r\n            var ry = rhs.y;\r\n            var rz = rhs.z;\r\n\r\n            this.x = ly * rz - ry * lz;\r\n            this.y = lz * rx - rz * lx;\r\n            this.z = lx * ry - rx * ly;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#distance\r\n         * @description Returns the distance between the two specified 3-dimensional vectors.\r\n         * @param {pc2d.Vec3} rhs - The second 3-dimensional vector to test.\r\n         * @returns {number} The distance between the two vectors.\r\n         * @example\r\n         * var v1 = new pc2d.Vec3(5, 10, 20);\r\n         * var v2 = new pc2d.Vec3(10, 20, 40);\r\n         * var d = v1.distance(v2);\r\n         * console.log(\"The between v1 and v2 is: \" + d);\r\n         */\r\n        distance: function (rhs) {\r\n            var x = this.x - rhs.x;\r\n            var y = this.y - rhs.y;\r\n            var z = this.z - rhs.z;\r\n            return Math.sqrt(x * x + y * y + z * z);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#dot\r\n         * @description Returns the result of a dot product operation performed on the two specified 3-dimensional vectors.\r\n         * @param {pc2d.Vec3} rhs - The second 3-dimensional vector operand of the dot product.\r\n         * @returns {number} The result of the dot product operation.\r\n         * @example\r\n         * var v1 = new pc2d.Vec3(5, 10, 20);\r\n         * var v2 = new pc2d.Vec3(10, 20, 40);\r\n         * var v1dotv2 = v1.dot(v2);\r\n         * console.log(\"The result of the dot product is: \" + v1dotv2);\r\n         */\r\n        dot: function (rhs) {\r\n            return this.x * rhs.x + this.y * rhs.y + this.z * rhs.z;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#equals\r\n         * @description Reports whether two vectors are equal.\r\n         * @param {pc2d.Vec3} rhs - The vector to compare to the specified vector.\r\n         * @returns {boolean} True if the vectors are equal and false otherwise.\r\n         * @example\r\n         * var a = new pc2d.Vec3(1, 2, 3);\r\n         * var b = new pc2d.Vec3(4, 5, 6);\r\n         * console.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\r\n         */\r\n        equals: function (rhs) {\r\n            return this.x === rhs.x && this.y === rhs.y && this.z === rhs.z;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#length\r\n         * @description Returns the magnitude of the specified 3-dimensional vector.\r\n         * @returns {number} The magnitude of the specified 3-dimensional vector.\r\n         * @example\r\n         * var vec = new pc2d.Vec3(3, 4, 0);\r\n         * var len = vec.length();\r\n         * // Should output 5\r\n         * console.log(\"The length of the vector is: \" + len);\r\n         */\r\n        length: function () {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#lengthSq\r\n         * @description Returns the magnitude squared of the specified 3-dimensional vector.\r\n         * @returns {number} The magnitude of the specified 3-dimensional vector.\r\n         * @example\r\n         * var vec = new pc2d.Vec3(3, 4, 0);\r\n         * var len = vec.lengthSq();\r\n         * // Should output 25\r\n         * console.log(\"The length squared of the vector is: \" + len);\r\n         */\r\n        lengthSq: function () {\r\n            return this.x * this.x + this.y * this.y + this.z * this.z;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#lerp\r\n         * @description Returns the result of a linear interpolation between two specified 3-dimensional vectors.\r\n         * @param {pc2d.Vec3} lhs - The 3-dimensional to interpolate from.\r\n         * @param {pc2d.Vec3} rhs - The 3-dimensional to interpolate to.\r\n         * @param {number} alpha - The value controlling the point of interpolation. Between 0 and 1, the linear interpolant\r\n         * will occur on a straight line between lhs and rhs. Outside of this range, the linear interpolant will occur on\r\n         * a ray extrapolated from this line.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(0, 0, 0);\r\n         * var b = new pc2d.Vec3(10, 10, 10);\r\n         * var r = new pc2d.Vec3();\r\n         *\r\n         * r.lerp(a, b, 0);   // r is equal to a\r\n         * r.lerp(a, b, 0.5); // r is 5, 5, 5\r\n         * r.lerp(a, b, 1);   // r is equal to b\r\n         */\r\n        lerp: function (lhs, rhs, alpha) {\r\n            this.x = lhs.x + alpha * (rhs.x - lhs.x);\r\n            this.y = lhs.y + alpha * (rhs.y - lhs.y);\r\n            this.z = lhs.z + alpha * (rhs.z - lhs.z);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#mul\r\n         * @description Multiplies a 3-dimensional vector to another in place.\r\n         * @param {pc2d.Vec3} rhs - The 3-dimensional vector used as the second multiplicand of the operation.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(2, 3, 4);\r\n         * var b = new pc2d.Vec3(4, 5, 6);\r\n         *\r\n         * a.mul(b);\r\n         *\r\n         * // Should output 8, 15, 24\r\n         * console.log(\"The result of the multiplication is: \" + a.toString());\r\n         */\r\n        mul: function (rhs) {\r\n            this.x *= rhs.x;\r\n            this.y *= rhs.y;\r\n            this.z *= rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#mul2\r\n         * @description Returns the result of multiplying the specified 3-dimensional vectors together.\r\n         * @param {pc2d.Vec3} lhs - The 3-dimensional vector used as the first multiplicand of the operation.\r\n         * @param {pc2d.Vec3} rhs - The 3-dimensional vector used as the second multiplicand of the operation.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(2, 3, 4);\r\n         * var b = new pc2d.Vec3(4, 5, 6);\r\n         * var r = new pc2d.Vec3();\r\n         *\r\n         * r.mul2(a, b);\r\n         *\r\n         * // Should output 8, 15, 24\r\n         * console.log(\"The result of the multiplication is: \" + r.toString());\r\n         */\r\n        mul2: function (lhs, rhs) {\r\n            this.x = lhs.x * rhs.x;\r\n            this.y = lhs.y * rhs.y;\r\n            this.z = lhs.z * rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#normalize\r\n         * @description Returns this 3-dimensional vector converted to a unit vector in place.\r\n         * If the vector has a length of zero, the vector's elements will be set to zero.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec3(25, 0, 0);\r\n         *\r\n         * v.normalize();\r\n         *\r\n         * // Should output 1, 0, 0\r\n         * console.log(\"The result of the vector normalization is: \" + v.toString());\r\n         */\r\n        normalize: function () {\r\n            var lengthSq = this.x * this.x + this.y * this.y + this.z * this.z;\r\n            if (lengthSq > 0) {\r\n                var invLength = 1 / Math.sqrt(lengthSq);\r\n                this.x *= invLength;\r\n                this.y *= invLength;\r\n                this.z *= invLength;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name  pc2d.Vec3#project\r\n         * @description Projects this 3-dimensional vector onto the specified vector.\r\n         * @param {pc2d.Vec3} rhs - The vector onto which the original vector will be projected on.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec3(5, 5, 5);\r\n         * var normal = new pc2d.Vec3(1, 0, 0);\r\n         *\r\n         * v.project(normal);\r\n         *\r\n         * // Should output 5, 0, 0\r\n         * console.log(\"The result of the vector projection is: \" + v.toString());\r\n         */\r\n        project: function (rhs) {\r\n            var a_dot_b = this.x * rhs.x + this.y * rhs.y + this.z * rhs.z;\r\n            var b_dot_b = rhs.x * rhs.x + rhs.y * rhs.y + rhs.z * rhs.z;\r\n            var s = a_dot_b / b_dot_b;\r\n            this.x = rhs.x * s;\r\n            this.y = rhs.y * s;\r\n            this.z = rhs.z * s;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#scale\r\n         * @description Scales each dimension of the specified 3-dimensional vector by the supplied\r\n         * scalar value.\r\n         * @param {number} scalar - The value by which each vector component is multiplied.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec3(2, 4, 8);\r\n         *\r\n         * // Multiply by 2\r\n         * v.scale(2);\r\n         *\r\n         * // Negate\r\n         * v.scale(-1);\r\n         *\r\n         * // Divide by 2\r\n         * v.scale(0.5);\r\n         */\r\n        scale: function (scalar) {\r\n            this.x *= scalar;\r\n            this.y *= scalar;\r\n            this.z *= scalar;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#set\r\n         * @description Sets the specified 3-dimensional vector to the supplied numerical values.\r\n         * @param {number} x - The value to set on the first component of the vector.\r\n         * @param {number} y - The value to set on the second component of the vector.\r\n         * @param {number} z - The value to set on the third component of the vector.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec3();\r\n         * v.set(5, 10, 20);\r\n         *\r\n         * // Should output 5, 10, 20\r\n         * console.log(\"The result of the vector set is: \" + v.toString());\r\n         */\r\n        set: function (x, y, z) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.z = z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#sub\r\n         * @description Subtracts a 3-dimensional vector from another in place.\r\n         * @param {pc2d.Vec3} rhs - The vector to add to the specified vector.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(10, 10, 10);\r\n         * var b = new pc2d.Vec3(20, 20, 20);\r\n         *\r\n         * a.sub(b);\r\n         *\r\n         * // Should output [-10, -10, -10]\r\n         * console.log(\"The result of the addition is: \" + a.toString());\r\n         */\r\n        sub: function (rhs) {\r\n            this.x -= rhs.x;\r\n            this.y -= rhs.y;\r\n            this.z -= rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#sub2\r\n         * @description Subtracts two 3-dimensional vectors from one another and returns the result.\r\n         * @param {pc2d.Vec3} lhs - The first vector operand for the addition.\r\n         * @param {pc2d.Vec3} rhs - The second vector operand for the addition.\r\n         * @returns {pc2d.Vec3} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec3(10, 10, 10);\r\n         * var b = new pc2d.Vec3(20, 20, 20);\r\n         * var r = new pc2d.Vec3();\r\n         *\r\n         * r.sub2(a, b);\r\n         *\r\n         * // Should output [-10, -10, -10]\r\n         * console.log(\"The result of the addition is: \" + r.toString());\r\n         */\r\n        sub2: function (lhs, rhs) {\r\n            this.x = lhs.x - rhs.x;\r\n            this.y = lhs.y - rhs.y;\r\n            this.z = lhs.z - rhs.z;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec3#toString\r\n         * @description Converts the vector to string form.\r\n         * @returns {string} The vector in string form.\r\n         * @example\r\n         * var v = new pc2d.Vec3(20, 10, 5);\r\n         * // Should output '[20, 10, 5]'\r\n         * console.log(v.toString());\r\n         */\r\n        toString: function () {\r\n            return '[' + this.x + ', ' + this.y + ', ' + this.z + ']';\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @name pc2d.Vec3#x\r\n     * @type {number}\r\n     * @description The first component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec3(10, 20, 30);\r\n     *\r\n     * // Get x\r\n     * var x = vec.x;\r\n     *\r\n     * // Set x\r\n     * vec.x = 0;\r\n     */\r\n    /**\r\n     * @name pc2d.Vec3#y\r\n     * @type {number}\r\n     * @description The second component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec3(10, 20, 30);\r\n     *\r\n     * // Get y\r\n     * var y = vec.y;\r\n     *\r\n     * // Set y\r\n     * vec.y = 0;\r\n     */\r\n    /**\r\n     * @name pc2d.Vec3#z\r\n     * @type {number}\r\n     * @description The third component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec3(10, 20, 30);\r\n     *\r\n     * // Get z\r\n     * var z = vec.z;\r\n     *\r\n     * // Set z\r\n     * vec.z = 0;\r\n     */\r\n\r\n    /**\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.BACK\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [0, 0, 1].\r\n     */\r\n\r\n    /**\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.DOWN\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [0, -1, 0].\r\n     */\r\n\r\n    /**\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.FORWARD\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [0, 0, -1].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.LEFT\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [-1, 0, 0].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.ONE\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [1, 1, 1].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.RIGHT\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [1, 0, 0].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.UP\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [0, 1, 0].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec3.ZERO\r\n     * @type {pc2d.Vec3}\r\n     * @description A constant vector set to [0, 0, 0].\r\n     */\r\n\r\n    Object.defineProperties(Vec3, {\r\n        ZERO: { value: new Vec3(0, 0, 0) },\r\n        ONE: { value: new Vec3(1, 1, 1) },\r\n        UP: { value: new Vec3(0, 1, 0) },\r\n        DOWN: { value: new Vec3(0, -1, 0) },\r\n        RIGHT: { value: new Vec3(1, 0, 0) },\r\n        LEFT: { value: new Vec3(-1, 0, 0) },\r\n        FORWARD: { value: new Vec3(0, 0, -1) },\r\n        BACK: { value: new Vec3(0, 0, 1) }\r\n    });\r\n\r\n    return {\r\n        Vec3: Vec3\r\n    };\r\n}()));\r\n","Object.assign(pc2d, (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * @class\r\n     * @name pc2d.Vec4\r\n     * @classdesc A 4-dimensional vector.\r\n     * @description Creates a new Vec4 object.\r\n     * @param {number|number[]} [x] - The x value. If x is an array of length 4, the array will be used to populate all components.\r\n     * @param {number} [y] - The y value.\r\n     * @param {number} [z] - The z value.\r\n     * @param {number} [w] - The w value.\r\n     * @example\r\n     * var v = new pc2d.Vec4(1, 2, 3, 4);\r\n     */\r\n    var Vec4 = function (x, y, z, w) {\r\n        if (x && x.length === 4) {\r\n            this.x = x[0];\r\n            this.y = x[1];\r\n            this.z = x[2];\r\n            this.w = x[3];\r\n        } else {\r\n            this.x = x || 0;\r\n            this.y = y || 0;\r\n            this.z = z || 0;\r\n            this.w = w || 0;\r\n        }\r\n    };\r\n\r\n    Object.assign(Vec4.prototype, {\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#add\r\n         * @description Adds a 4-dimensional vector to another in place.\r\n         * @param {pc2d.Vec4} rhs - The vector to add to the specified vector.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(10, 10, 10, 10);\r\n         * var b = new pc2d.Vec4(20, 20, 20, 20);\r\n         *\r\n         * a.add(b);\r\n         *\r\n         * // Should output [30, 30, 30]\r\n         * console.log(\"The result of the addition is: \" + a.toString());\r\n         */\r\n        add: function (rhs) {\r\n            this.x += rhs.x;\r\n            this.y += rhs.y;\r\n            this.z += rhs.z;\r\n            this.w += rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#add2\r\n         * @description Adds two 4-dimensional vectors together and returns the result.\r\n         * @param {pc2d.Vec4} lhs - The first vector operand for the addition.\r\n         * @param {pc2d.Vec4} rhs - The second vector operand for the addition.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(10, 10, 10, 10);\r\n         * var b = new pc2d.Vec4(20, 20, 20, 20);\r\n         * var r = new pc2d.Vec4();\r\n         *\r\n         * r.add2(a, b);\r\n         * // Should output [30, 30, 30]\r\n         *\r\n         * console.log(\"The result of the addition is: \" + r.toString());\r\n         */\r\n        add2: function (lhs, rhs) {\r\n            this.x = lhs.x + rhs.x;\r\n            this.y = lhs.y + rhs.y;\r\n            this.z = lhs.z + rhs.z;\r\n            this.w = lhs.w + rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#clone\r\n         * @description Returns an identical copy of the specified 4-dimensional vector.\r\n         * @returns {pc2d.Vec4} A 4-dimensional vector containing the result of the cloning.\r\n         * @example\r\n         * var v = new pc2d.Vec4(10, 20, 30, 40);\r\n         * var vclone = v.clone();\r\n         * console.log(\"The result of the cloning is: \" + vclone.toString());\r\n         */\r\n        clone: function () {\r\n            return new Vec4().copy(this);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#copy\r\n         * @description Copied the contents of a source 4-dimensional vector to a destination 4-dimensional vector.\r\n         * @param {pc2d.Vec4} rhs - A vector to copy to the specified vector.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var src = new pc2d.Vec4(10, 20, 30, 40);\r\n         * var dst = new pc2d.Vec4();\r\n         *\r\n         * dst.copy(src);\r\n         *\r\n         * console.log(\"The two vectors are \" + (dst.equals(src) ? \"equal\" : \"different\"));\r\n         */\r\n        copy: function (rhs) {\r\n            this.x = rhs.x;\r\n            this.y = rhs.y;\r\n            this.z = rhs.z;\r\n            this.w = rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#dot\r\n         * @description Returns the result of a dot product operation performed on the two specified 4-dimensional vectors.\r\n         * @param {pc2d.Vec4} rhs - The second 4-dimensional vector operand of the dot product.\r\n         * @returns {number} The result of the dot product operation.\r\n         * @example\r\n         * var v1 = new pc2d.Vec4(5, 10, 20, 40);\r\n         * var v2 = new pc2d.Vec4(10, 20, 40, 80);\r\n         * var v1dotv2 = v1.dot(v2);\r\n         * console.log(\"The result of the dot product is: \" + v1dotv2);\r\n         */\r\n        dot: function (rhs) {\r\n            return this.x * rhs.x + this.y * rhs.y + this.z * rhs.z + this.w * rhs.w;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#equals\r\n         * @description Reports whether two vectors are equal.\r\n         * @param {pc2d.Vec4} rhs - The vector to compare to the specified vector.\r\n         * @returns {boolean} True if the vectors are equal and false otherwise.\r\n         * @example\r\n         * var a = new pc2d.Vec4(1, 2, 3, 4);\r\n         * var b = new pc2d.Vec4(5, 6, 7, 8);\r\n         * console.log(\"The two vectors are \" + (a.equals(b) ? \"equal\" : \"different\"));\r\n         */\r\n        equals: function (rhs) {\r\n            return this.x === rhs.x && this.y === rhs.y && this.z === rhs.z && this.w === rhs.w;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#length\r\n         * @description Returns the magnitude of the specified 4-dimensional vector.\r\n         * @returns {number} The magnitude of the specified 4-dimensional vector.\r\n         * @example\r\n         * var vec = new pc2d.Vec4(3, 4, 0, 0);\r\n         * var len = vec.length();\r\n         * // Should output 5\r\n         * console.log(\"The length of the vector is: \" + len);\r\n         */\r\n        length: function () {\r\n            return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#lengthSq\r\n         * @description Returns the magnitude squared of the specified 4-dimensional vector.\r\n         * @returns {number} The magnitude of the specified 4-dimensional vector.\r\n         * @example\r\n         * var vec = new pc2d.Vec4(3, 4, 0);\r\n         * var len = vec.lengthSq();\r\n         * // Should output 25\r\n         * console.log(\"The length squared of the vector is: \" + len);\r\n         */\r\n        lengthSq: function () {\r\n            return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#lerp\r\n         * @description Returns the result of a linear interpolation between two specified 4-dimensional vectors.\r\n         * @param {pc2d.Vec4} lhs - The 4-dimensional to interpolate from.\r\n         * @param {pc2d.Vec4} rhs - The 4-dimensional to interpolate to.\r\n         * @param {number} alpha - The value controlling the point of interpolation. Between 0 and 1, the linear interpolant\r\n         * will occur on a straight line between lhs and rhs. Outside of this range, the linear interpolant will occur on\r\n         * a ray extrapolated from this line.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(0, 0, 0, 0);\r\n         * var b = new pc2d.Vec4(10, 10, 10, 10);\r\n         * var r = new pc2d.Vec4();\r\n         *\r\n         * r.lerp(a, b, 0);   // r is equal to a\r\n         * r.lerp(a, b, 0.5); // r is 5, 5, 5, 5\r\n         * r.lerp(a, b, 1);   // r is equal to b\r\n         */\r\n        lerp: function (lhs, rhs, alpha) {\r\n            this.x = lhs.x + alpha * (rhs.x - lhs.x);\r\n            this.y = lhs.y + alpha * (rhs.y - lhs.y);\r\n            this.z = lhs.z + alpha * (rhs.z - lhs.z);\r\n            this.w = lhs.w + alpha * (rhs.w - lhs.w);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#mul\r\n         * @description Multiplies a 4-dimensional vector to another in place.\r\n         * @param {pc2d.Vec4} rhs - The 4-dimensional vector used as the second multiplicand of the operation.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(2, 3, 4, 5);\r\n         * var b = new pc2d.Vec4(4, 5, 6, 7);\r\n         *\r\n         * a.mul(b);\r\n         *\r\n         * // Should output 8, 15, 24, 35\r\n         * console.log(\"The result of the multiplication is: \" + a.toString());\r\n         */\r\n        mul: function (rhs) {\r\n            this.x *= rhs.x;\r\n            this.y *= rhs.y;\r\n            this.z *= rhs.z;\r\n            this.w *= rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#mul2\r\n         * @description Returns the result of multiplying the specified 4-dimensional vectors together.\r\n         * @param {pc2d.Vec4} lhs - The 4-dimensional vector used as the first multiplicand of the operation.\r\n         * @param {pc2d.Vec4} rhs - The 4-dimensional vector used as the second multiplicand of the operation.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(2, 3, 4, 5);\r\n         * var b = new pc2d.Vec4(4, 5, 6, 7);\r\n         * var r = new pc2d.Vec4();\r\n         *\r\n         * r.mul2(a, b);\r\n         *\r\n         * // Should output 8, 15, 24, 35\r\n         * console.log(\"The result of the multiplication is: \" + r.toString());\r\n         */\r\n        mul2: function (lhs, rhs) {\r\n            this.x = lhs.x * rhs.x;\r\n            this.y = lhs.y * rhs.y;\r\n            this.z = lhs.z * rhs.z;\r\n            this.w = lhs.w * rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#normalize\r\n         * @description Returns this 4-dimensional vector converted to a unit vector in place.\r\n         * If the vector has a length of zero, the vector's elements will be set to zero.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec4(25, 0, 0, 0);\r\n         *\r\n         * v.normalize();\r\n         *\r\n         * // Should output 1, 0, 0, 0\r\n         * console.log(\"The result of the vector normalization is: \" + v.toString());\r\n         */\r\n        normalize: function () {\r\n            var lengthSq = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n            if (lengthSq > 0) {\r\n                var invLength = 1 / Math.sqrt(lengthSq);\r\n                this.x *= invLength;\r\n                this.y *= invLength;\r\n                this.z *= invLength;\r\n                this.w *= invLength;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#scale\r\n         * @description Scales each dimension of the specified 4-dimensional vector by the supplied\r\n         * scalar value.\r\n         * @param {number} scalar - The value by which each vector component is multiplied.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec4(2, 4, 8, 16);\r\n         *\r\n         * // Multiply by 2\r\n         * v.scale(2);\r\n         *\r\n         * // Negate\r\n         * v.scale(-1);\r\n         *\r\n         * // Divide by 2\r\n         * v.scale(0.5);\r\n         */\r\n        scale: function (scalar) {\r\n            this.x *= scalar;\r\n            this.y *= scalar;\r\n            this.z *= scalar;\r\n            this.w *= scalar;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#set\r\n         * @description Sets the specified 4-dimensional vector to the supplied numerical values.\r\n         * @param {number} x - The value to set on the first component of the vector.\r\n         * @param {number} y - The value to set on the second component of the vector.\r\n         * @param {number} z - The value to set on the third component of the vector.\r\n         * @param {number} w - The value to set on the fourth component of the vector.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var v = new pc2d.Vec4();\r\n         * v.set(5, 10, 20, 40);\r\n         *\r\n         * // Should output 5, 10, 20, 40\r\n         * console.log(\"The result of the vector set is: \" + v.toString());\r\n         */\r\n        set: function (x, y, z, w) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.z = z;\r\n            this.w = w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#sub\r\n         * @description Subtracts a 4-dimensional vector from another in place.\r\n         * @param {pc2d.Vec4} rhs - The vector to add to the specified vector.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(10, 10, 10, 10);\r\n         * var b = new pc2d.Vec4(20, 20, 20, 20);\r\n         *\r\n         * a.sub(b);\r\n         *\r\n         * // Should output [-10, -10, -10, -10]\r\n         * console.log(\"The result of the subtraction is: \" + a.toString());\r\n         */\r\n        sub: function (rhs) {\r\n            this.x -= rhs.x;\r\n            this.y -= rhs.y;\r\n            this.z -= rhs.z;\r\n            this.w -= rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#sub2\r\n         * @description Subtracts two 4-dimensional vectors from one another and returns the result.\r\n         * @param {pc2d.Vec4} lhs - The first vector operand for the subtraction.\r\n         * @param {pc2d.Vec4} rhs - The second vector operand for the subtraction.\r\n         * @returns {pc2d.Vec4} Self for chaining.\r\n         * @example\r\n         * var a = new pc2d.Vec4(10, 10, 10, 10);\r\n         * var b = new pc2d.Vec4(20, 20, 20, 20);\r\n         * var r = new pc2d.Vec4();\r\n         *\r\n         * r.sub2(a, b);\r\n         *\r\n         * // Should output [-10, -10, -10, -10]\r\n         * console.log(\"The result of the subtraction is: \" + r.toString());\r\n         */\r\n        sub2: function (lhs, rhs) {\r\n            this.x = lhs.x - rhs.x;\r\n            this.y = lhs.y - rhs.y;\r\n            this.z = lhs.z - rhs.z;\r\n            this.w = lhs.w - rhs.w;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Vec4#toString\r\n         * @description Converts the vector to string form.\r\n         * @returns {string} The vector in string form.\r\n         * @example\r\n         * var v = new pc2d.Vec4(20, 10, 5, 0);\r\n         * // Should output '[20, 10, 5, 0]'\r\n         * console.log(v.toString());\r\n         */\r\n        toString: function () {\r\n            return '[' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ']';\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @field\r\n     * @name pc2d.Vec4#x\r\n     * @type {number}\r\n     * @description The first component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec4(10, 20, 30, 40);\r\n     *\r\n     * // Get x\r\n     * var x = vec.x;\r\n     *\r\n     * // Set x\r\n     * vec.x = 0;\r\n     */\r\n    /**\r\n     * @field\r\n     * @name pc2d.Vec4#y\r\n     * @type {number}\r\n     * @description The second component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec4(10, 20, 30, 40);\r\n     *\r\n     * // Get y\r\n     * var y = vec.y;\r\n     *\r\n     * // Set y\r\n     * vec.y = 0;\r\n     */\r\n    /**\r\n     * @field\r\n     * @name pc2d.Vec4#z\r\n     * @type {number}\r\n     * @description The third component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec4(10, 20, 30, 40);\r\n     *\r\n     * // Get z\r\n     * var z = vec.z;\r\n     *\r\n     * // Set z\r\n     * vec.z = 0;\r\n     */\r\n    /**\r\n     * @field\r\n     * @name pc2d.Vec4#w\r\n     * @type {number}\r\n     * @description The fourth component of the vector.\r\n     * @example\r\n     * var vec = new pc2d.Vec4(10, 20, 30, 40);\r\n     *\r\n     * // Get w\r\n     * var w = vec.w;\r\n     *\r\n     * // Set w\r\n     * vec.w = 0;\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec4.ONE\r\n     * @type {pc2d.Vec4}\r\n     * @description A constant vector set to [1, 1, 1, 1].\r\n     */\r\n\r\n    /**\r\n     * @field\r\n     * @static\r\n     * @readonly\r\n     * @name pc2d.Vec4.ZERO\r\n     * @type {pc2d.Vec4}\r\n     * @description A constant vector set to [0, 0, 0, 0].\r\n     */\r\n\r\n    Object.defineProperties(Vec4, {\r\n        ZERO: { value: new Vec4(0, 0, 0, 0) },\r\n        ONE: { value: new Vec4(1, 1, 1, 1) }\r\n    });\r\n\r\n    return {\r\n        Vec4: Vec4\r\n    };\r\n}()));\r\n","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var SortedLoopArray = function (args) {\r\n        this._sortBy = args.sortBy;\r\n        this.items = [];\r\n        this.length = 0;\r\n        this.loopIndex = -1;\r\n        this._sortHandler = this._doSort.bind(this);\r\n    };\r\n\r\n\r\n    SortedLoopArray.prototype._binarySearch = function (item) {\r\n        var left = 0;\r\n        var right = this.items.length - 1;\r\n        var search = item[this._sortBy];\r\n\r\n        var middle;\r\n        var current;\r\n        while (left <= right) {\r\n            middle = Math.floor((left + right) / 2);\r\n            current = this.items[middle][this._sortBy];\r\n            if (current <= search) {\r\n                left = middle + 1;\r\n            } else if (current > search) {\r\n                right = middle - 1;\r\n            }\r\n        }\r\n\r\n        return left;\r\n    };\r\n\r\n    SortedLoopArray.prototype._doSort = function (a, b) {\r\n        var sortBy = this._sortBy;\r\n        return a[sortBy] - b[sortBy];\r\n    };\r\n\r\n\r\n    SortedLoopArray.prototype.insert = function (item) {\r\n        var index = this._binarySearch(item);\r\n        this.items.splice(index, 0, item);\r\n        this.length++;\r\n        if (this.loopIndex >= index) {\r\n            this.loopIndex++;\r\n        }\r\n    };\r\n\r\n\r\n    SortedLoopArray.prototype.append = function (item) {\r\n        this.items.push(item);\r\n        this.length++;\r\n    };\r\n\r\n    SortedLoopArray.prototype.remove = function (item) {\r\n        var idx = this.items.indexOf(item);\r\n        if (idx < 0) return;\r\n\r\n        this.items.splice(idx, 1);\r\n        this.length--;\r\n        if (this.loopIndex >= idx) {\r\n            this.loopIndex--;\r\n        }\r\n    };\r\n\r\n    SortedLoopArray.prototype.sort = function () {\r\n        // get current item pointed to by loopIndex\r\n        var current = (this.loopIndex >= 0 ? this.items[this.loopIndex] : null);\r\n        // sort\r\n        this.items.sort(this._sortHandler);\r\n        // find new loopIndex\r\n        if (current !== null) {\r\n            this.loopIndex = this.items.indexOf(current);\r\n        }\r\n    };\r\n\r\n    return {\r\n        SortedLoopArray: SortedLoopArray\r\n    };\r\n\r\n}());","Object.assign(pc2d, function () {\r\n    /**\r\n     * @private\r\n     * @class\r\n     * @name pc2d.ComponentData\r\n     * @classdesc Base class for Component data storage.\r\n     */\r\n    var ComponentData = function () {\r\n    };\r\n\r\n    return {\r\n        ComponentData: ComponentData\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    \r\n    var Component = function (system, entity) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this.system = system;\r\n        this.entity = entity;\r\n\r\n        if (this.system.schema && !this._accessorsBuilt) {\r\n            this.buildAccessors(this.system.schema);\r\n        }\r\n\r\n        this.on(\"set\", function (name, oldValue, newValue) {\r\n            this.fire(\"set_\" + name, name, oldValue, newValue);\r\n        });\r\n\r\n        this.on('set_enabled', this.onSetEnabled, this);\r\n    };\r\n    Component.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    Component.prototype.constructor = Component;\r\n\r\n    Component._buildAccessors = function (obj, schema) {\r\n        // Create getter/setter pairs for each property defined in the schema\r\n        schema.forEach(function (descriptor) {\r\n            // If the property descriptor is an object, it should have a `name`\r\n            // member. If not, it should just be the plain property name.\r\n            var name = (typeof descriptor === 'object') ? descriptor.name : descriptor;\r\n\r\n            Object.defineProperty(obj, name, {\r\n                get: function () {\r\n                    return this.data[name];\r\n                },\r\n                set: function (value) {\r\n                    var data = this.data;\r\n                    var oldValue = data[name];\r\n                    data[name] = value;\r\n                    this.fire('set', name, oldValue, value);\r\n                },\r\n                configurable: true\r\n            });\r\n        });\r\n\r\n        obj._accessorsBuilt = true;\r\n    };\r\n\r\n    Object.assign(Component.prototype, {\r\n        buildAccessors: function (schema) {\r\n            Component._buildAccessors(this, schema);\r\n        },\r\n\r\n        onSetEnabled: function (name, oldValue, newValue) {\r\n            if (oldValue !== newValue) {\r\n                if (this.entity.enabled) {\r\n                    if (newValue) {\r\n                        this.onEnable();\r\n                    } else {\r\n                        this.onDisable();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        onEnable: function () { },\r\n\r\n        onDisable: function () { },\r\n\r\n        onPostStateChange: function () { }\r\n    });\r\n\r\n\r\n    Object.defineProperty(Component.prototype, \"data\", {\r\n        get: function () {\r\n            var record = this.system.store[this.entity.getGuid()];\r\n            return record ? record.data : null;\r\n        }\r\n    });\r\n\r\n    return {\r\n        Component: Component\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n  \r\n    \r\n    var ComponentSystem = function (app) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this.app = app;\r\n\r\n        // The store where all pc2d.ComponentData objects are kept\r\n        this.store = {};\r\n        this.schema = [];\r\n    };\r\n    ComponentSystem.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    ComponentSystem.prototype.constructor = ComponentSystem;\r\n\r\n    // Class methods\r\n    Object.assign(ComponentSystem, {\r\n        _helper: function (a, p) {\r\n            for (var i = 0, l = a.length; i < l; i++) {\r\n                a[i].f.call(a[i].s, p);\r\n            }\r\n        },\r\n\r\n        initialize: function (root) {\r\n            this._helper(this._init, root);\r\n        },\r\n\r\n        postInitialize: function (root) {\r\n            this._helper(this._postInit, root);\r\n\r\n            // temp, this is for internal use on entity-references until a better system is found\r\n            this.fire('postinitialize', root);\r\n        },\r\n\r\n        // Update all ComponentSystems\r\n        update: function (dt, inTools) {\r\n            this._helper(inTools ? this._toolsUpdate : this._update, dt);\r\n        },\r\n\r\n        // Update all ComponentSystems\r\n        fixedUpdate: function (dt, inTools) {\r\n            this._helper(this._fixedUpdate, dt);\r\n        },\r\n\r\n        // Update all ComponentSystems\r\n        postUpdate: function (dt, inTools) {\r\n            this._helper(this._postUpdate, dt);\r\n        },\r\n\r\n        _init: [],\r\n        _postInit: [],\r\n        _toolsUpdate: [],\r\n        _update: [],\r\n        _fixedUpdate: [],\r\n        _postUpdate: [],\r\n\r\n        bind: function (event, func, scope) {\r\n            switch (event) {\r\n                case 'initialize':\r\n                    this._init.push({ f: func, s: scope });\r\n                    break;\r\n                case 'postInitialize':\r\n                    this._postInit.push({ f: func, s: scope });\r\n                    break;\r\n                case 'update':\r\n                    this._update.push({ f: func, s: scope });\r\n                    break;\r\n                case 'postUpdate':\r\n                    this._postUpdate.push({ f: func, s: scope });\r\n                    break;\r\n                case 'fixedUpdate':\r\n                    this._fixedUpdate.push({ f: func, s: scope });\r\n                    break;\r\n                case 'toolsUpdate':\r\n                    this._toolsUpdate.push({ f: func, s: scope });\r\n                    break;\r\n                default:\r\n                    console.error('Component System does not support event', event);\r\n            }\r\n        },\r\n\r\n        _erase: function (a, f, s) {\r\n            for (var i = 0; i < a.length; i++) {\r\n                if (a[i].f === f && a[i].s === s) {\r\n                    a.splice(i--, 1);\r\n                }\r\n            }\r\n        },\r\n\r\n        unbind: function (event, func, scope) {\r\n            switch (event) {\r\n                case 'initialize':\r\n                    this._erase(this._init, func, scope);\r\n                    break;\r\n                case 'postInitialize':\r\n                    this._erase(this._postInit, func, scope);\r\n                    break;\r\n                case 'update':\r\n                    this._erase(this._update, func, scope);\r\n                    break;\r\n                case 'postUpdate':\r\n                    this._erase(this._postUpdate, func, scope);\r\n                    break;\r\n                case 'fixedUpdate':\r\n                    this._erase(this._fixedUpdate, func, scope);\r\n                    break;\r\n                case 'toolsUpdate':\r\n                    this._erase(this._toolsUpdate, func, scope);\r\n                    break;\r\n                default:\r\n                    console.error('Component System does not support event', event);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Instance methods\r\n    Object.assign(ComponentSystem.prototype, {\r\n     \r\n        addComponent: function (entity, data) {\r\n            var component = new this.ComponentType(this, entity);\r\n            var componentData = new this.DataType();\r\n\r\n            data = data || {};\r\n\r\n            this.store[entity.getGuid()] = {\r\n                entity: entity,\r\n                data: componentData\r\n            };\r\n\r\n            entity[this.id] = component;\r\n            entity.c[this.id] = component;\r\n\r\n            this.initializeComponentData(component, data, []);\r\n\r\n            this.fire('add', entity, component);\r\n\r\n            return component;\r\n        },\r\n\r\n      \r\n        removeComponent: function (entity) {\r\n            var record = this.store[entity.getGuid()];\r\n            var component = entity.c[this.id];\r\n            this.fire('beforeremove', entity, component);\r\n            delete this.store[entity.getGuid()];\r\n            delete entity[this.id];\r\n            delete entity.c[this.id];\r\n            this.fire('remove', entity, record.data);\r\n        },\r\n\r\n    \r\n        cloneComponent: function (entity, clone) {\r\n            // default clone is just to add a new component with existing data\r\n            var src = this.store[entity.getGuid()];\r\n            return this.addComponent(clone, src.data);\r\n        },\r\n\r\n        initializeComponentData: function (component, data, properties) {\r\n            data = data || {};\r\n\r\n            var descriptor;\r\n            var name, type, value;\r\n\r\n            // initialize\r\n            for (var i = 0, len = properties.length; i < len; i++) {\r\n                descriptor = properties[i];\r\n\r\n                // If the descriptor is an object, it will have `name` and `type` members\r\n                if (typeof descriptor === 'object') {\r\n                    name = descriptor.name;\r\n                    type = descriptor.type;\r\n                } else {\r\n                    // Otherwise, the descriptor is just the property name\r\n                    name = descriptor;\r\n                    type = undefined;\r\n                }\r\n\r\n                value = data[name];\r\n\r\n                if (value !== undefined) {\r\n                    // If we know the intended type of the value, convert the raw data\r\n                    // into an instance of the specified type.\r\n                    if (type !== undefined) {\r\n                        value = convertValue(value, type);\r\n                    }\r\n\r\n                    component[name] = value;\r\n                } else {\r\n                    component[name] = component.data[name];\r\n                }\r\n            }\r\n\r\n            // after component is initialized call onEnable\r\n            if (component.enabled && component.entity.enabled) {\r\n                component.onEnable();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @function\r\n         * @name pc2d.ComponentSystem#getPropertiesOfType\r\n         * @description Searches the component schema for properties that match the specified type.\r\n         * @param {string} type - The type to search for.\r\n         * @returns {string[]|object[]} An array of property descriptors matching the specified type.\r\n         */\r\n        getPropertiesOfType: function (type) {\r\n            var matchingProperties = [];\r\n            var schema = this.schema || [];\r\n\r\n            schema.forEach(function (descriptor) {\r\n                if (descriptor && typeof descriptor === 'object' && descriptor.type === type) {\r\n                    matchingProperties.push(descriptor);\r\n                }\r\n            });\r\n\r\n            return matchingProperties;\r\n        },\r\n\r\n        destroy: function () {\r\n            this.off();\r\n        }\r\n    });\r\n\r\n    function convertValue(value, type) {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n\r\n        switch (type) {\r\n            case 'rgb':\r\n                if (value instanceof pc2d.Color) {\r\n                    return value.clone();\r\n                }\r\n                return new pc2d.Color(value[0], value[1], value[2]);\r\n            case 'rgba':\r\n                if (value instanceof pc2d.Color) {\r\n                    return value.clone();\r\n                }\r\n                return new pc2d.Color(value[0], value[1], value[2], value[3]);\r\n            case 'vec2':\r\n                if (value instanceof pc2d.Vec2) {\r\n                    return value.clone();\r\n                }\r\n                return new pc2d.Vec2(value[0], value[1]);\r\n            case 'vec3':\r\n                if (value instanceof pc2d.Vec3) {\r\n                    return value.clone();\r\n                }\r\n                return new pc2d.Vec3(value[0], value[1], value[2]);\r\n            case 'vec4':\r\n                if (value instanceof pc2d.Vec4) {\r\n                    return value.clone();\r\n                }\r\n                return new pc2d.Vec4(value[0], value[1], value[2], value[3]);\r\n            case 'boolean':\r\n            case 'number':\r\n            case 'string':\r\n                return value;\r\n            case 'entity':\r\n                return value; // Entity fields should just be a string guid\r\n            default:\r\n                throw new Error('Could not convert unhandled type: ' + type);\r\n        }\r\n    }\r\n\r\n    // Add event support\r\n    pc2d.events.attach(ComponentSystem);\r\n\r\n    ComponentSystem.destroy = function () {\r\n        ComponentSystem.off('initialize');\r\n        ComponentSystem.off('postInitialize');\r\n        ComponentSystem.off('toolsUpdate');\r\n        ComponentSystem.off('update');\r\n        ComponentSystem.off('fixedUpdate');\r\n        ComponentSystem.off('postUpdate');\r\n    };\r\n\r\n    return {\r\n        ComponentSystem: ComponentSystem\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    /**\r\n     * @class\r\n     * @name pc2d.ComponentSystemRegistry\r\n     * @classdesc Store, access and delete instances of the various ComponentSystems.\r\n     * @description Create a new ComponentSystemRegistry.\r\n     */\r\n    var ComponentSystemRegistry = function () {\r\n        // An array of pc2d.ComponentSystem objects\r\n        this.list = [];\r\n    };\r\n\r\n    Object.assign(ComponentSystemRegistry.prototype, {\r\n        /**\r\n         * @private\r\n         * @function\r\n         * @name pc2d.ComponentSystemRegistry#add\r\n         * @description Add a component system to the registry.\r\n         * @param {object} system - The {pc2d.ComponentSystem} instance.\r\n         */\r\n        add: function (system) {\r\n            var id = system.id;\r\n            if (this[id]) {\r\n                throw new Error(pc2d.string.format(\"ComponentSystem name '{0}' already registered or not allowed\", id));\r\n            }\r\n\r\n            this[id] = system;\r\n\r\n            // Update the component system array\r\n            this.list.push(system);\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @function\r\n         * @name pc2d.ComponentSystemRegistry#remove\r\n         * @description Remove a component system from the registry.\r\n         * @param {object} system - The {pc2d.ComponentSystem} instance.\r\n         */\r\n        remove: function (system) {\r\n            var id = system.id;\r\n            if (!this[id]) {\r\n                throw new Error(pc2d.string.format(\"No ComponentSystem named '{0}' registered\", id));\r\n            }\r\n\r\n            delete this[id];\r\n\r\n            // Update the component system array\r\n            var index = this.list.indexOf(this[id]);\r\n            if (index !== -1) {\r\n                this.list.splice(index, 1);\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        ComponentSystemRegistry: ComponentSystemRegistry\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    var ScriptComponentData = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    return {\r\n        ScriptComponentData: ScriptComponentData\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    var ScriptComponent = function ScriptComponent(system, entity) {\r\n        pc2d.Component.call(this, system, entity);\r\n\r\n        // holds all script instances for this component\r\n        this._scripts = [];\r\n        // holds all script instances with an update method\r\n        this._updateList = new pc2d.SortedLoopArray({ sortBy: '__executionOrder' });\r\n        // holds all script instances with a postUpdate method\r\n        this._postUpdateList = new pc2d.SortedLoopArray({ sortBy: '__executionOrder' });\r\n\r\n        this._scriptsIndex = {};\r\n        this._destroyedScripts = [];\r\n        this._destroyed = false;\r\n        this._scriptsData = null;\r\n        this._oldState = true;\r\n\r\n        // override default 'enabled' property of base pc2d.Component\r\n        // because this is faster\r\n        this._enabled = true;\r\n\r\n        // whether this component is currently being enabled\r\n        this._beingEnabled = false;\r\n        // if true then we are currently looping through\r\n        // script instances. This is used to prevent a scripts array\r\n        // from being modified while a loop is being executed\r\n        this._isLoopingThroughScripts = false;\r\n\r\n        // the order that this component will be updated\r\n        // by the script system. This is set by the system itself.\r\n        this._executionOrder = -1;\r\n\r\n        this.on('set_enabled', this._onSetEnabled, this);\r\n    };\r\n    ScriptComponent.prototype = Object.create(pc2d.Component.prototype);\r\n    ScriptComponent.prototype.constructor = ScriptComponent;\r\n\r\n    ScriptComponent.scriptMethods = {\r\n        initialize: 'initialize',\r\n        postInitialize: 'postInitialize',\r\n        update: 'update',\r\n        postUpdate: 'postUpdate',\r\n        swap: 'swap'\r\n    };\r\n\r\n    Object.assign(ScriptComponent.prototype, {\r\n        onEnable: function () {\r\n            this._beingEnabled = true;\r\n            this._checkState();\r\n\r\n            if (!this.entity._beingEnabled) {\r\n                this.onPostStateChange();\r\n            }\r\n\r\n            this._beingEnabled = false;\r\n        },\r\n\r\n        onDisable: function () {\r\n            this._checkState();\r\n        },\r\n\r\n        onPostStateChange: function () {\r\n            var script;\r\n\r\n            var wasLooping = this._beginLooping();\r\n\r\n            for (var i = 0, len = this.scripts.length; i < len; i++) {\r\n                script = this.scripts[i];\r\n\r\n                if (script._initialized && !script._postInitialized && script.enabled) {\r\n                    script._postInitialized = true;\r\n\r\n                    if (script.postInitialize)\r\n                        this._scriptMethod(script, ScriptComponent.scriptMethods.postInitialize);\r\n                }\r\n            }\r\n\r\n            this._endLooping(wasLooping);\r\n        },\r\n\r\n        // Sets isLoopingThroughScripts to false and returns\r\n        // its previous value\r\n        _beginLooping: function () {\r\n            var looping = this._isLoopingThroughScripts;\r\n            this._isLoopingThroughScripts = true;\r\n            return looping;\r\n        },\r\n\r\n        // Restores isLoopingThroughScripts to the specified parameter\r\n        // If all loops are over then remove destroyed scripts form the _scripts array\r\n        _endLooping: function (wasLoopingBefore) {\r\n            this._isLoopingThroughScripts = wasLoopingBefore;\r\n            if (!this._isLoopingThroughScripts) {\r\n                this._removeDestroyedScripts();\r\n            }\r\n        },\r\n\r\n        _onSetEnabled: function (prop, old, value) {\r\n            this._beingEnabled = true;\r\n            this._checkState();\r\n            this._beingEnabled = false;\r\n        },\r\n\r\n        _checkState: function () {\r\n            var state = this.enabled && this.entity.enabled;\r\n            if (state === this._oldState)\r\n                return;\r\n\r\n            this._oldState = state;\r\n\r\n            this.fire(state ? 'enable' : 'disable');\r\n            this.fire('state', state);\r\n\r\n            if (state) {\r\n                this.system._addComponentToEnabled(this);\r\n            } else {\r\n                this.system._removeComponentFromEnabled(this);\r\n            }\r\n\r\n            var wasLooping = this._beginLooping();\r\n\r\n            var script;\r\n            for (var i = 0, len = this.scripts.length; i < len; i++) {\r\n                script = this.scripts[i];\r\n                script.enabled = script._enabled;\r\n            }\r\n\r\n            this._endLooping(wasLooping);\r\n        },\r\n\r\n        _onBeforeRemove: function () {\r\n            this.fire('remove');\r\n\r\n            var wasLooping = this._beginLooping();\r\n\r\n            // destroy all scripts\r\n            for (var i = 0; i < this.scripts.length; i++) {\r\n                var script = this.scripts[i];\r\n                if (!script) continue;\r\n\r\n                this.destroy(script.__scriptType.__name);\r\n            }\r\n\r\n            this._endLooping(wasLooping);\r\n        },\r\n\r\n        _removeDestroyedScripts: function () {\r\n            var len = this._destroyedScripts.length;\r\n            if (!len) return;\r\n\r\n            var i;\r\n            for (i = 0; i < len; i++) {\r\n                var script = this._destroyedScripts[i];\r\n                this._removeScriptInstance(script);\r\n            }\r\n\r\n            this._destroyedScripts.length = 0;\r\n\r\n            // update execution order for scripts\r\n            this._resetExecutionOrder(0, this._scripts.length);\r\n        },\r\n\r\n        _onInitializeAttributes: function () {\r\n            for (var i = 0, len = this.scripts.length; i < len; i++)\r\n                this.scripts[i].__initializeAttributes();\r\n        },\r\n\r\n        _scriptMethod: function (script, method, arg) {\r\n            // #ifdef DEBUG\r\n            try {\r\n            // #endif\r\n                script[method](arg);\r\n            // #ifdef DEBUG\r\n            } catch (ex) {\r\n                // disable script if it fails to call method\r\n                script.enabled = false;\r\n\r\n                if (!script._callbacks || !script._callbacks.error) {\r\n                    console.warn('unhandled exception while calling \"' + method + '\" for \"' + script.__scriptType.__name + '\" script: ', ex);\r\n                    console.error(ex);\r\n                }\r\n\r\n                script.fire('error', ex, method);\r\n                this.fire('error', script, ex, method);\r\n            }\r\n            // #endif\r\n        },\r\n\r\n        _onInitialize: function () {\r\n            var script, scripts = this._scripts;\r\n\r\n            var wasLooping = this._beginLooping();\r\n\r\n            for (var i = 0, len = scripts.length; i < len; i++) {\r\n                script = scripts[i];\r\n                if (!script._initialized && script.enabled) {\r\n                    script._initialized = true;\r\n                    if (script.initialize)\r\n                        this._scriptMethod(script, ScriptComponent.scriptMethods.initialize);\r\n                }\r\n            }\r\n\r\n            this._endLooping(wasLooping);\r\n        },\r\n\r\n        _onPostInitialize: function () {\r\n            this.onPostStateChange();\r\n        },\r\n\r\n        _onUpdate: function (dt) {\r\n            var self = this;\r\n            var list = self._updateList;\r\n            if (! list.length) return;\r\n\r\n            var script;\r\n\r\n            var wasLooping = self._beginLooping();\r\n\r\n            for (list.loopIndex = 0; list.loopIndex < list.length; list.loopIndex++) {\r\n                script = list.items[list.loopIndex];\r\n                if (script.enabled) {\r\n                    self._scriptMethod(script, ScriptComponent.scriptMethods.update, dt);\r\n                }\r\n            }\r\n\r\n            self._endLooping(wasLooping);\r\n        },\r\n\r\n        _onPostUpdate: function (dt) {\r\n            var self = this;\r\n            var list = self._postUpdateList;\r\n            if (! list.length) return;\r\n\r\n            var wasLooping = self._beginLooping();\r\n\r\n            var script;\r\n\r\n            for (list.loopIndex = 0; list.loopIndex < list.length; list.loopIndex++) {\r\n                script = list.items[list.loopIndex];\r\n                if (script.enabled) {\r\n                    self._scriptMethod(script, ScriptComponent.scriptMethods.postUpdate, dt);\r\n                }\r\n            }\r\n\r\n            self._endLooping(wasLooping);\r\n        },\r\n\r\n      \r\n        _insertScriptInstance: function (scriptInstance, index, scriptsLength) {\r\n            if (index === -1) {\r\n                // append script at the end and set execution order\r\n                this._scripts.push(scriptInstance);\r\n                scriptInstance.__executionOrder = scriptsLength;\r\n\r\n                // append script to the update list if it has an update method\r\n                if (scriptInstance.update) {\r\n                    this._updateList.append(scriptInstance);\r\n                }\r\n\r\n                // add script to the postUpdate list if it has a postUpdate method\r\n                if (scriptInstance.postUpdate) {\r\n                    this._postUpdateList.append(scriptInstance);\r\n                }\r\n            } else {\r\n                // insert script at index and set execution order\r\n                this._scripts.splice(index, 0, scriptInstance);\r\n                scriptInstance.__executionOrder = index;\r\n\r\n                // now we also need to update the execution order of all\r\n                // the script instances that come after this script\r\n                this._resetExecutionOrder(index + 1, scriptsLength + 1);\r\n\r\n                // insert script to the update list if it has an update method\r\n                // in the right order\r\n                if (scriptInstance.update) {\r\n                    this._updateList.insert(scriptInstance);\r\n                }\r\n\r\n                // insert script to the postUpdate list if it has a postUpdate method\r\n                // in the right order\r\n                if (scriptInstance.postUpdate) {\r\n                    this._postUpdateList.insert(scriptInstance);\r\n                }\r\n            }\r\n        },\r\n\r\n        _removeScriptInstance: function (scriptInstance) {\r\n            var idx = this._scripts.indexOf(scriptInstance);\r\n            if (idx === -1) return idx;\r\n\r\n            this._scripts.splice(idx, 1);\r\n\r\n            if (scriptInstance.update) {\r\n                this._updateList.remove(scriptInstance);\r\n            }\r\n\r\n            if (scriptInstance.postUpdate) {\r\n                this._postUpdateList.remove(scriptInstance);\r\n            }\r\n\r\n            return idx;\r\n        },\r\n\r\n        _resetExecutionOrder: function (startIndex, scriptsLength) {\r\n            for (var i = startIndex; i < scriptsLength; i++) {\r\n                this._scripts[i].__executionOrder = i;\r\n            }\r\n        },\r\n\r\n     \r\n        has: function (name) {\r\n            return !!this._scriptsIndex[name];\r\n        },\r\n\r\n      \r\n        get: function (name) {\r\n            var index = this._scriptsIndex[name];\r\n            return (index && index.instance) || null;\r\n        },\r\n\r\n        /* eslint-enable jsdoc/no-undefined-types */\r\n        create: function (name, args) {\r\n            var self = this;\r\n            args = args || { };\r\n\r\n            var scriptType = name;\r\n            var scriptName = name;\r\n\r\n            // shorthand using script name\r\n            if (typeof scriptType === 'string') {\r\n                scriptType = this.system.app.scripts.get(scriptType);\r\n            } else if (scriptType) {\r\n                scriptName = scriptType.__name;\r\n            }\r\n\r\n            if (scriptType) {\r\n                if (!this._scriptsIndex[scriptType.__name] || !this._scriptsIndex[scriptType.__name].instance) {\r\n                    // create script instance\r\n                    var scriptInstance = new scriptType({\r\n                        app: this.system.app,\r\n                        entity: this.entity,\r\n                        enabled: args.hasOwnProperty('enabled') ? args.enabled : true,\r\n                        attributes: args.attributes\r\n                    });\r\n\r\n                    var len = this._scripts.length;\r\n                    var ind = -1;\r\n                    if (typeof args.ind === 'number' && args.ind !== -1 && len > args.ind)\r\n                        ind = args.ind;\r\n\r\n                    this._insertScriptInstance(scriptInstance, ind, len);\r\n\r\n                    this._scriptsIndex[scriptType.__name] = {\r\n                        instance: scriptInstance,\r\n                        onSwap: function () {\r\n                            self.swap(scriptType.__name);\r\n                        }\r\n                    };\r\n\r\n                    this[scriptType.__name] = scriptInstance;\r\n\r\n                    if (!args.preloading)\r\n                        scriptInstance.__initializeAttributes();\r\n\r\n                    this.fire('create', scriptType.__name, scriptInstance);\r\n                    this.fire('create:' + scriptType.__name, scriptInstance);\r\n\r\n                    this.system.app.scripts.on('swap:' + scriptType.__name, this._scriptsIndex[scriptType.__name].onSwap);\r\n\r\n                    if (!args.preloading) {\r\n\r\n                        if (scriptInstance.enabled && !scriptInstance._initialized) {\r\n                            scriptInstance._initialized = true;\r\n\r\n                            if (scriptInstance.initialize)\r\n                                this._scriptMethod(scriptInstance, ScriptComponent.scriptMethods.initialize);\r\n                        }\r\n\r\n                        if (scriptInstance.enabled && !scriptInstance._postInitialized) {\r\n                            scriptInstance._postInitialized = true;\r\n                            if (scriptInstance.postInitialize)\r\n                                this._scriptMethod(scriptInstance, ScriptComponent.scriptMethods.postInitialize);\r\n                        }\r\n                    }\r\n\r\n\r\n                    return scriptInstance;\r\n                }\r\n\r\n                console.warn('script \\'' + scriptName + '\\' is already added to entity \\'' + this.entity.name + '\\'');\r\n            } else {\r\n                this._scriptsIndex[scriptName] = {\r\n                    awaiting: true,\r\n                    ind: this._scripts.length\r\n                };\r\n\r\n                console.warn('script \\'' + scriptName + '\\' is not found, awaiting it to be added to registry');\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        destroy: function (name) {\r\n            var scriptName = name;\r\n            var scriptType = name;\r\n\r\n            // shorthand using script name\r\n            if (typeof scriptType === 'string') {\r\n                scriptType = this.system.app.scripts.get(scriptType);\r\n                if (scriptType)\r\n                    scriptName = scriptType.__name;\r\n            }\r\n\r\n            var scriptData = this._scriptsIndex[scriptName];\r\n            delete this._scriptsIndex[scriptName];\r\n            if (!scriptData) return false;\r\n\r\n            if (scriptData.instance && !scriptData.instance._destroyed) {\r\n                scriptData.instance.enabled = false;\r\n                scriptData.instance._destroyed = true;\r\n\r\n                // if we are not currently looping through our scripts\r\n                // then it's safe to remove the script\r\n                if (!this._isLoopingThroughScripts) {\r\n                    var ind = this._removeScriptInstance(scriptData.instance);\r\n                    if (ind >= 0) {\r\n                        this._resetExecutionOrder(ind, this._scripts.length);\r\n                    }\r\n                } else {\r\n                    // otherwise push the script in _destroyedScripts and\r\n                    // remove it from _scripts when the loop is over\r\n                    this._destroyedScripts.push(scriptData.instance);\r\n                }\r\n            }\r\n\r\n            // remove swap event\r\n            this.system.app.scripts.off('swap:' + scriptName, scriptData.onSwap);\r\n\r\n            delete this[scriptName];\r\n\r\n            this.fire('destroy', scriptName, scriptData.instance || null);\r\n            this.fire('destroy:' + scriptName, scriptData.instance || null);\r\n\r\n            if (scriptData.instance)\r\n                scriptData.instance.fire('destroy');\r\n\r\n            return true;\r\n        },\r\n\r\n        swap: function (script) {\r\n            var scriptType = script;\r\n\r\n            // shorthand using script name\r\n            if (typeof scriptType === 'string')\r\n                scriptType = this.system.app.scripts.get(scriptType);\r\n\r\n            var old = this._scriptsIndex[scriptType.__name];\r\n            if (!old || !old.instance) return false;\r\n\r\n            var scriptInstanceOld = old.instance;\r\n            var ind = this._scripts.indexOf(scriptInstanceOld);\r\n\r\n            var scriptInstance = new scriptType({\r\n                app: this.system.app,\r\n                entity: this.entity,\r\n                enabled: scriptInstanceOld.enabled,\r\n                attributes: scriptInstanceOld.__attributes\r\n            });\r\n\r\n            if (!scriptInstance.swap)\r\n                return false;\r\n\r\n            scriptInstance.__initializeAttributes();\r\n\r\n            // add to component\r\n            this._scripts[ind] = scriptInstance;\r\n            this._scriptsIndex[scriptType.__name].instance = scriptInstance;\r\n            this[scriptType.__name] = scriptInstance;\r\n\r\n            // set execution order and make sure we update\r\n            // our update and postUpdate lists\r\n            scriptInstance.__executionOrder = ind;\r\n            if (scriptInstanceOld.update) {\r\n                this._updateList.remove(scriptInstanceOld);\r\n            }\r\n            if (scriptInstanceOld.postUpdate) {\r\n                this._postUpdateList.remove(scriptInstanceOld);\r\n            }\r\n\r\n            if (scriptInstance.update) {\r\n                this._updateList.insert(scriptInstance);\r\n            }\r\n            if (scriptInstance.postUpdate) {\r\n                this._postUpdateList.insert(scriptInstance);\r\n            }\r\n\r\n            this._scriptMethod(scriptInstance, ScriptComponent.scriptMethods.swap, scriptInstanceOld);\r\n\r\n            this.fire('swap', scriptType.__name, scriptInstance);\r\n            this.fire('swap:' + scriptType.__name, scriptInstance);\r\n\r\n            return true;\r\n        },\r\n\r\n        resolveDuplicatedEntityReferenceProperties: function (oldScriptComponent, duplicatedIdsMap) {\r\n            var newScriptComponent = this.entity.script;\r\n\r\n            // for each script in the old compononent\r\n            for (var scriptName in oldScriptComponent._scriptsIndex) {\r\n                // get the script type from the script registry\r\n                var scriptType = this.system.app.scripts.get(scriptName);\r\n                if (! scriptType) {\r\n                    continue;\r\n                }\r\n\r\n                // get the script from the component's index\r\n                var script = oldScriptComponent._scriptsIndex[scriptName];\r\n                if (! script || ! script.instance) {\r\n                    continue;\r\n                }\r\n\r\n                var newAttributesRaw = newScriptComponent[scriptName].__attributesRaw;\r\n                var newAttributes = newScriptComponent[scriptName].__attributes;\r\n                if (! newAttributesRaw && ! newAttributes) {\r\n                    continue;\r\n                }\r\n\r\n                // get the old script attributes from the instance\r\n                var oldAttributes = script.instance.__attributes;\r\n                for (var attributeName in oldAttributes) {\r\n                    if (! oldAttributes[attributeName]) {\r\n                        continue;\r\n                    }\r\n\r\n                    // get the attribute definition from the script type\r\n                    var attribute = scriptType.attributes.get(attributeName);\r\n                    if (! attribute || attribute.type !== 'entity') {\r\n                        continue;\r\n                    }\r\n\r\n                    if (attribute.array) {\r\n                        // handle entity array attribute\r\n                        var oldGuidArray = oldAttributes[attributeName];\r\n                        var len = oldGuidArray.length;\r\n                        if (! len) {\r\n                            continue;\r\n                        }\r\n\r\n                        var newGuidArray = oldGuidArray.slice();\r\n                        for (var i = 0; i < len; i++) {\r\n                            var guid = newGuidArray[i] instanceof pc2d.Entity ? newGuidArray[i].getGuid() : newGuidArray[i];\r\n                            if (duplicatedIdsMap[guid]) {\r\n                                // if we are using attributesRaw then use the guid otherwise use the entity\r\n                                newGuidArray[i] = newAttributesRaw ? duplicatedIdsMap[guid].getGuid() : duplicatedIdsMap[guid];\r\n                            }\r\n                        }\r\n\r\n                        if (newAttributesRaw) {\r\n                            newAttributesRaw[attributeName] = newGuidArray;\r\n                        } else {\r\n                            newAttributes[attributeName] = newGuidArray;\r\n                        }\r\n                    } else {\r\n                        // handle regular entity attribute\r\n                        var oldGuid = oldAttributes[attributeName];\r\n                        if (oldGuid instanceof pc2d.Entity) {\r\n                            oldGuid = oldGuid.getGuid();\r\n                        } else if (typeof oldGuid !== 'string') {\r\n                            continue;\r\n                        }\r\n\r\n                        if (duplicatedIdsMap[oldGuid]) {\r\n                            if (newAttributesRaw) {\r\n                                newAttributesRaw[attributeName] = duplicatedIdsMap[oldGuid].getGuid();\r\n                            } else {\r\n                                newAttributes[attributeName] = duplicatedIdsMap[oldGuid];\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        move: function (name, ind) {\r\n            var len = this._scripts.length;\r\n            if (ind >= len || ind < 0)\r\n                return false;\r\n\r\n            var scriptName = name;\r\n\r\n            if (typeof scriptName !== 'string')\r\n                scriptName = name.__name;\r\n\r\n            var scriptData = this._scriptsIndex[scriptName];\r\n            if (!scriptData || !scriptData.instance)\r\n                return false;\r\n\r\n            var indOld = this._scripts.indexOf(scriptData.instance);\r\n            if (indOld === -1 || indOld === ind)\r\n                return false;\r\n\r\n            // move script to another position\r\n            this._scripts.splice(ind, 0, this._scripts.splice(indOld, 1)[0]);\r\n\r\n            // reset execution order for scripts and re-sort update and postUpdate lists\r\n            this._resetExecutionOrder(0, len);\r\n            this._updateList.sort();\r\n            this._postUpdateList.sort();\r\n\r\n            this.fire('move', scriptName, scriptData.instance, ind, indOld);\r\n            this.fire('move:' + scriptName, scriptData.instance, ind, indOld);\r\n\r\n            return true;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ScriptComponent.prototype, 'enabled', {\r\n        get: function () {\r\n            return this._enabled;\r\n        },\r\n        set: function (value) {\r\n            var oldValue = this._enabled;\r\n            this._enabled = value;\r\n            this.fire('set', 'enabled', oldValue, value);\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(ScriptComponent.prototype, 'scripts', {\r\n        get: function () {\r\n            return this._scripts;\r\n        },\r\n        set: function (value) {\r\n            this._scriptsData = value;\r\n\r\n            for (var key in value) {\r\n                if (!value.hasOwnProperty(key))\r\n                    continue;\r\n\r\n                var script = this._scriptsIndex[key];\r\n                if (script) {\r\n                    // existing script\r\n\r\n                    // enabled\r\n                    if (typeof value[key].enabled === 'boolean')\r\n                        script.enabled = !!value[key].enabled;\r\n\r\n                    // attributes\r\n                    if (typeof value[key].attributes === 'object') {\r\n                        for (var attr in value[key].attributes) {\r\n                            if (pc2d.createScript.reservedAttributes[attr])\r\n                                continue;\r\n\r\n                            if (!script.__attributes.hasOwnProperty(attr)) {\r\n                                // new attribute\r\n                                var scriptType = this.system.app.scripts.get(key);\r\n                                if (scriptType)\r\n                                    scriptType.attributes.add(attr, { });\r\n                            }\r\n\r\n                            // update attribute\r\n                            script[attr] = value[key].attributes[attr];\r\n                        }\r\n                    }\r\n                } else {\r\n                    // TODO scripts2\r\n                    // new script\r\n                    console.log(this.order);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        ScriptComponent: ScriptComponent\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    var METHOD_INITIALIZE_ATTRIBUTES = '_onInitializeAttributes';\r\n    var METHOD_INITIALIZE = '_onInitialize';\r\n    var METHOD_POST_INITIALIZE = '_onPostInitialize';\r\n    var METHOD_UPDATE = '_onUpdate';\r\n    var METHOD_POST_UPDATE = '_onPostUpdate';\r\n\r\n\r\n    var executionOrderCounter = 0;\r\n\r\n\r\n    var ScriptComponentSystem = function ScriptComponentSystem(app) {\r\n        pc2d.ComponentSystem.call(this, app);\r\n\r\n        this.id = 'script';\r\n        this.app = app;\r\n\r\n        this.ComponentType = pc2d.ScriptComponent;\r\n        this.DataType = pc2d.ScriptComponentData;\r\n\r\n        this._components = new pc2d.SortedLoopArray({\r\n            sortBy: '_executionOrder'\r\n        });\r\n\r\n\r\n        this._enabledComponents = new pc2d.SortedLoopArray({\r\n            sortBy: '_executionOrder'\r\n        });\r\n\r\n\r\n        this.preloading = true;\r\n\r\n        this.on('beforeremove', this._onBeforeRemove, this);\r\n        pc2d.ComponentSystem.bind('initialize', this._onInitialize, this);\r\n        pc2d.ComponentSystem.bind('postInitialize', this._onPostInitialize, this);\r\n        pc2d.ComponentSystem.bind('update', this._onUpdate, this);\r\n        pc2d.ComponentSystem.bind('postUpdate', this._onPostUpdate, this);\r\n    };\r\n    ScriptComponentSystem.prototype = Object.create(pc2d.ComponentSystem.prototype);\r\n    ScriptComponentSystem.prototype.constructor = ScriptComponentSystem;\r\n\r\n    Object.assign(ScriptComponentSystem.prototype, {\r\n        initializeComponentData: function (component, data) {\r\n            // Set execution order to an ever-increasing number\r\n            // and add to the end of the components array.\r\n            component._executionOrder = executionOrderCounter++;\r\n            this._components.append(component);\r\n\r\n            // check we don't overflow executionOrderCounter\r\n            if (executionOrderCounter > Number.MAX_SAFE_INTEGER) {\r\n                this._resetExecutionOrder();\r\n            }\r\n\r\n            component.enabled = data.hasOwnProperty('enabled') ? !!data.enabled : true;\r\n\r\n            if (component.enabled && component.entity.enabled) {\r\n                this._enabledComponents.append(component);\r\n            }\r\n\r\n            if (data.hasOwnProperty('order') && data.hasOwnProperty('scripts')) {\r\n                component._scriptsData = data.scripts;\r\n\r\n                for (var i = 0; i < data.order.length; i++) {\r\n                    component.create(data.order[i], {\r\n                        enabled: data.scripts[data.order[i]].enabled,\r\n                        attributes: data.scripts[data.order[i]].attributes,\r\n                        preloading: this.preloading\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        cloneComponent: function (entity, clone) {\r\n            var i, key;\r\n            var order = [];\r\n            var scripts = { };\r\n\r\n            for (i = 0; i < entity.script._scripts.length; i++) {\r\n                var scriptInstance = entity.script._scripts[i];\r\n                var scriptName = scriptInstance.__scriptType.__name;\r\n                order.push(scriptName);\r\n\r\n                var attributes = { };\r\n                for (key in scriptInstance.__attributes)\r\n                    attributes[key] = scriptInstance.__attributes[key];\r\n\r\n                scripts[scriptName] = {\r\n                    enabled: scriptInstance._enabled,\r\n                    attributes: attributes\r\n                };\r\n            }\r\n\r\n            for (key in entity.script._scriptsIndex) {\r\n                if (key.awaiting) {\r\n                    order.splice(key.ind, 0, key);\r\n                }\r\n            }\r\n\r\n            var data = {\r\n                enabled: entity.script.enabled,\r\n                order: order,\r\n                scripts: scripts\r\n            };\r\n\r\n            return this.addComponent(clone, data);\r\n        },\r\n\r\n        _resetExecutionOrder: function () {\r\n            executionOrderCounter = 0;\r\n            for (var i = 0, len = this._components.length; i < len; i++) {\r\n                this._components.items[i]._executionOrder = executionOrderCounter++;\r\n            }\r\n        },\r\n\r\n        _callComponentMethod: function (components, name, dt) {\r\n            for (components.loopIndex = 0; components.loopIndex < components.length; components.loopIndex++) {\r\n                components.items[components.loopIndex][name](dt);\r\n            }\r\n        },\r\n\r\n        _onInitialize: function () {\r\n            this.preloading = false;\r\n\r\n            // initialize attributes on all components\r\n            this._callComponentMethod(this._components, METHOD_INITIALIZE_ATTRIBUTES);\r\n\r\n            // call onInitialize on enabled components\r\n            this._callComponentMethod(this._enabledComponents, METHOD_INITIALIZE);\r\n        },\r\n\r\n        _onPostInitialize: function () {\r\n            // call onPostInitialize on enabled components\r\n            this._callComponentMethod(this._enabledComponents, METHOD_POST_INITIALIZE);\r\n        },\r\n\r\n        _onUpdate: function (dt) {\r\n            // call onUpdate on enabled components\r\n            this._callComponentMethod(this._enabledComponents, METHOD_UPDATE, dt);\r\n        },\r\n\r\n        _onPostUpdate: function (dt) {\r\n            // call onPostUpdate on enabled components\r\n            this._callComponentMethod(this._enabledComponents, METHOD_POST_UPDATE, dt);\r\n        },\r\n\r\n        // inserts the component into the enabledComponents array\r\n        // which finds the right slot based on component._executionOrder\r\n        _addComponentToEnabled: function (component)  {\r\n            this._enabledComponents.insert(component);\r\n        },\r\n\r\n        // removes the component from the enabledComponents array\r\n        _removeComponentFromEnabled: function (component) {\r\n            this._enabledComponents.remove(component);\r\n        },\r\n\r\n        _onBeforeRemove: function (entity, component) {\r\n            var ind = this._components.items.indexOf(component);\r\n            if (ind >= 0) {\r\n                component._onBeforeRemove();\r\n            }\r\n\r\n            this._removeComponentFromEnabled(component);\r\n\r\n            // remove from components array\r\n            this._components.remove(component);\r\n        }\r\n    });\r\n\r\n    return {\r\n        ScriptComponentSystem: ScriptComponentSystem\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    var CssComponentData = function () {\r\n        this.enabled = true;\r\n    };\r\n\r\n    return {\r\n        CssComponentData: CssComponentData\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    // #ifdef DEBUG\r\n    var _debugLogging = false;\r\n    // #endif\r\n\r\n \r\n    pc2d.ELEMENTTYPE_GROUP = 'group';\r\n    pc2d.ELEMENTTYPE_IMAGE = 'image';\r\n    pc2d.ELEMENTTYPE_TEXT = 'text';\r\n\r\n    var CssComponent = function CssComponent(system, entity) {\r\n        pc2d.Component.call(this, system, entity);\r\n\r\n        // set to true by the ElementComponentSystem while\r\n        // the component is being initialized\r\n        this._beingInitialized = false;\r\n\r\n        this.entity.on('insert', this._onInsert, this);\r\n\r\n        this._patch();\r\n\r\n        this._type = pc2d.ELEMENTTYPE_GROUP;\r\n\r\n        this._cssText = null;\r\n        this._innerText = \"\";\r\n        this._textureAsset = null;\r\n        // element types\r\n        this._image = null;\r\n        this._text = null;\r\n        this._group = null;\r\n\r\n        this._drawOrder = 0;\r\n\r\n        if(!this.system.app.buildsource){\r\n            this.buildinStyle = document.createElement(\"style\");\r\n            this.buildinStyle.setAttribute(\"data-buildin\",\"yes\");\r\n        }\r\n\r\n        this._styleSheets = {};\r\n\r\n    };\r\n    CssComponent.prototype = Object.create(pc2d.Component.prototype);\r\n    CssComponent.prototype.constructor = CssComponent;\r\n\r\n    Object.assign(CssComponent.prototype, {\r\n        _patch: function () {\r\n            this.entity._sync = this._sync;\r\n        },\r\n\r\n        _unpatch: function () {\r\n            this.entity._sync = pc2d.Entity.prototype._sync;\r\n        },\r\n\r\n        // this method overwrites GraphNode#sync and so operates in scope of the Entity.\r\n        _sync: function () {\r\n            \r\n            var css = this.css;\r\n\r\n            if(!css.system.app.buildsource){\r\n                var sheets = \"\";\r\n                var name = this.name;\r\n                if(name !== \"New Entity\" &&  css.cssText){\r\n                    sheets += \".\" + name + \"{\" +\r\n                    css.cssText\r\n                     + \"}\";\r\n                }\r\n    \r\n               \r\n    \r\n                for (key in css.styleSheets) {\r\n                    var stylesheet = css.styleSheets[key];\r\n                    if (stylesheet && key) {\r\n                        sheets +=  key + \"{\"+ (stylesheet || '') + \"}\" ;\r\n                    };           \r\n                }\r\n                css.buildinStyle.innerHTML =  sheets;   \r\n            }\r\n\r\n\r\n            \r\n            \r\n            if(this.dom){\r\n                if(css.type === pc2d.ELEMENTTYPE_IMAGE || css.type === pc2d.ELEMENTTYPE_GROUP){\r\n                    css.textureAsset && this.dom.setAttribute(\"data-pc2d-asset-texture\",css.textureAsset || \"\"); \r\n                }else{\r\n                    this.dom.removeAttribute(\"data-pc2d-asset-texture\");   \r\n                }\r\n\r\n\r\n                if(css.type !== pc2d.ELEMENTTYPE_IMAGE && css.innerText){\r\n                    this.dom.innerHTML = css.innerText;\r\n                }\r\n            }\r\n            return pc2d.Entity.prototype._sync.call(this);\r\n        },\r\n\r\n        domOn: function (node, eventName, handler) {\r\n            if (!(document.attachEvent && typeof Windows === \"undefined\")) {\r\n              node.addEventListener(eventName, handler, false);\r\n              return function () {\r\n                node.removeEventListener(eventName, handler, false);\r\n              };\r\n            } else {\r\n              node.attachEvent('on' + eventName, handler);\r\n              return function () {\r\n                node.detachEvent('on' + eventName, handler);\r\n              };\r\n            }\r\n        },\r\n        show: function () {\r\n            this.entity.dom.style.display = \"\";\r\n        },\r\n        hide: function () {\r\n            this.entity.dom.style.display = \"none\";\r\n        },\r\n        querySet:function(selector,value) {\r\n            this.entity.dom && this.entity.dom.querySelector(selector) && (this.entity.dom.querySelector(selector).innerHTML = value);\r\n        },\r\n\r\n        _onInsert: function (parent) {\r\n            // when the entity is reparented find a possible new screen and mask\r\n\r\n            this.entity._dirtifyWorld();\r\n\r\n        },\r\n        onUpdate: function () {\r\n            \r\n            \r\n        },\r\n        onEnable: function () {\r\n            // if (this._image) this._image.onEnable();\r\n            // if (this._text) this._text.onEnable();\r\n            // if (this._group) this._group.onEnable();\r\n\r\n            if(!this.system.app.buildsource){\r\n                this.system.app.root.head.appendChild(this.buildinStyle);\r\n            }\r\n\r\n           \r\n            this.entity.dom && (this.entity.dom.style.display = \"\");\r\n            this.fire(\"enablecss\");\r\n        },\r\n\r\n        onDisable: function () {\r\n            \r\n            if(!this.system.app.buildsource){\r\n                this.buildinStyle.parentNode && this.system.app.root.head.removeChild(this.buildinStyle);\r\n            }\r\n           \r\n            this.entity.dom && (this.entity.dom.style.display = \"none\");\r\n            this.fire(\"disablecss\");\r\n        },\r\n\r\n        onRemove: function () {\r\n            this.entity.off('insert', this._onInsert, this);\r\n            this._unpatch();\r\n            if(!this.system.app.buildsource){\r\n                this.buildinStyle.parentNode && this.system.app.root.head.removeChild(this.buildinStyle);\r\n            }\r\n            \r\n            this.off();\r\n        },\r\n\r\n        addStyleSheet: function (data) {\r\n\r\n            this._styleSheets[data.name] = data.text;\r\n\r\n\r\n            return data.text;\r\n        },\r\n\r\n        removeStyleSheet: function (name) {\r\n            delete this._styleSheets[name];\r\n        }\r\n    });\r\n\r\n\r\n    Object.defineProperty(CssComponent.prototype, \"styleSheets\", {\r\n        get: function () {\r\n            return this._styleSheets;\r\n        },\r\n        set: function (value) {\r\n            var name, key;\r\n\r\n            // if value is null remove all clips\r\n            if (!value) {\r\n                for (name in this._styleSheets) {\r\n                    this.removeStyleSheet(name);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // remove existing clips not in new value\r\n            // and update clips in both objects\r\n            for (name in this._styleSheets) {\r\n                var found = false;\r\n                for (key in value) {\r\n                    if (value[key].name === name) {\r\n                        found = true;\r\n                        this._styleSheets[name] = value[key].text;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!found) {\r\n                    this.removeStyleSheet(name);\r\n                }\r\n            }\r\n\r\n            // add clips that do not exist\r\n            for (key in value) {\r\n                if (this._styleSheets[value[key].name]) continue;\r\n\r\n                this.addStyleSheet(value[key]);\r\n            }\r\n\r\n\r\n            \r\n\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(CssComponent.prototype, \"type\", {\r\n        get: function () {\r\n            return this._type;\r\n        },\r\n\r\n        set: function (value) {\r\n            if (value !== this._type || !this.entity.dom) {\r\n                this._type = value;\r\n\r\n                var olddom = this.entity.dom;\r\n                \r\n                if(this.type === pc2d.ELEMENTTYPE_IMAGE){\r\n                    this.entity.dom = document.createElement(\"IMG\");\r\n                }else if(this.type === pc2d.ELEMENTTYPE_TEXT){\r\n                    this.entity.dom = document.createElement(\"span\");\r\n                }else{\r\n                    this.entity.dom = document.createElement(\"div\");\r\n                }\r\n\r\n                if(olddom && olddom.parentNode){\r\n                    var nextSlibing = olddom.nextSlibing;\r\n                    var childNodes = olddom.childNodes;\r\n\r\n                    var parentNode = olddom.parentNode;\r\n                    parentNode.removeChild(olddom);\r\n\r\n                    var nodes = [];\r\n                    for(var i = 0;i < childNodes.length;i++){\r\n                        nodes.push(childNodes[i]);\r\n                    }\r\n\r\n\r\n                    if(nodes.length){\r\n                        for(var i = 0;i < nodes.length;i++){\r\n                            this.entity.dom.appendChild(nodes[i]);  \r\n                        }\r\n\r\n                    }\r\n                    nextSlibing &&  parentNode.insertBefore(this.entity.dom,nextSlibing);\r\n                    !nextSlibing &&  parentNode.appendChild(this.entity.dom);\r\n                }\r\n\r\n                olddom = null;\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n    Object.defineProperty(CssComponent.prototype, \"cssText\", {\r\n        get: function () {\r\n            return this._cssText;\r\n        },\r\n\r\n        set: function (value) {\r\n            if (value !== this._cssText) {\r\n                this._cssText = value;         \r\n            }\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(CssComponent.prototype, \"innerText\", {\r\n        get: function () {\r\n            return this._innerText;\r\n        },\r\n\r\n        set: function (value) {\r\n            if (value !== this._innerText) {\r\n                this._innerText = value;   \r\n                \r\n                if(this.entity.dom && this.type !== pc2d.ELEMENTTYPE_IMAGE){\r\n                    this.entity.dom.innerHTML = value;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    \r\n\r\n    Object.defineProperty(CssComponent.prototype, \"textureAsset\", {\r\n        get: function () {\r\n            return this._textureAsset;\r\n        },\r\n\r\n        set: function (value) {\r\n            if (value !== this._textureAsset) {\r\n                this._textureAsset = value; \r\n                \r\n                if(this.entity.dom){\r\n                    if(this.type === pc2d.ELEMENTTYPE_IMAGE || this.type === pc2d.ELEMENTTYPE_GROUP){\r\n                        this.textureAsset && this.entity.dom.setAttribute(\"data-pc2d-asset-texture\",this.textureAsset || \"\"); \r\n                    }else{\r\n                \r\n                        this.entity.dom.removeAttribute(\"data-pc2d-asset-texture\");  \r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return {\r\n        CssComponent: CssComponent\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    var _schema = [\r\n        'enabled'\r\n    ];\r\n\r\n   \r\n    var CssComponentSystem = function CssComponentSystem(app) {\r\n        pc2d.ComponentSystem.call(this, app);\r\n\r\n        this.id = 'css';\r\n        this.app = app;\r\n\r\n        this.ComponentType = pc2d.CssComponent;\r\n        this.DataType = pc2d.CssComponentData;\r\n\r\n        this.schema = _schema;\r\n\r\n        this.on('beforeremove', this._onRemoveComponent, this);\r\n\r\n        pc2d.ComponentSystem.bind('update', this.onUpdate, this);\r\n    };\r\n    CssComponentSystem.prototype = Object.create(pc2d.ComponentSystem.prototype);\r\n    CssComponentSystem.prototype.constructor = CssComponentSystem;\r\n\r\n    pc2d.Component._buildAccessors(pc2d.CssComponent.prototype, _schema);\r\n\r\n    Object.assign(CssComponentSystem.prototype, {\r\n        initializeComponentData: function (component, data, properties) {\r\n\r\n            if(data.type !== undefined){\r\n                component.type = data.type;\r\n            }\r\n           \r\n            if(data.cssText !== undefined){\r\n                component.cssText = data.cssText;\r\n            }\r\n\r\n            if(data.textureAsset !== undefined){\r\n                component.textureAsset = data.textureAsset;\r\n            }\r\n\r\n            if (data.styleSheets) {\r\n                for (var name in data.styleSheets) {\r\n                    component.addStyleSheet(data.styleSheets[name]);\r\n                }\r\n            }      \r\n\r\n            if (data.innerText !== undefined) {\r\n                component.innerText = data.innerText;\r\n            }\r\n\r\n            if (data.enabled !== undefined) {\r\n                component.enabled = data.enabled;\r\n            }\r\n            pc2d.ComponentSystem.prototype.initializeComponentData.call(this, component, data, properties);;\r\n            component._beingInitialized = false;\r\n        },\r\n\r\n        cloneComponent: function (entity, clone) {\r\n            this.addComponent(clone, {});        \r\n            clone.css.type = entity.css.type;\r\n            //clone的防止重复生成样式\r\n           // clone.css.data.cssText = entity.css.cssText;\r\n           // clone.css.cssText = entity.css.cssText;\r\n            clone.css.textureAsset = entity.css.textureAsset;\r\n            clone.css.innerText = entity.css.innerText;\r\n            clone.css.enabled = entity.css.enabled;\r\n            // if (entity.css.styleSheets) {\r\n            //     for (var name in entity.css.styleSheets) {\r\n            //         clone.css.addStyleSheet(entity.css.styleSheets[name]);\r\n            //     }\r\n            // }    \r\n        },\r\n\r\n        onUpdate: function (dt) {\r\n            var components = this.store;\r\n\r\n            for (var id in components) {\r\n                var entity = components[id].entity;\r\n                var component = entity.css;\r\n                if (component.enabled && entity.enabled) {\r\n                    component.onUpdate();\r\n                }\r\n            }\r\n        },\r\n\r\n        _onRemoveComponent: function (entity, component) {\r\n            component.onRemove();\r\n        }\r\n    });\r\n\r\n    return {\r\n        CssComponentSystem: CssComponentSystem\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n\r\n    var GraphNode = function GraphNode(name) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this.name = typeof name === \"string\" ? name : \"Untitled\"; // Non-unique human readable name\r\n        this.tags = new pc2d.Tags(this);\r\n\r\n        this._labels = {};\r\n\r\n  \r\n        this._dirtyLocal = false;\r\n        this._aabbVer = 0;\r\n\r\n\r\n        this._frozen = false;\r\n\r\n        this._dirtyWorld = false;\r\n\r\n        this._dirtyNormal = true;\r\n\r\n        this._right = null;\r\n        this._up = null;\r\n        this._forward = null;\r\n\r\n        this._parent = null;\r\n        this._children = [];\r\n        this._graphDepth = 0;\r\n\r\n        this._enabled = true;\r\n        this._enabledInHierarchy = false;\r\n\r\n        this.scaleCompensation = false;\r\n    };\r\n    GraphNode.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    GraphNode.prototype.constructor = GraphNode;\r\n\r\n    Object.defineProperty(GraphNode.prototype, 'enabled', {\r\n        get: function () {\r\n            return this._enabled && this._enabledInHierarchy;\r\n        },\r\n\r\n        set: function (enabled) {\r\n            if (this._enabled !== enabled) {\r\n                this._enabled = enabled;\r\n\r\n                if (!this._parent || this._parent.enabled)\r\n                    this._notifyHierarchyStateChanged(this, enabled);\r\n            }\r\n        }\r\n    });\r\n    Object.defineProperty(GraphNode.prototype, 'parent', {\r\n        get: function () {\r\n            return this._parent;\r\n        }\r\n    });\r\n    Object.defineProperty(GraphNode.prototype, 'path', {\r\n        get: function () {\r\n            var parent = this._parent;\r\n            if (parent) {\r\n                var path = this.name;\r\n                var format = \"{0}/{1}\";\r\n\r\n                while (parent && parent._parent) {\r\n                    path = pc2d.string.format(format, parent.name, path);\r\n                    parent = parent._parent;\r\n                }\r\n\r\n                return path;\r\n            }\r\n            return '';\r\n        }\r\n    });\r\n    Object.defineProperty(GraphNode.prototype, 'root', {\r\n        get: function () {\r\n            var parent = this._parent;\r\n            if (!parent)\r\n                return this;\r\n\r\n            while (parent._parent)\r\n                parent = parent._parent;\r\n\r\n            return parent;\r\n        }\r\n    });\r\n    Object.defineProperty(GraphNode.prototype, 'children', {\r\n        get: function () {\r\n            return this._children;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(GraphNode.prototype, 'graphDepth', {\r\n        get: function () {\r\n            return this._graphDepth;\r\n        }\r\n    });\r\n\r\n    Object.assign(GraphNode.prototype, {\r\n        _notifyHierarchyStateChanged: function (node, enabled) {\r\n            node._onHierarchyStateChanged(enabled);\r\n\r\n            var c = node._children;\r\n            for (var i = 0, len = c.length; i < len; i++) {\r\n                if (c[i]._enabled)\r\n                    this._notifyHierarchyStateChanged(c[i], enabled);\r\n            }\r\n        },\r\n\r\n        _onHierarchyStateChanged: function (enabled) {\r\n            // Override in derived classes\r\n            this._enabledInHierarchy = enabled;\r\n            if (enabled && !this._frozen)\r\n                this._unfreezeParentToRoot();\r\n        },\r\n\r\n        _cloneInternal: function (clone) {\r\n            clone.name = this.name;\r\n\r\n            var tags = this.tags._list;\r\n            for (var i = 0; i < tags.length; i++)\r\n                clone.tags.add(tags[i]);\r\n\r\n            clone._labels = Object.assign({}, this._labels);\r\n\r\n          \r\n            clone._dirtyLocal = this._dirtyLocal;\r\n            clone._dirtyWorld = this._dirtyWorld;\r\n            clone._dirtyNormal = this._dirtyNormal;\r\n            clone._aabbVer = this._aabbVer + 1;\r\n            clone._enabled = this._enabled;\r\n            // false as this node is not in the hierarchy yet\r\n            clone._enabledInHierarchy = false;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = new pc2d.GraphNode();\r\n            this._cloneInternal(clone);\r\n            return clone;\r\n        },\r\n\r\n        find: function (attr, value) {\r\n            var result, results = [];\r\n            var len = this._children.length;\r\n            var i, descendants;\r\n\r\n            if (attr instanceof Function) {\r\n                var fn = attr;\r\n\r\n                result = fn(this);\r\n                if (result)\r\n                    results.push(this);\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    descendants = this._children[i].find(fn);\r\n                    if (descendants.length)\r\n                        results = results.concat(descendants);\r\n                }\r\n            } else {\r\n                var testValue;\r\n\r\n                if (this[attr]) {\r\n                    if (this[attr] instanceof Function) {\r\n                        testValue = this[attr]();\r\n                    } else {\r\n                        testValue = this[attr];\r\n                    }\r\n                    if (testValue === value)\r\n                        results.push(this);\r\n                }\r\n\r\n                for (i = 0; i < len; ++i) {\r\n                    descendants = this._children[i].find(attr, value);\r\n                    if (descendants.length)\r\n                        results = results.concat(descendants);\r\n                }\r\n            }\r\n\r\n            return results;\r\n        },\r\n        findOne: function (attr, value) {\r\n            var i;\r\n            var len = this._children.length;\r\n            var result = null;\r\n\r\n            if (attr instanceof Function) {\r\n                var fn = attr;\r\n\r\n                result = fn(this);\r\n                if (result)\r\n                    return this;\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    result = this._children[i].findOne(fn);\r\n                    if (result)\r\n                        return result;\r\n                }\r\n            } else {\r\n                var testValue;\r\n                if (this[attr]) {\r\n                    if (this[attr] instanceof Function) {\r\n                        testValue = this[attr]();\r\n                    } else {\r\n                        testValue = this[attr];\r\n                    }\r\n                    if (testValue === value) {\r\n                        return this;\r\n                    }\r\n                }\r\n\r\n                for (i = 0; i < len; i++) {\r\n                    result = this._children[i].findOne(attr, value);\r\n                    if (result !== null)\r\n                        return result;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        findByTag: function () {\r\n            var tags = this.tags._processArguments(arguments);\r\n            return this._findByTag(tags);\r\n        },\r\n\r\n        _findByTag: function (tags) {\r\n            var result = [];\r\n            var i, len = this._children.length;\r\n            var descendants;\r\n\r\n            for (i = 0; i < len; i++) {\r\n                if (this._children[i].tags._has(tags))\r\n                    result.push(this._children[i]);\r\n\r\n                descendants = this._children[i]._findByTag(tags);\r\n                if (descendants.length)\r\n                    result = result.concat(descendants);\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        findByName: function (name) {\r\n            if (this.name === name) return this;\r\n\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                var found = this._children[i].findByName(name);\r\n                if (found !== null) return found;\r\n            }\r\n            return null;\r\n        },\r\n        findByPath: function (path) {\r\n            // split the paths in parts. Each part represents a deeper hierarchy level\r\n            var parts = path.split('/');\r\n            var currentParent = this;\r\n            var result = null;\r\n\r\n            for (var i = 0, imax = parts.length; i < imax && currentParent; i++) {\r\n                var part = parts[i];\r\n\r\n                result = null;\r\n\r\n                // check all the children\r\n                var children = currentParent._children;\r\n                for (var j = 0, jmax = children.length; j < jmax; j++) {\r\n                    if (children[j].name == part) {\r\n                        result = children[j];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // keep going deeper in the hierarchy\r\n                currentParent = result;\r\n            }\r\n\r\n            return result;\r\n        },\r\n        forEach: function (callback, thisArg) {\r\n            callback.call(thisArg, this);\r\n\r\n            var children = this._children;\r\n            for (var i = 0; i < children.length; i++) {\r\n                children[i].forEach(callback, thisArg);\r\n            }\r\n        },\r\n        isDescendantOf: function (node) {\r\n            var parent = this._parent;\r\n            while (parent) {\r\n                if (parent === node)\r\n                    return true;\r\n\r\n                parent = parent._parent;\r\n            }\r\n            return false;\r\n        },\r\n        isAncestorOf: function (node) {\r\n            return node.isDescendantOf(this);\r\n        },\r\n\r\n\r\n        reparent: function (parent, index) {\r\n            var current = this._parent;\r\n\r\n            if (current)\r\n                current.removeChild(this);\r\n\r\n            if (parent) {\r\n                if (index >= 0) {\r\n                    parent.insertChild(this, index);\r\n                } else {\r\n                    parent.addChild(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        _dirtifyLocal: function () {\r\n            if (!this._dirtyLocal) {\r\n                this._dirtyLocal = true;\r\n                if (!this._dirtyWorld)\r\n                    this._dirtifyWorld();\r\n            }\r\n        },\r\n\r\n        _unfreezeParentToRoot: function () {\r\n            var p = this._parent;\r\n            while (p) {\r\n                p._frozen = false;\r\n                p = p._parent;\r\n            }\r\n        },\r\n\r\n        _dirtifyWorld: function () {\r\n            if (!this._dirtyWorld)\r\n                this._unfreezeParentToRoot();\r\n            this._dirtifyWorldInternal();\r\n        },\r\n\r\n        _dirtifyWorldInternal: function () {\r\n            if (!this._dirtyWorld) {\r\n                this._frozen = false;\r\n                this._dirtyWorld = true;\r\n                for (var i = 0; i < this._children.length; i++) {\r\n                    if (!this._children[i]._dirtyWorld)\r\n                        this._children[i]._dirtifyWorldInternal();\r\n                }\r\n            }\r\n            this._dirtyNormal = true;\r\n            this._aabbVer++;\r\n        },\r\n\r\n\r\n        addChild: function (node) {\r\n            if (node._parent !== null)\r\n                throw new Error(\"GraphNode is already parented\");\r\n\r\n            this._children.push(node);\r\n            this._onInsertChild(node);\r\n        },\r\n\r\n        addChildAndSaveTransform: function (node) {\r\n\r\n            var current = node._parent;\r\n            if (current)\r\n                current.removeChild(node);\r\n\r\n\r\n            this._children.push(node);\r\n            this._onInsertChild(node);\r\n        },\r\n\r\n        insertChild: function (node, index) {\r\n            if (node._parent !== null)\r\n                throw new Error(\"GraphNode is already parented\");\r\n\r\n            this._children.splice(index, 0, node);\r\n            this._onInsertChild(node);\r\n        },\r\n\r\n        _onInsertChild: function (node) {\r\n            node._parent = this;\r\n\r\n            // the child node should be enabled in the hierarchy only if itself is enabled and if\r\n            // this parent is enabled\r\n            var enabledInHierarchy = (node._enabled && this.enabled);\r\n            if (node._enabledInHierarchy !== enabledInHierarchy) {\r\n                node._enabledInHierarchy = enabledInHierarchy;\r\n                node._notifyHierarchyStateChanged(node, enabledInHierarchy);\r\n            }\r\n\r\n            // The graph depth of the child and all of its descendants will now change\r\n            node._updateGraphDepth();\r\n\r\n            // The child (plus subhierarchy) will need world transforms to be recalculated\r\n            node._dirtifyWorld();\r\n            // node might be already marked as dirty, in that case the whole chain stays frozen, so let's enforce unfreeze\r\n            if (this._frozen)\r\n                node._unfreezeParentToRoot();\r\n\r\n            // alert an entity that it has been inserted\r\n            if (node.fire) node.fire('insert', this);\r\n\r\n            // alert the parent that it has had a child inserted\r\n            if (this.fire) this.fire('childinsert', node);\r\n        },\r\n\r\n        _updateGraphDepth: function () {\r\n            if (this._parent) {\r\n                this._graphDepth = this._parent._graphDepth + 1;\r\n            } else {\r\n                this._graphDepth = 0;\r\n            }\r\n\r\n            for (var i = 0, len = this._children.length; i < len; i++) {\r\n                this._children[i]._updateGraphDepth();\r\n            }\r\n        },\r\n\r\n        removeChild: function (child) {\r\n            var i;\r\n            var length = this._children.length;\r\n\r\n            // Remove from child list\r\n            for (i = 0; i < length; ++i) {\r\n                if (this._children[i] === child) {\r\n                    this._children.splice(i, 1);\r\n\r\n                    // Clear parent\r\n                    child._parent = null;\r\n\r\n                    // alert child that it has been removed\r\n                    if (child.fire) child.fire('remove', this);\r\n\r\n                    // alert the parent that it has had a child removed\r\n                    if (this.fire) this.fire('childremove', child);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n\r\n        _sync: function () {\r\n            if (this._dirtyLocal) {\r\n                this._dirtyLocal = false;\r\n            }\r\n        },\r\n\r\n        syncHierarchy: function () {\r\n            if (!this._enabled)\r\n                return;\r\n\r\n            if (this._frozen)\r\n                return;\r\n            this._frozen = true;\r\n\r\n            if (this._dirtyLocal || this._dirtyWorld) {\r\n                this._sync();\r\n            }\r\n\r\n            var children = this._children;\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                children[i].syncHierarchy();\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        GraphNode: GraphNode\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    var Http = function Http() {\r\n    };\r\n\r\n    Http.ContentType = {\r\n        FORM_URLENCODED: \"application/x-www-form-urlencoded\",\r\n        GIF: \"image/gif\",\r\n        JPEG: \"image/jpeg\",\r\n        DDS: \"image/dds\",\r\n        JSON: \"application/json\",\r\n        PNG: \"image/png\",\r\n        TEXT: \"text/plain\",\r\n        XML: \"application/xml\",\r\n        WAV: \"audio/x-wav\",\r\n        OGG: \"audio/ogg\",\r\n        MP3: \"audio/mpeg\",\r\n        MP4: \"audio/mp4\",\r\n        AAC: \"audio/aac\",\r\n        BIN: \"application/octet-stream\",\r\n        BASIS: \"image/basis\"\r\n    };\r\n\r\n    Http.ResponseType = {\r\n        TEXT: 'text',\r\n        ARRAY_BUFFER: 'arraybuffer',\r\n        BLOB: 'blob',\r\n        DOCUMENT: 'document',\r\n        JSON: 'json'\r\n    };\r\n\r\n    Http.binaryExtensions = [\r\n        '.model',\r\n        '.wav',\r\n        '.ogg',\r\n        '.mp3',\r\n        '.mp4',\r\n        '.m4a',\r\n        '.aac',\r\n        '.dds',\r\n        '.glb'\r\n    ];\r\n\r\n    Http.retryDelay = 100;\r\n\r\n    Object.assign(Http.prototype, {\r\n\r\n        ContentType: Http.ContentType,\r\n        ResponseType: Http.ResponseType,\r\n        binaryExtensions: Http.binaryExtensions,\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Http#get\r\n         * @description Perform an HTTP GET request to the given url.\r\n         * @param {string} url - The URL to make the request to.\r\n         * @param {pc2d.callbacks.HttpResponse} callback - The callback used when the response has returned. Passed (err, data)\r\n         * where data is the response (format depends on response type: text, Object, ArrayBuffer, XML) and\r\n         * err is the error code.\r\n         * @example\r\n         * pc2d.http.get(\"http://example.com/\", function (err, response) {\r\n         *     console.log(response);\r\n         * });\r\n         * @returns {XMLHttpRequest} The request object.\r\n         */\r\n        /**\r\n         * @function\r\n         * @name pc2d.Http#get\r\n         * @variation 2\r\n         * @description Perform an HTTP GET request to the given url.\r\n         * @param {string} url - The URL to make the request to.\r\n         * @param {object} options - Additional options.\r\n         * @param {object} [options.headers] - HTTP headers to add to the request.\r\n         * @param {boolean} [options.async] - Make the request asynchronously. Defaults to true.\r\n         * @param {object} [options.cache] - If false, then add a timestamp to the request to prevent caching.\r\n         * @param {boolean} [options.withCredentials] - Send cookies with this request. Defaults to false.\r\n         * @param {string} [options.responseType] - Override the response type.\r\n         * @param {Document|object} [options.postdata] - Data to send in the body of the request.\r\n         * Some content types are handled automatically. If postdata is an XML Document, it is handled. If\r\n         * the Content-Type header is set to 'application/json' then the postdata is JSON stringified.\r\n         * Otherwise, by default, the data is sent as form-urlencoded.\r\n         * @param {boolean} [options.retry] - If true then if the request fails it will be retried with an exponential backoff.\r\n         * @param {number} [options.maxRetries] - If options.retry is true this specifies the maximum number of retries. Defaults to 5.\r\n         * @param {number} [options.maxRetryDelay] - If options.retry is true this specifies the maximum amount of time to wait between retries in milliseconds. Defaults to 5000.\r\n         * @param {pc2d.callbacks.HttpResponse} callback - The callback used when the response has returned. Passed (err, data)\r\n         * where data is the response (format depends on response type: text, Object, ArrayBuffer, XML) and\r\n         * err is the error code.\r\n         * @returns {XMLHttpRequest} The request object.\r\n         */\r\n        get: function (url, options, callback) {\r\n            if (typeof options === \"function\") {\r\n                callback = options;\r\n                options = {};\r\n            }\r\n            return this.request(\"GET\", url, options, callback);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Http#post\r\n         * @description Perform an HTTP POST request to the given url.\r\n         * @param {string} url - The URL to make the request to.\r\n         * @param {object} data - Data to send in the body of the request.\r\n         * Some content types are handled automatically. If postdata is an XML Document, it is handled. If\r\n         * the Content-Type header is set to 'application/json' then the postdata is JSON stringified.\r\n         * Otherwise, by default, the data is sent as form-urlencoded.\r\n         * @param {pc2d.callbacks.HttpResponse} callback - The callback used when the response has returned. Passed (err, data)\r\n         * where data is the response (format depends on response type: text, Object, ArrayBuffer, XML) and\r\n         * err is the error code.\r\n         * @returns {XMLHttpRequest} The request object.\r\n         */\r\n        /**\r\n         * @function\r\n         * @name pc2d.Http#post\r\n         * @variation 2\r\n         * @description Perform an HTTP POST request to the given url.\r\n         * @param {string} url - The URL to make the request to.\r\n         * @param {object} data - Data to send in the body of the request.\r\n         * Some content types are handled automatically. If postdata is an XML Document, it is handled. If\r\n         * the Content-Type header is set to 'application/json' then the postdata is JSON stringified.\r\n         * Otherwise, by default, the data is sent as form-urlencoded.\r\n         * @param {object} options - Additional options.\r\n         * @param {object} [options.headers] - HTTP headers to add to the request.\r\n         * @param {boolean} [options.async] - Make the request asynchronously. Defaults to true.\r\n         * @param {object} [options.cache] - If false, then add a timestamp to the request to prevent caching.\r\n         * @param {boolean} [options.withCredentials] - Send cookies with this request. Defaults to false.\r\n         * @param {string} [options.responseType] - Override the response type.\r\n         * @param {boolean} [options.retry] - If true then if the request fails it will be retried with an exponential backoff.\r\n         * @param {number} [options.maxRetries] - If options.retry is true this specifies the maximum number of retries. Defaults to 5.\r\n         * @param {number} [options.maxRetryDelay] - If options.retry is true this specifies the maximum amount of time to wait between retries in milliseconds. Defaults to 5000.\r\n         * @param {pc2d.callbacks.HttpResponse} callback - The callback used when the response has returned. Passed (err, data)\r\n         * where data is the response (format depends on response type: text, Object, ArrayBuffer, XML) and\r\n         * err is the error code.\r\n         * @returns {XMLHttpRequest} The request object.\r\n         */\r\n        post: function (url, data, options, callback) {\r\n            if (typeof options === \"function\") {\r\n                callback = options;\r\n                options = {};\r\n            }\r\n            options.postdata = data;\r\n            return this.request(\"POST\", url, options, callback);\r\n        },\r\n\r\n        /**\r\n         * @function\r\n         * @name pc2d.Http#put\r\n         * @description Perform an HTTP PUT request to the given url.\r\n         * @param {string} url - The URL to make the request to.\r\n         * @param {Document|object} data - Data to send in the body of the request.\r\n         * Some content types are handled automatically. If postdata is an XML Document, it is handled. If\r\n         * the Content-Type header is set to 'application/json' then the postdata is JSON stringified.\r\n         * Otherwise, by default, the data is sent as form-urlencoded.\r\n         * @param {pc2d.callbacks.HttpResponse} callback - The callback used when the response has returned. Passed (err, data)\r\n         * where data is the response (format depends on response type: text, Object, ArrayBuffer, XML) and\r\n         * err is the error code.\r\n         * @returns {XMLHttpRequest} The request object.\r\n         */\r\n        /**\r\n         * @function\r\n         * @name pc2d.Http#put\r\n         * @variation 2\r\n         * @description Perform an HTTP PUT request to the given url.\r\n         * @param {string} url - The URL to make the request to.\r\n         * @param {Document|object} data - Data to send in the body of the request.\r\n         * Some content types are handled automatically. If postdata is an XML Document, it is handled. If\r\n         * the Content-Type header is set to 'application/json' then the postdata is JSON stringified.\r\n         * Otherwise, by default, the data is sent as form-urlencoded.\r\n         * @param {object} options - Additional options.\r\n         * @param {object} [options.headers] - HTTP headers to add to the request.\r\n         * @param {boolean} [options.async] - Make the request asynchronously. Defaults to true.\r\n         * @param {object} [options.cache] - If false, then add a timestamp to the request to prevent caching.\r\n         * @param {boolean} [options.withCredentials] - Send cookies with this request. Defaults to false.\r\n         * @param {string} [options.responseType] - Override the response type.\r\n         * @param {boolean} [options.retry] - If true then if the request fails it will be retried with an exponential backoff.\r\n         * @param {number} [options.maxRetries] - If options.retry is true this specifies the maximum number of retries. Defaults to 5.\r\n         * @param {number} [options.maxRetryDelay] - If options.retry is true this specifies the maximum amount of time to wait between retries in milliseconds. Defaults to 5000.\r\n         * @param {pc2d.callbacks.HttpResponse} callback - The callback used when the response has returned. Passed (err, data)\r\n         * where data is the response (format depends on response type: text, Object, ArrayBuffer, XML) and\r\n         * err is the error code.\r\n         * @returns {XMLHttpRequest} The request object.\r\n         */\r\n        put: function (url, data, options, callback) {\r\n            if (typeof options === \"function\") {\r\n                callback = options;\r\n                options = {};\r\n            }\r\n            options.postdata = data;\r\n            return this.request(\"PUT\", url, options, callback);\r\n        },\r\n\r\n        del: function (url, options, callback) {\r\n            if (typeof options === \"function\") {\r\n                callback = options;\r\n                options = {};\r\n            }\r\n            return this.request(\"DELETE\", url, options, callback);\r\n        },\r\n\r\n        request: function (method, url, options, callback) {\r\n            var uri, query, timestamp, postdata, xhr;\r\n            var errored = false;\r\n\r\n            if (typeof options === \"function\") {\r\n                callback = options;\r\n                options = {};\r\n            }\r\n\r\n            // if retryable we are going to store new properties\r\n            // in the options so create a new copy to not affect\r\n            // the original\r\n            if (options.retry) {\r\n                options = Object.assign({\r\n                    retries: 0,\r\n                    maxRetries: 5\r\n                }, options);\r\n            }\r\n\r\n            // store callback\r\n            options.callback = callback;\r\n\r\n            // setup defaults\r\n            if (options.async == null) {\r\n                options.async = true;\r\n            }\r\n            if (options.headers == null) {\r\n                options.headers = {};\r\n            }\r\n\r\n            if (options.postdata != null) {\r\n                if (options.postdata instanceof Document) {\r\n                    // It's an XML document, so we can send it directly.\r\n                    // XMLHttpRequest will set the content type correctly.\r\n                    postdata = options.postdata;\r\n                } else if (options.postdata instanceof FormData) {\r\n                    postdata = options.postdata;\r\n                } else if (options.postdata instanceof Object) {\r\n                    // Now to work out how to encode the post data based on the headers\r\n                    var contentType = options.headers[\"Content-Type\"];\r\n\r\n                    // If there is no type then default to form-encoded\r\n                    if (contentType === undefined) {\r\n                        options.headers[\"Content-Type\"] = Http.ContentType.FORM_URLENCODED;\r\n                        contentType = options.headers[\"Content-Type\"];\r\n                    }\r\n                    switch (contentType) {\r\n                        case Http.ContentType.FORM_URLENCODED:\r\n                            // Normal URL encoded form data\r\n                            postdata = \"\";\r\n                            var bFirstItem = true;\r\n\r\n                            // Loop round each entry in the map and encode them into the post data\r\n                            for (var key in options.postdata) {\r\n                                if (options.postdata.hasOwnProperty(key)) {\r\n                                    if (bFirstItem) {\r\n                                        bFirstItem = false;\r\n                                    } else {\r\n                                        postdata += \"&\";\r\n                                    }\r\n                                    postdata += escape(key) + \"=\" + escape(options.postdata[key]);\r\n                                }\r\n                            }\r\n                            break;\r\n                        default:\r\n                        case Http.ContentType.JSON:\r\n                            if (contentType == null) {\r\n                                options.headers[\"Content-Type\"] = Http.ContentType.JSON;\r\n                            }\r\n                            postdata = JSON.stringify(options.postdata);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    postdata = options.postdata;\r\n                }\r\n            }\r\n\r\n            if (options.cache === false) {\r\n                // Add timestamp to url to prevent browser caching file\r\n                timestamp = pc2d.time.now();\r\n\r\n                uri = new pc2d.URI(url);\r\n                if (!uri.query) {\r\n                    uri.query = \"ts=\" + timestamp;\r\n                } else {\r\n                    uri.query = uri.query + \"&ts=\" + timestamp;\r\n                }\r\n                url = uri.toString();\r\n            }\r\n\r\n            if (options.query) {\r\n                uri = new pc2d.URI(url);\r\n                query = pc2d.extend(uri.getQuery(), options.query);\r\n                uri.setQuery(query);\r\n                url = uri.toString();\r\n            }\r\n\r\n            xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, options.async);\r\n            xhr.withCredentials = options.withCredentials !== undefined ? options.withCredentials : false;\r\n            xhr.responseType = options.responseType || this._guessResponseType(url);\r\n\r\n            // Set the http headers\r\n            for (var header in options.headers) {\r\n                if (options.headers.hasOwnProperty(header)) {\r\n                    xhr.setRequestHeader(header, options.headers[header]);\r\n                }\r\n            }\r\n\r\n            xhr.onreadystatechange = function () {\r\n                this._onReadyStateChange(method, url, options, xhr);\r\n            }.bind(this);\r\n\r\n            xhr.onerror = function () {\r\n                this._onError(method, url, options, xhr);\r\n                errored = true;\r\n            }.bind(this);\r\n\r\n            try {\r\n                xhr.send(postdata);\r\n            } catch (e) {\r\n                // DWE: Don't callback on exceptions as behaviour is inconsistent, e.g. cross-domain request errors don't throw an exception.\r\n                // Error callback should be called by xhr.onerror() callback instead.\r\n                if (!errored) {\r\n                    options.error(xhr.status, xhr, e);\r\n                }\r\n            }\r\n\r\n            // Return the request object as it can be handy for blocking calls\r\n            return xhr;\r\n        },\r\n\r\n        _guessResponseType: function (url) {\r\n            var uri = new pc2d.URI(url);\r\n            var ext = pc2d.path.getExtension(uri.path);\r\n\r\n            if (Http.binaryExtensions.indexOf(ext) >= 0) {\r\n                return Http.ResponseType.ARRAY_BUFFER;\r\n            }\r\n\r\n            if (ext === \".xml\") {\r\n                return Http.ResponseType.DOCUMENT;\r\n            }\r\n\r\n            return Http.ResponseType.TEXT;\r\n        },\r\n\r\n        _isBinaryContentType: function (contentType) {\r\n            var binTypes = [Http.ContentType.MP4, Http.ContentType.WAV, Http.ContentType.OGG, Http.ContentType.MP3, Http.ContentType.BIN, Http.ContentType.DDS, Http.ContentType.BASIS];\r\n            if (binTypes.indexOf(contentType) >= 0) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _onReadyStateChange: function (method, url, options, xhr) {\r\n            if (xhr.readyState === 4) {\r\n                switch (xhr.status) {\r\n                    case 0: {\r\n\r\n                        // If this is a local resource then continue (IOS) otherwise the request\r\n                        // didn't complete, possibly an exception or attempt to do cross-domain request\r\n                        if (url[0] != '/') {\r\n                            this._onSuccess(method, url, options, xhr);\r\n                        } else {\r\n                            this._onError(method, url, options, xhr);\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case 200:\r\n                    case 201:\r\n                    case 206:\r\n                    case 304: {\r\n                        this._onSuccess(method, url, options, xhr);\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        this._onError(method, url, options, xhr);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onSuccess: function (method, url, options, xhr) {\r\n            var response;\r\n            var header;\r\n            var contentType;\r\n            var parts;\r\n            header = xhr.getResponseHeader(\"Content-Type\");\r\n            if (header) {\r\n                // Split up header into content type and parameter\r\n                parts = header.split(\";\");\r\n                contentType = parts[0].trim();\r\n            }\r\n            try {\r\n                // Check the content type to see if we want to parse it\r\n                if (contentType === this.ContentType.JSON || url.split('?')[0].endsWith(\".json\")) {\r\n                    // It's a JSON response\r\n                    response = JSON.parse(xhr.responseText);\r\n                } else if (this._isBinaryContentType(contentType)) {\r\n                    response = xhr.response;\r\n                } else {\r\n                    if (contentType) {\r\n                        logWARNING(pc2d.string.format('responseType: {0} being served with Content-Type: {1}', xhr.responseType, contentType));\r\n                    }\r\n\r\n                    if (xhr.responseType === Http.ResponseType.ARRAY_BUFFER) {\r\n                        response = xhr.response;\r\n                    } else if (xhr.responseType === Http.ResponseType.BLOB || xhr.responseType === Http.ResponseType.JSON) {\r\n                        response = xhr.response;\r\n                    } else {\r\n                        if (xhr.responseType === Http.ResponseType.DOCUMENT || contentType === this.ContentType.XML) {\r\n                            // It's an XML response\r\n                            response = xhr.responseXML;\r\n                        } else {\r\n                            // It's raw data\r\n                            response = xhr.responseText;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                options.callback(null, response);\r\n            } catch (err) {\r\n                options.callback(err);\r\n            }\r\n        },\r\n\r\n        _onError: function (method, url, options, xhr) {\r\n            if (options.retrying) {\r\n                return;\r\n            }\r\n\r\n            // retry if necessary\r\n            if (options.retry && options.retries < options.maxRetries) {\r\n                options.retries++;\r\n                options.retrying = true; // used to stop retrying when both onError and xhr.onerror are called\r\n                var retryDelay = pc2d.math.clamp(Math.pow(2, options.retries) * Http.retryDelay, 0, options.maxRetryDelay || 5000);\r\n                console.log(method + ': ' + url + ' - Error ' + xhr.status + '. Retrying in ' + retryDelay + ' ms');\r\n\r\n                setTimeout(function () {\r\n                    options.retrying = false;\r\n                    this.request(method, url, options, options.callback);\r\n                }.bind(this), retryDelay);\r\n            } else {\r\n                // no more retries or not retry so just fail\r\n                options.callback(xhr.status === 0 ? 'Network error' : xhr.status, null);\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        Http: Http,\r\n        http: new Http()\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    /* eslint-enable jsdoc/no-undefined-types */\r\n    var createScript = function (name, app) {\r\n        if (createScript.reservedScripts[name])\r\n            throw new Error('script name: \\'' + name + '\\' is reserved, please change script name');\r\n\r\n        var script = function (args) {\r\n            pc2d.ScriptType.call(this, args);\r\n        };\r\n\r\n        script.prototype = Object.create(pc2d.ScriptType.prototype);\r\n        script.prototype.constructor = script;\r\n\r\n        script.extend = pc2d.ScriptType.extend;\r\n        script.attributes = new pc2d.ScriptAttributes(script);\r\n\r\n        pc2d.registerScript(script, name, app);\r\n        return script;\r\n    };\r\n\r\n    /* eslint-disable jsdoc/no-undefined-types */\r\n    /* eslint-disable jsdoc/check-examples */\r\n    /**\r\n     * @static\r\n     * @function\r\n     * @name pc2d.registerScript\r\n     * @description Register a existing class type as a Script Type to {@link pc2d.ScriptRegistry}.\r\n     * Useful when defining a ES6 script class that extends {@link pc2d.ScriptType} (see example).\r\n     * @param {Class<pc2d.ScriptType>} script - The existing class type (constructor function) to be registered as a Script Type.\r\n     * Class must extend {@link pc2d.ScriptType} (see example). Please note: A class created using {@link pc2d.createScript} is auto-registered,\r\n     * and should therefore not be pass into {@link pc2d.registerScript} (which would result in swapping out all related script instances).\r\n     * @param {string} [name] - Optional unique name of the Script Type. By default it will use the same name as the existing class.\r\n     * If a Script Type with the same name has already been registered and the new one has a `swap` method defined in its prototype,\r\n     * then it will perform hot swapping of existing Script Instances on entities using this new Script Type.\r\n     * Note: There is a reserved list of names that cannot be used, such as list below as well as some starting from `_` (underscore):\r\n     * system, entity, create, destroy, swap, move, scripts, onEnable, onDisable, onPostStateChange, has, on, off, fire, once, hasEvent.\r\n     * @param {pc2d.Application} [app] - Optional application handler, to choose which {@link pc2d.ScriptRegistry} to register the script type to.\r\n     * By default it will use `pc2d.Application.getApplication()` to get current {@link pc2d.Application}.\r\n     * @example\r\n     * // define a ES6 script class\r\n     * class PlayerController extends pc2d.ScriptType {\r\n     *\r\n     *     initialize() {\r\n     *         // called once on initialize\r\n     *     }\r\n     *\r\n     *     update(dt) {\r\n     *         // called each tick\r\n     *     }\r\n     * }\r\n     *\r\n     * // register the class as a script\r\n     * pc2d.registerScript(PlayerController);\r\n     *\r\n     * // declare script attributes (Must be after pc2d.registerScript())\r\n     * PlayerController.attributes.add('attribute1', {type: 'number'});\r\n     */\r\n    /* eslint-enable jsdoc/check-examples */\r\n    /* eslint-enable jsdoc/no-undefined-types */\r\n    var registerScript = function (script, name, app) {\r\n        if (typeof script !== 'function')\r\n            throw new Error('script class: \\'' + script + '\\' must be a constructor function (i.e. class).');\r\n\r\n        if (!(script.prototype instanceof pc2d.ScriptType))\r\n            throw new Error('script class: \\'' + pc2d.ScriptType.__getScriptName(script) + '\\' does not extend pc2d.ScriptType.');\r\n\r\n        name = name || script.__name || pc2d.ScriptType.__getScriptName(script);\r\n\r\n        if (createScript.reservedScripts[name])\r\n            throw new Error('script name: \\'' + name + '\\' is reserved, please change script name');\r\n\r\n        script.__name = name;\r\n\r\n        // add to scripts registry\r\n        var registry = app ? app.scripts : pc2d.Application.getApplication().scripts;\r\n        registry.add(script);\r\n\r\n        pc2d.ScriptHandler._push(script);\r\n    };\r\n\r\n    // reserved scripts\r\n    createScript.reservedScripts = [\r\n        'system', 'entity', 'create', 'destroy', 'swap', 'move',\r\n        'scripts', '_scripts', '_scriptsIndex', '_scriptsData',\r\n        'enabled', '_oldState', 'onEnable', 'onDisable', 'onPostStateChange',\r\n        '_onSetEnabled', '_checkState', '_onBeforeRemove',\r\n        '_onInitializeAttributes', '_onInitialize', '_onPostInitialize',\r\n        '_onUpdate', '_onPostUpdate',\r\n        '_callbacks', 'has', 'get', 'on', 'off', 'fire', 'once', 'hasEvent'\r\n    ];\r\n    var reservedScripts = { };\r\n    var i;\r\n    for (i = 0; i < createScript.reservedScripts.length; i++)\r\n        reservedScripts[createScript.reservedScripts[i]] = 1;\r\n    createScript.reservedScripts = reservedScripts;\r\n\r\n\r\n    // reserved script attribute names\r\n    createScript.reservedAttributes = [\r\n        'app', 'entity', 'enabled', '_enabled', '_enabledOld', '_destroyed',\r\n        '__attributes', '__attributesRaw', '__scriptType', '__executionOrder',\r\n        '_callbacks', 'has', 'get', 'on', 'off', 'fire', 'once', 'hasEvent'\r\n    ];\r\n    var reservedAttributes = { };\r\n    for (i = 0; i < createScript.reservedAttributes.length; i++)\r\n        reservedAttributes[createScript.reservedAttributes[i]] = 1;\r\n    createScript.reservedAttributes = reservedAttributes;\r\n\r\n\r\n    return {\r\n        createScript: createScript,\r\n        registerScript: registerScript\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    var funcNameRegex = new RegExp('^\\\\s*function(?:\\\\s|\\\\s*\\\\/\\\\*.*\\\\*\\\\/\\\\s*)+([^\\\\(\\\\s\\\\/]*)\\\\s*');\r\n\r\n    /**\r\n     * @class\r\n     * @name pc2d.ScriptType\r\n     * @augments pc2d.EventHandler\r\n     * @classdesc Represents the type of a script. It is returned by {@link pc2d.createScript}.\r\n     * Also referred to as Script Type.\r\n     *\r\n     * The type is to be extended using its JavaScript prototype. There is a **list of methods**\r\n     * that will be executed by the engine on instances of this type, such as:\r\n     *\r\n     * * initialize\r\n     * * postInitialize\r\n     * * update\r\n     * * postUpdate\r\n     * * swap\r\n     *\r\n     * **initialize** and **postInitialize** - are called if defined when script is about to run\r\n     * for the first time - postInitialize will run after all initialize methods are executed in\r\n     * the same tick or enabling chain of actions.\r\n     *\r\n     * **update** and **postUpdate** - methods are called if defined for enabled (running state)\r\n     * scripts on each tick.\r\n     *\r\n     * **swap** - This method will be called when a {@link pc2d.ScriptType} that already exists in\r\n     * the registry gets redefined. If the new {@link pc2d.ScriptType} has a `swap` method in its\r\n     * prototype, then it will be executed to perform hot-reload at runtime.\r\n     * @property {pc2d.Application} app The {@link pc2d.Application} that the instance of this type\r\n     * belongs to.\r\n     * @property {pc2d.Entity} entity The {@link pc2d.Entity} that the instance of this type belongs to.\r\n     * @property {boolean} enabled True if the instance of this type is in running state. False\r\n     * when script is not running, because the Entity or any of its parents are disabled or the\r\n     * Script Component is disabled or the Script Instance is disabled. When disabled no update\r\n     * methods will be called on each tick. initialize and postInitialize methods will run once\r\n     * when the script instance is in `enabled` state during app tick.\r\n     * @param {object} args - The input arguments object\r\n     * @param {pc2d.Application} args.app - The {@link pc2d.Application} that is running the script\r\n     * @param {pc2d.Entity} args.entity - The {@link pc2d.Entity} that the script is attached to\r\n     *\r\n     */\r\n    var ScriptType = function (args) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        var script = this.constructor; // get script type, i.e. function (class)\r\n\r\n        // #ifdef DEBUG\r\n        if (!args || !args.app || !args.entity) {\r\n            console.warn('script \\'' + script.__name + '\\' has missing arguments in constructor');\r\n        }\r\n        // #endif\r\n\r\n        this.app = args.app;\r\n        this.entity = args.entity;\r\n        this._enabled = typeof args.enabled === 'boolean' ? args.enabled : true;\r\n        this._enabledOld = this.enabled;\r\n        this.__destroyed = false;\r\n        this.__attributes = { };\r\n        this.__attributesRaw = args.attributes || { }; // need at least an empty object to make sure default attributes are initialized\r\n        this.__scriptType = script;\r\n\r\n        // the order in the script component that the\r\n        // methods of this script instance will run relative to\r\n        // other script instances in the component\r\n        this.__executionOrder = -1;\r\n    };\r\n    ScriptType.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    ScriptType.prototype.constructor = ScriptType;\r\n\r\n    ScriptType.__name = null; // Will be assigned when calling createScript or registerScript.\r\n\r\n    ScriptType.__getScriptName = function (constructorFn) {\r\n        if (typeof constructorFn !== 'function') return undefined;\r\n        if ('name' in Function.prototype) return constructorFn.name;\r\n        if (constructorFn === Function || constructorFn === Function.prototype.constructor) return 'Function';\r\n        var match = (\"\" + constructorFn).match(funcNameRegex);\r\n        return match ? match[1] : undefined;\r\n    };\r\n\r\n\r\n    Object.defineProperty(ScriptType, 'attributes', {\r\n        get: function () {\r\n            if (!this.hasOwnProperty('__attributes')) this.__attributes = new pc2d.ScriptAttributes(this);\r\n            return this.__attributes;\r\n        }\r\n    });\r\n\r\n    // initialize attributes\r\n    ScriptType.prototype.__initializeAttributes = function (force) {\r\n        if (!force && !this.__attributesRaw)\r\n            return;\r\n\r\n        // set attributes values\r\n        for (var key in this.__scriptType.attributes.index) {\r\n            if (this.__attributesRaw && this.__attributesRaw.hasOwnProperty(key)) {\r\n                this[key] = this.__attributesRaw[key];\r\n            } else if (!this.__attributes.hasOwnProperty(key)) {\r\n                if (this.__scriptType.attributes.index[key].hasOwnProperty('default')) {\r\n                    this[key] = this.__scriptType.attributes.index[key].default;\r\n                } else {\r\n                    this[key] = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.__attributesRaw = null;\r\n    };\r\n\r\n    ScriptType.extend = function (methods) {\r\n        for (var key in methods) {\r\n            if (!methods.hasOwnProperty(key))\r\n                continue;\r\n\r\n            this.prototype[key] = methods[key];\r\n        }\r\n    };\r\n\r\n\r\n    Object.defineProperty(ScriptType.prototype, 'enabled', {\r\n        get: function () {\r\n            return this._enabled && !this._destroyed && this.entity.script.enabled && this.entity.enabled;\r\n        },\r\n        set: function (value) {\r\n            this._enabled = !!value;\r\n\r\n            if (this.enabled === this._enabledOld) return;\r\n\r\n            this._enabledOld = this.enabled;\r\n            this.fire(this.enabled ? 'enable' : 'disable');\r\n            this.fire('state', this.enabled);\r\n\r\n            // initialize script if not initialized yet and script is enabled\r\n            if (!this._initialized && this.enabled) {\r\n                this._initialized = true;\r\n\r\n                this.__initializeAttributes(true);\r\n\r\n                if (this.initialize)\r\n                    this.entity.script._scriptMethod(this, pc2d.ScriptComponent.scriptMethods.initialize);\r\n            }\r\n            if (this._initialized && !this._postInitialized && this.enabled && !this.entity.script._beingEnabled) {\r\n                this._postInitialized = true;\r\n\r\n                if (this.postInitialize)\r\n                    this.entity.script._scriptMethod(this, pc2d.ScriptComponent.scriptMethods.postInitialize);\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        ScriptType: ScriptType\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    var components = ['x', 'y', 'z', 'w'];\r\n\r\n    var rawToValue = function (app, args, value, old) {\r\n        var i;\r\n\r\n        switch (args.type) {\r\n            case 'boolean':\r\n                return !!value;\r\n            case 'number':\r\n                if (typeof value === 'number') {\r\n                    return value;\r\n                } else if (typeof value === 'string') {\r\n                    var v = parseInt(value, 10);\r\n                    if (isNaN(v)) return null;\r\n                    return v;\r\n                } else if (typeof value === 'boolean') {\r\n                    return 0 + value;\r\n                }\r\n                return null;\r\n            case 'json':\r\n                if (typeof value === 'object') {\r\n                    return value;\r\n                }\r\n                try {\r\n                    return JSON.parse(value);\r\n                } catch (ex) {\r\n                    return null;\r\n                }\r\n            case 'asset':\r\n                if (value instanceof pc2d.Asset) {\r\n                    return value;\r\n                } else if (typeof value === 'number') {\r\n                    return app.assets.get(value) || null;\r\n                } else if (typeof value === 'string') {\r\n                    return app.assets.get(value) || null;\r\n                }\r\n                return null;\r\n            case 'entity':\r\n                if (value instanceof pc2d.GraphNode) {\r\n                    return value;\r\n                } else if (typeof value === 'string') {\r\n                    return app.getEntityFromIndex(value);\r\n                }\r\n                return null;\r\n            case 'rgb':\r\n            case 'rgba':\r\n                if (value instanceof pc2d.Color) {\r\n                    if (old instanceof pc2d.Color) {\r\n                        old.copy(value);\r\n                        return old;\r\n                    }\r\n                    return value.clone();\r\n                } else if (value instanceof Array && value.length >= 3 && value.length <= 4) {\r\n                    for (i = 0; i < value.length; i++) {\r\n                        if (typeof value[i] !== 'number')\r\n                            return null;\r\n                    }\r\n                    if (!old) old = new pc2d.Color();\r\n\r\n                    old.r = value[0];\r\n                    old.g = value[1];\r\n                    old.b = value[2];\r\n                    old.a = (value.length === 3) ? 1 : value[3];\r\n\r\n                    return old;\r\n                } else if (typeof value === 'string' && /#([0-9abcdef]{2}){3,4}/i.test(value)) {\r\n                    if (!old)\r\n                        old = new pc2d.Color();\r\n\r\n                    old.fromString(value);\r\n                    return old;\r\n                }\r\n                return null;\r\n            case 'vec2':\r\n            case 'vec3':\r\n            case 'vec4':\r\n                \r\n                var len = parseInt(args.type.slice(3), 10);\r\n\r\n                if (value instanceof pc2d['Vec' + len]) {\r\n                    if (old instanceof pc2d['Vec' + len]) {\r\n                        old.copy(value);\r\n                        return old;\r\n                    }\r\n                    return value.clone();\r\n                } else if (value instanceof Array && value.length === len) {\r\n                    for (i = 0; i < value.length; i++) {\r\n                        if (typeof value[i] !== 'number')\r\n                            return null;\r\n                    }\r\n                    if (!old) old = new pc2d['Vec' + len]();\r\n\r\n                    for (i = 0; i < len; i++)\r\n                        old[components[i]] = value[i];\r\n\r\n                    return old;\r\n                }\r\n                return null;\r\n            case 'curve':\r\n                if (value) {\r\n                    var curve;\r\n                    if (value instanceof pc2d.Curve || value instanceof pc2d.CurveSet) {\r\n                        curve = value.clone();\r\n                    } else {\r\n                        var CurveType = value.keys[0] instanceof Array ? pc2d.CurveSet : pc2d.Curve;\r\n                        curve = new CurveType(value.keys);\r\n                        curve.type = value.type;\r\n                    }\r\n                    return curve;\r\n                }\r\n                break;\r\n        }\r\n\r\n        return value;\r\n    };\r\n\r\n\r\n    /* eslint-disable jsdoc/no-undefined-types */\r\n    /**\r\n     * @class\r\n     * @name pc2d.ScriptAttributes\r\n     * @classdesc Container of Script Attribute definitions. Implements an interface to add/remove attributes and store their definition for a {@link pc2d.ScriptType}.\r\n     * Note: An instance of pc2d.ScriptAttributes is created automatically by each {@link pc2d.ScriptType}.\r\n     * @param {Class<pc2d.ScriptType>} scriptType - Script Type that attributes relate to.\r\n     */\r\n    /* eslint-enable jsdoc/no-undefined-types */\r\n    var ScriptAttributes = function (scriptType) {\r\n        this.scriptType = scriptType;\r\n        this.index = { };\r\n    };\r\n\r\n    /**\r\n     * @function\r\n     * @name pc2d.ScriptAttributes#add\r\n     * @description Add Attribute.\r\n     * @param {string} name - Name of an attribute.\r\n     * @param {object} args - Object with Arguments for an attribute.\r\n     * @param {(\"boolean\"|\"number\"|\"string\"|\"json\"|\"asset\"|\"entity\"|\"rgb\"|\"rgba\"|\"vec2\"|\"vec3\"|\"vec4\"|\"curve\")} args.type - Type of an attribute value.\r\n     * @param {*} [args.default] - Default attribute value.\r\n     * @param {string} [args.title] - Title for Editor's for field UI.\r\n     * @param {string} [args.description] - Description for Editor's for field UI.\r\n     * @param {string|string[]} [args.placeholder] - Placeholder for Editor's for field UI.\r\n     * For multi-field types, such as vec2, vec3, and others use array of strings.\r\n     * @param {boolean} [args.array] - If attribute can hold single or multiple values.\r\n     * @param {number} [args.size] - If attribute is array, maximum number of values can be set.\r\n     * @param {number} [args.min] - Minimum value for type 'number', if max and min defined, slider will be rendered in Editor's UI.\r\n     * @param {number} [args.max] - Maximum value for type 'number', if max and min defined, slider will be rendered in Editor's UI.\r\n     * @param {number} [args.precision] - Level of precision for field type 'number' with floating values.\r\n     * @param {number} [args.step] - Step value for type 'number'. The amount used to increment the value when using the arrow keys in the Editor's UI.\r\n     * @param {string} [args.assetType] - Name of asset type to be used in 'asset' type attribute picker in Editor's UI, defaults to '*' (all).\r\n     * @param {string[]} [args.curves] - List of names for Curves for field type 'curve'.\r\n     * @param {string} [args.color] - String of color channels for Curves for field type 'curve', can be any combination of `rgba` characters.\r\n     * Defining this property will render Gradient in Editor's field UI.\r\n     * @param {object[]} [args.enum] - List of fixed choices for field, defined as array of objects, where key in object is a title of an option.\r\n     * @example\r\n     * PlayerController.attributes.add('fullName', {\r\n     *     type: 'string'\r\n     * });\r\n     * @example\r\n     * PlayerController.attributes.add('speed', {\r\n     *     type: 'number',\r\n     *     title: 'Speed',\r\n     *     placeholder: 'km/h',\r\n     *     default: 22.2\r\n     * });\r\n     * @example\r\n     * PlayerController.attributes.add('resolution', {\r\n     *     type: 'number',\r\n     *     default: 32,\r\n     *     enum: [\r\n     *         { '32x32': 32 },\r\n     *         { '64x64': 64 },\r\n     *         { '128x128': 128 }\r\n     *     ]\r\n     * });\r\n     */\r\n    ScriptAttributes.prototype.add = function (name, args) {\r\n        if (this.index[name]) {\r\n            // #ifdef DEBUG\r\n            console.warn('attribute \\'' + name + '\\' is already defined for script type \\'' + this.scriptType.name + '\\'');\r\n            // #endif\r\n            return;\r\n        } else if (pc2d.createScript.reservedAttributes[name]) {\r\n            // #ifdef DEBUG\r\n            console.warn('attribute \\'' + name + '\\' is a reserved attribute name');\r\n            // #endif\r\n            return;\r\n        }\r\n\r\n        this.index[name] = args;\r\n\r\n        Object.defineProperty(this.scriptType.prototype, name, {\r\n            get: function () {\r\n                return this.__attributes[name];\r\n            },\r\n            set: function (raw) {\r\n                var old = this.__attributes[name];\r\n\r\n                // convert to appropriate type\r\n                if (args.array) {\r\n                    this.__attributes[name] = [];\r\n                    if (raw) {\r\n                        var i;\r\n                        var len;\r\n                        for (i = 0, len = raw.length; i < len; i++) {\r\n                            this.__attributes[name].push(rawToValue(this.app, args, raw[i], old ? old[i] : null));\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.__attributes[name] = rawToValue(this.app, args, raw, old);\r\n                }\r\n\r\n                this.fire('attr', name, this.__attributes[name], old);\r\n                this.fire('attr:' + name, this.__attributes[name], old);\r\n            }\r\n        });\r\n    };\r\n\r\n    ScriptAttributes.prototype.remove = function (name) {\r\n        if (!this.index[name])\r\n            return false;\r\n\r\n        delete this.index[name];\r\n        delete this.scriptType.prototype[name];\r\n        return true;\r\n    };\r\n\r\n    ScriptAttributes.prototype.has = function (name) {\r\n        return !!this.index[name];\r\n    };\r\n\r\n\r\n    ScriptAttributes.prototype.get = function (name) {\r\n        return this.index[name] || null;\r\n    };\r\n\r\n    return {\r\n        ScriptAttributes: ScriptAttributes\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    var ScriptRegistry = function (app) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this.app = app;\r\n        this._scripts = { };\r\n        this._list = [];\r\n    };\r\n    ScriptRegistry.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    ScriptRegistry.prototype.constructor = ScriptRegistry;\r\n\r\n    ScriptRegistry.prototype.destroy = function () {\r\n        this.app = null;\r\n        this.off();\r\n    };\r\n\r\n    ScriptRegistry.prototype.add = function (script) {\r\n        var self = this;\r\n        var scriptName = script.__name;\r\n\r\n        if (this._scripts.hasOwnProperty(scriptName)) {\r\n            setTimeout(function () {\r\n                if (script.prototype.swap) {\r\n                    // swapping\r\n                    var old = self._scripts[scriptName];\r\n                    var ind = self._list.indexOf(old);\r\n                    self._list[ind] = script;\r\n                    self._scripts[scriptName] = script;\r\n\r\n                    self.fire('swap', scriptName, script);\r\n                    self.fire('swap:' + scriptName, script);\r\n                } else {\r\n                    console.warn('script registry already has \\'' + scriptName + '\\' script, define \\'swap\\' method for new script type to enable code hot swapping');\r\n                }\r\n            });\r\n            return false;\r\n        }\r\n\r\n        this._scripts[scriptName] = script;\r\n        this._list.push(script);\r\n\r\n        this.fire('add', scriptName, script);\r\n        this.fire('add:' + scriptName, script);\r\n\r\n        // for all components awaiting Script Type\r\n        // create script instance\r\n        setTimeout(function () {\r\n            if (!self._scripts.hasOwnProperty(scriptName))\r\n                return;\r\n\r\n\r\n            // this is a check for a possible error\r\n            // that might happen if the app has been destroyed before\r\n            // setTimeout has finished\r\n            if (!self.app || !self.app.systems || !self.app.systems.script) {\r\n                return;\r\n            }\r\n\r\n            var components = self.app.systems.script._components;\r\n            var i, scriptInstance, attributes;\r\n            var scriptInstances = [];\r\n            var scriptInstancesInitialized = [];\r\n\r\n            for (components.loopIndex = 0; components.loopIndex < components.length; components.loopIndex++) {\r\n                var component = components.items[components.loopIndex];\r\n                // check if awaiting for script\r\n                if (component._scriptsIndex[scriptName] && component._scriptsIndex[scriptName].awaiting) {\r\n                    if (component._scriptsData && component._scriptsData[scriptName])\r\n                        attributes = component._scriptsData[scriptName].attributes;\r\n\r\n                    scriptInstance = component.create(scriptName, {\r\n                        preloading: true,\r\n                        ind: component._scriptsIndex[scriptName].ind,\r\n                        attributes: attributes\r\n                    });\r\n\r\n                    if (scriptInstance)\r\n                        scriptInstances.push(scriptInstance);\r\n                }\r\n            }\r\n\r\n            // initialize attributes\r\n            for (i = 0; i < scriptInstances.length; i++)\r\n                scriptInstances[i].__initializeAttributes();\r\n\r\n            // call initialize()\r\n            for (i = 0; i < scriptInstances.length; i++) {\r\n                if (scriptInstances[i].enabled) {\r\n                    scriptInstances[i]._initialized = true;\r\n\r\n                    scriptInstancesInitialized.push(scriptInstances[i]);\r\n\r\n                    if (scriptInstances[i].initialize)\r\n                        scriptInstances[i].initialize();\r\n                }\r\n            }\r\n\r\n            // call postInitialize()\r\n            for (i = 0; i < scriptInstancesInitialized.length; i++) {\r\n                if (!scriptInstancesInitialized[i].enabled || scriptInstancesInitialized[i]._postInitialized) {\r\n                    continue;\r\n                }\r\n\r\n                scriptInstancesInitialized[i]._postInitialized = true;\r\n\r\n                if (scriptInstancesInitialized[i].postInitialize)\r\n                    scriptInstancesInitialized[i].postInitialize();\r\n            }\r\n        });\r\n\r\n        return true;\r\n    };\r\n\r\n    ScriptRegistry.prototype.remove = function (nameOrType) {\r\n        var scriptType = nameOrType;\r\n        var scriptName = nameOrType;\r\n\r\n        if (typeof scriptName !== 'string') {\r\n            scriptName = scriptType.__name;\r\n        } else {\r\n            scriptType = this.get(scriptName);\r\n        }\r\n\r\n        if (this.get(scriptName) !== scriptType)\r\n            return false;\r\n\r\n        delete this._scripts[scriptName];\r\n        var ind = this._list.indexOf(scriptType);\r\n        this._list.splice(ind, 1);\r\n\r\n        this.fire('remove', scriptName, scriptType);\r\n        this.fire('remove:' + scriptName, scriptType);\r\n\r\n        return true;\r\n    };\r\n\r\n    ScriptRegistry.prototype.get = function (name) {\r\n        return this._scripts[name] || null;\r\n    };\r\n\r\n    ScriptRegistry.prototype.has = function (nameOrType) {\r\n        if (typeof nameOrType === 'string') {\r\n            return this._scripts.hasOwnProperty(nameOrType);\r\n        }\r\n\r\n        if (!nameOrType) return false;\r\n        var scriptName = nameOrType.__name;\r\n        return this._scripts[scriptName] === nameOrType;\r\n    };\r\n\r\n    ScriptRegistry.prototype.list = function () {\r\n        return this._list;\r\n    };\r\n\r\n\r\n    return {\r\n        ScriptRegistry: ScriptRegistry\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    var AssetListLoader = function (assetList, assetRegistry) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this._assets = [];\r\n        this._registry = assetRegistry;\r\n        this._loaded = false;\r\n        this._count = 0; // running count of successfully loaded assets\r\n        this._total = 0; // total assets loader is expecting to load\r\n        this._failed = []; // list of assets that failed to load\r\n\r\n        this._waitingAssets = [];\r\n\r\n        if (assetList.length && assetList[0] instanceof pc2d.Asset) {\r\n            // list of pc2d.Asset\r\n            this._assets = assetList;\r\n        } else {\r\n            // list of Asset IDs\r\n            for (var i = 0; i < assetList.length; i++) {\r\n                var asset = assetRegistry.get(assetList[i]);\r\n                if (asset) {\r\n                    this._assets.push(asset);\r\n                } else {\r\n                    this._waitForAsset(assetList[i]);\r\n                    this._total++;\r\n                }\r\n\r\n            }\r\n        }\r\n    };\r\n    AssetListLoader.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    AssetListLoader.prototype.constructor = AssetListLoader;\r\n\r\n    AssetListLoader.prototype.destroy = function () {\r\n        // remove any outstanding listeners\r\n\r\n        var self = this;\r\n\r\n        this._registry.off(\"load\", this._onLoad);\r\n        this._registry.off(\"error\", this._onError);\r\n\r\n        this._waitingAssets.forEach(function (id) {\r\n            self._registry.off(\"add:\" + id, this._onAddAsset);\r\n        });\r\n\r\n        this.off(\"progress\");\r\n        this.off(\"load\");\r\n    };\r\n\r\n    AssetListLoader.prototype.load = function (done, scope) {\r\n        var i = 0;\r\n        var l = this._assets.length;\r\n        var asset;\r\n\r\n        // this._total = l;\r\n        this._count = 0;\r\n        this._failed = [];\r\n        this._callback = done;\r\n        this._scope = scope;\r\n\r\n        this._registry.on(\"load\", this._onLoad, this);\r\n        this._registry.on(\"error\", this._onError, this);\r\n\r\n        for (i = 0; i < l; i++) {\r\n            asset = this._assets[i];\r\n\r\n            if (!asset.loading && !asset.loaded) {\r\n                this._registry.load(asset);\r\n                this._total++;\r\n            }\r\n        }\r\n    };\r\n    AssetListLoader.prototype.ready = function (done, scope) {\r\n        scope = scope || this;\r\n\r\n        if (this._loaded) {\r\n            done.call(scope, this._assets);\r\n        } else {\r\n            this.once(\"load\", function (assets) {\r\n                done.call(scope, assets);\r\n            });\r\n        }\r\n    };\r\n\r\n    // called when all assets are loaded\r\n    AssetListLoader.prototype._loadingComplete = function () {\r\n        this._loaded = true;\r\n        this._registry.off(\"load\", this._onLoad, this);\r\n        this._registry.off(\"error\", this._onError, this);\r\n\r\n        if (this._failed && this._failed.length) {\r\n            if (this._callback) {\r\n                this._callback.call(this._scope, \"Failed to load some assets\", this._failed);\r\n            }\r\n            this.fire(\"error\", this._failed);\r\n        } else {\r\n            if (this._callback) {\r\n                this._callback.call(this._scope);\r\n            }\r\n            this.fire(\"load\", this._assets);\r\n        }\r\n    };\r\n\r\n    // called when an (any) asset is loaded\r\n    AssetListLoader.prototype._onLoad = function (asset) {\r\n        var self = this;\r\n\r\n        // check this is an asset we care about\r\n        if (this._assets.indexOf(asset) >= 0) {\r\n            this._count++;\r\n            this.fire(\"progress\", asset);\r\n        }\r\n\r\n        if (this._count === this._total) {\r\n            // call next tick because we want\r\n            // this to be fired after any other\r\n            // asset load events\r\n            setTimeout(function () {\r\n                self._loadingComplete(self._failed);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    // called when an asset fails to load\r\n    AssetListLoader.prototype._onError = function (err, asset) {\r\n        var self = this;\r\n\r\n        // check this is an asset we care about\r\n        if (this._assets.indexOf(asset) >= 0) {\r\n            this._count++;\r\n            this._failed.push(asset);\r\n        }\r\n\r\n        if (this._count === this._total) {\r\n            // call next tick because we want\r\n            // this to be fired after any other\r\n            // asset load events\r\n            setTimeout(function () {\r\n                self._loadingComplete(self._failed);\r\n            }, 0);\r\n        }\r\n    };\r\n\r\n    // called when a expected asset is added to the asset registry\r\n    AssetListLoader.prototype._onAddAsset = function (asset) {\r\n        // remove from waiting list\r\n        var index = this._waitingAssets.indexOf(asset);\r\n        if (index >= 0) {\r\n            this._waitingAssets.splice(index, 1);\r\n        }\r\n\r\n        this._assets.push(asset);\r\n        var i;\r\n        var l = this._assets.length;\r\n        for (i = 0; i < l; i++) {\r\n            asset = this._assets[i];\r\n\r\n            if (!asset.loading && !asset.loaded) {\r\n                this._registry.load(asset);\r\n            }\r\n        }\r\n    };\r\n\r\n    AssetListLoader.prototype._waitForAsset = function (assetId) {\r\n        this._waitingAssets.push(assetId);\r\n        this._registry.once('add:' + assetId, this._onAddAsset, this);\r\n    };\r\n\r\n    return {\r\n        AssetListLoader: AssetListLoader\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    var properties = [];\r\n\r\n    var AssetVariants = function (asset) {\r\n        this.asset = asset;\r\n    };\r\n\r\n    var defineVariantProperty = function (name) {\r\n        var field = '_' + name;\r\n        properties.push(field);\r\n\r\n        Object.defineProperty(AssetVariants.prototype, name, {\r\n            get: function () {\r\n                return this[field] || null;\r\n            },\r\n            set: function (value) {\r\n                var fieldAsBool = !!this[field];\r\n                var valueAsBool = !!value;\r\n                if (fieldAsBool !== valueAsBool || (this[field] && value && this[field].hash !== value.hash)) {\r\n                    if (value) {\r\n                        this[field] = {\r\n                            url: value.url,\r\n                            filename: value.filename,\r\n                            size: value.size,\r\n                            hash: value.hash,\r\n                            opt: value.opt || 0\r\n                        };\r\n                    } else {\r\n                        this[field] = null;\r\n                    }\r\n\r\n                    if (this.asset.file) {\r\n                        this.asset.fire('change', this.asset, 'file', this.asset._file, this.asset._file);\r\n                        this.asset.reload();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    // texture\r\n    defineVariantProperty('dxt');\r\n    defineVariantProperty('pvr');\r\n    defineVariantProperty('etc1');\r\n    defineVariantProperty('etc2');\r\n    defineVariantProperty('basis');\r\n\r\n    AssetVariants.prototype.clear = function () {\r\n        for (var i = 0; i < properties.length; i++)\r\n            this[properties[i]] = null;\r\n    };\r\n\r\n\r\n    return {\r\n        AssetVariants: AssetVariants\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    // auto incrementing number for asset ids\r\n    var assetIdCounter = -1;\r\n\r\n    var ABSOLUTE_URL = new RegExp(\r\n        '^' + // beginning of the url\r\n        '\\\\s*' +  // ignore leading spaces (some browsers trim the url automatically, but we can't assume that)\r\n        '(?:' +  // beginning of a non-captured regex group\r\n            // `{protocol}://`\r\n            '(?:' +  // beginning of protocol scheme (non-captured regex group)\r\n                '[a-z]+[a-z0-9\\\\-\\\\+\\\\.]*' + // protocol scheme must (RFC 3986) consist of \"a letter and followed by any combination of letters, digits, plus (\"+\"), period (\".\"), or hyphen (\"-\").\"\r\n                ':' + // protocol scheme must end with colon character\r\n            ')?' + // end of optional scheme group, the group is optional since the string may be a protocol-relative absolute URL\r\n            '//' + // an absolute url must always begin with two forward slash characters (ignoring any leading spaces and protocol scheme)\r\n\r\n            '|' + // or another option(s):\r\n\r\n            // Data URL (RFC 2397), simplified\r\n            'data:' +\r\n        ')',\r\n        'i' // non case-sensitive flag\r\n    );\r\n\r\n    var VARIANT_SUPPORT = {\r\n        pvr: 'extCompressedTexturePVRTC',\r\n        dxt: 'extCompressedTextureS3TC',\r\n        etc2: 'extCompressedTextureETC',\r\n        etc1: 'extCompressedTextureETC1',\r\n        basis: 'canvas' // dummy, basis is always supported\r\n    };\r\n\r\n    var VARIANT_DEFAULT_PRIORITY = ['pvr', 'dxt', 'etc2', 'etc1', 'basis'];\r\n\r\n    var Asset = function (name, type, file, data) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this._id = assetIdCounter--;\r\n\r\n        this.name = name || '';\r\n        this.type = type;\r\n        this.tags = new pc2d.Tags(this);\r\n        this._preload = false;\r\n\r\n        this.variants = new pc2d.AssetVariants(this);\r\n\r\n        this._file = null;\r\n        this._data = data || { };\r\n\r\n        // This is where the loaded resource(s) will be\r\n        this._resources = [];\r\n\r\n        // a string-assetId dictionary that maps\r\n        // locale to asset id\r\n        this._i18n = {};\r\n\r\n        // Is resource loaded\r\n        this.loaded = false;\r\n        this.loading = false;\r\n\r\n        this.registry = null;\r\n\r\n        if (file) this.file = file;\r\n    };\r\n    Asset.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    Asset.prototype.constructor = Asset;\r\n\r\n    Object.assign(Asset.prototype, {\r\n        /**\r\n         * @name pc2d.Asset#getFileUrl\r\n         * @function\r\n         * @description Return the URL required to fetch the file for this asset.\r\n         * @returns {string} The URL.\r\n         * @example\r\n         * var assets = app.assets.find(\"My Image\", \"texture\");\r\n         * var img = \"&lt;img src='\" + assets[0].getFileUrl() + \"'&gt;\";\r\n         */\r\n        getFileUrl: function () {\r\n            var file = this.getPreferredFile();\r\n\r\n            if (!file || !file.url)\r\n                return null;\r\n\r\n            var url = file.url;\r\n\r\n            if (this.registry && this.registry.prefix && !ABSOLUTE_URL.test(url))\r\n                url = this.registry.prefix + url;\r\n\r\n            // add file hash to avoid hard-caching problems\r\n            if (this.type !== 'script' && file.hash) {\r\n                var separator = url.indexOf('?') !== -1 ? '&' : '?';\r\n                url += separator + 't=' + file.hash;\r\n            }\r\n\r\n            return url;\r\n        },\r\n\r\n        getPreferredFile: function () {\r\n            if (!this.file)\r\n                return null;\r\n\r\n            if (this.type === 'texture' || this.type === 'textureatlas' || this.type === 'bundle') {\r\n                var app = this.registry._loader._app;\r\n                var device = app.graphicsDevice;\r\n\r\n                for (var i = 0, len = VARIANT_DEFAULT_PRIORITY.length; i < len; i++) {\r\n                    var variant = VARIANT_DEFAULT_PRIORITY[i];\r\n                    // if the device supports the variant\r\n                    if (! device[VARIANT_SUPPORT[variant]]) continue;\r\n\r\n                    // if the variant exists in the asset then just return it\r\n                    if (this.file.variants[variant]) {\r\n                        return this.file.variants[variant];\r\n                    }\r\n\r\n                    // if the variant does not exist but the asset is in a bundle\r\n                    // and the bundle contain assets with this variant then return the default\r\n                    // file for the asset\r\n                    if (app.enableBundles) {\r\n                        var bundles = app.bundles.listBundlesForAsset(this);\r\n                        if (! bundles) continue;\r\n\r\n                        for (var j = 0, len2 = bundles.length; j < len2; j++) {\r\n                            if (bundles[j].file && bundles[j].file.variants && bundles[j].file.variants[variant]) {\r\n                                return this.file;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this.file;\r\n        },\r\n\r\n        getLocalizedAssetId: function (locale) {\r\n            // tries to find either the desired locale or a fallback locale\r\n            locale = pc2d.I18n.findAvailableLocale(locale, this._i18n);\r\n            return this._i18n[locale] || null;\r\n        },\r\n        addLocalizedAssetId: function (locale, assetId) {\r\n            this._i18n[locale] = assetId;\r\n            this.fire('add:localized', locale, assetId);\r\n        },\r\n\r\n    \r\n        removeLocalizedAssetId: function (locale) {\r\n            var assetId = this._i18n[locale];\r\n            if (assetId) {\r\n                delete this._i18n[locale];\r\n                this.fire('remove:localized', locale, assetId);\r\n            }\r\n        },\r\n\r\n        ready: function (callback, scope) {\r\n            scope = scope || this;\r\n\r\n            if (this.resource) {\r\n                callback.call(scope, this);\r\n            } else {\r\n                this.once(\"load\", function (asset) {\r\n                    callback.call(scope, asset);\r\n                });\r\n            }\r\n        },\r\n\r\n        reload: function () {\r\n            // no need to be reloaded\r\n            if (!this.loaded)\r\n                return;\r\n\r\n            if (this.type === 'cubemap') {\r\n                this.registry._loader.patch(this, this.registry);\r\n            } else {\r\n                this.loaded = false;\r\n                this.registry.load(this);\r\n            }\r\n        },\r\n\r\n        unload: function () {\r\n            if (!this.loaded && !this.resource)\r\n                return;\r\n\r\n            this.fire('unload', this);\r\n            this.registry.fire('unload:' + this.id, this);\r\n\r\n            if (this.resource && this.resource.destroy)\r\n                this.resource.destroy();\r\n\r\n            this.resource = null;\r\n            this.loaded = false;\r\n\r\n            if (this.file) {\r\n                // remove resource from loader cache\r\n                this.registry._loader.clearCache(this.getFileUrl(), this.type);\r\n            }\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Asset.prototype, 'id', {\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n\r\n        set: function (value) {\r\n            this._id = value;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Asset.prototype, 'file', {\r\n        get: function () {\r\n            return this._file;\r\n        },\r\n\r\n        set: function (value) {\r\n            // fire change event when the file changes\r\n            // so that we reload it if necessary\r\n            // set/unset file property of file hash been changed\r\n            var key;\r\n            var valueAsBool = !!value;\r\n            var fileAsBool = !!this._file;\r\n            if (valueAsBool !== fileAsBool || (value && this._file && value.hash !== this._file)) {\r\n                if (value) {\r\n                    if (!this._file)\r\n                        this._file = { };\r\n\r\n                    this._file.url = value.url;\r\n                    this._file.filename = value.filename;\r\n                    this._file.hash = value.hash;\r\n                    this._file.size = value.size;\r\n                    this._file.variants = this.variants;\r\n\r\n                    if (value.hasOwnProperty('variants')) {\r\n                        this.variants.clear();\r\n\r\n                        if (value.variants) {\r\n                            for (key in value.variants) {\r\n                                if (!value.variants[key])\r\n                                    continue;\r\n\r\n                                this.variants[key] = value.variants[key];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.fire('change', this, 'file', this._file, this._file);\r\n                    this.reload();\r\n                } else {\r\n                    this._file = null;\r\n                    this.variants.clear();\r\n                }\r\n            } else if (value && this._file && value.hasOwnProperty('variants')) {\r\n                this.variants.clear();\r\n\r\n                if (value.variants) {\r\n                    for (key in value.variants) {\r\n                        if (!value.variants[key])\r\n                            continue;\r\n\r\n                        this.variants[key] = value.variants[key];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Asset.prototype, 'data', {\r\n        get: function () {\r\n            return this._data;\r\n        },\r\n\r\n        set: function (value) {\r\n            // fire change event when data changes\r\n            // because the asset might need reloading if that happens\r\n            var old = this._data;\r\n            this._data = value;\r\n            if (value !== old) {\r\n                this.fire('change', this, 'data', value, old);\r\n\r\n                if (this.loaded)\r\n                    this.registry._loader.patch(this, this.registry);\r\n            }\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Asset.prototype, 'resource', {\r\n        get: function () {\r\n            return this._resources[0];\r\n        },\r\n\r\n        set: function (value) {\r\n            var _old = this._resources[0];\r\n            this._resources[0] = value;\r\n            this.fire('change', this, 'resource', value, _old);\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Asset.prototype, 'resources', {\r\n        get: function () {\r\n            return this._resources;\r\n        },\r\n\r\n        set: function (value) {\r\n            var _old = this._resources;\r\n            this._resources = value;\r\n            this.fire('change', this, 'resources', value, _old);\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Asset.prototype, 'preload', {\r\n        get: function () {\r\n            return this._preload;\r\n        },\r\n        set: function (value) {\r\n            value = !!value;\r\n            if (this._preload === value)\r\n                return;\r\n\r\n            this._preload = value;\r\n            if (this._preload && !this.loaded && !this.loading && this.registry)\r\n                this.registry.load(this);\r\n        }\r\n    });\r\n\r\n    return {\r\n        Asset: Asset,\r\n        ASSET_ANIMATION: 'animation',\r\n        ASSET_AUDIO: 'audio',\r\n        ASSET_IMAGE: 'image',\r\n        ASSET_JSON: 'json',\r\n        ASSET_TEXT: 'text',\r\n        ASSET_TEXTURE: 'texture',\r\n        ASSET_SHADER: 'shader',\r\n        ASSET_CSS: 'css',\r\n        ASSET_HTML: 'html',\r\n        ASSET_SCRIPT: 'script',\r\n        ABSOLUTE_URL: ABSOLUTE_URL\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n   \r\n    var AssetRegistry = function (loader) {\r\n        pc2d.EventHandler.call(this);\r\n\r\n        this._loader = loader;\r\n\r\n        this._assets = []; // list of all assets\r\n        this._cache = {}; // index for looking up assets by id\r\n        this._names = {}; // index for looking up assets by name\r\n        this._tags = new pc2d.TagsCache('_id'); // index for looking up by tags\r\n        this._urls = {}; // index for looking up assets by url\r\n\r\n        this.prefix = null;\r\n    };\r\n    AssetRegistry.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    AssetRegistry.prototype.constructor = AssetRegistry;\r\n\r\n    Object.assign(AssetRegistry.prototype, {\r\n      \r\n        list: function (filters) {\r\n            filters = filters || {};\r\n            return this._assets.filter(function (asset) {\r\n                var include = true;\r\n                if (filters.preload !== undefined) {\r\n                    include = (asset.preload === filters.preload);\r\n                }\r\n                return include;\r\n            });\r\n        },\r\n\r\n        add: function (asset) {\r\n            var index = this._assets.push(asset) - 1;\r\n            var url;\r\n\r\n            // id cache\r\n            this._cache[asset.id] = index;\r\n            if (!this._names[asset.name])\r\n                this._names[asset.name] = [];\r\n\r\n            // name cache\r\n            this._names[asset.name].push(index);\r\n            if (asset.file) {\r\n                url = asset.file.url;\r\n                this._urls[url] = index;\r\n            }\r\n            asset.registry = this;\r\n\r\n            // tags cache\r\n            this._tags.addItem(asset);\r\n            asset.tags.on('add', this._onTagAdd, this);\r\n            asset.tags.on('remove', this._onTagRemove, this);\r\n\r\n            this.fire(\"add\", asset);\r\n            this.fire(\"add:\" + asset.id, asset);\r\n            if (url)\r\n                this.fire(\"add:url:\" + url, asset);\r\n\r\n            if (asset.preload)\r\n                this.load(asset);\r\n        },\r\n\r\n        remove: function (asset) {\r\n            var idx = this._cache[asset.id];\r\n            var url = asset.file ? asset.file.url : null;\r\n\r\n            if (idx !== undefined) {\r\n                // remove from list\r\n                this._assets.splice(idx, 1);\r\n\r\n                // remove id -> index cache\r\n                delete this._cache[asset.id];\r\n\r\n                // name cache needs to be completely rebuilt\r\n                this._names = {};\r\n\r\n                // urls cache needs to be completely rebuilt\r\n                this._urls = [];\r\n\r\n                // update id cache and rebuild name cache\r\n                for (var i = 0, l = this._assets.length; i < l; i++) {\r\n                    var a = this._assets[i];\r\n\r\n                    this._cache[a.id] = i;\r\n                    if (!this._names[a.name]) {\r\n                        this._names[a.name] = [];\r\n                    }\r\n                    this._names[a.name].push(i);\r\n\r\n                    if (a.file) {\r\n                        this._urls[a.file.url] = i;\r\n                    }\r\n                }\r\n\r\n                // tags cache\r\n                this._tags.removeItem(asset);\r\n                asset.tags.off('add', this._onTagAdd, this);\r\n                asset.tags.off('remove', this._onTagRemove, this);\r\n\r\n                asset.fire(\"remove\", asset);\r\n                this.fire(\"remove\", asset);\r\n                this.fire(\"remove:\" + asset.id, asset);\r\n                if (url)\r\n                    this.fire(\"remove:url:\" + url, asset);\r\n\r\n                return true;\r\n            }\r\n\r\n            // asset not in registry\r\n            return false;\r\n        },\r\n\r\n        get: function (id) {\r\n            var idx = this._cache[id];\r\n            return this._assets[idx];\r\n        },\r\n\r\n        getByUrl: function (url) {\r\n            var idx = this._urls[url];\r\n            return this._assets[idx];\r\n        },\r\n\r\n        load: function (asset) {\r\n            if (asset.loading)\r\n                return;\r\n\r\n            var self = this;\r\n\r\n            if (asset.loaded) {\r\n                return;\r\n            }\r\n\r\n            var load = !!asset.file;\r\n\r\n            var file = asset.getPreferredFile();\r\n\r\n            var _load = function () {\r\n                var url = asset.getFileUrl();\r\n\r\n                asset.loading = true;\r\n\r\n                self._loader.load(url, asset.type, function (err, resource, extra) {\r\n                    asset.loaded = true;\r\n                    asset.loading = false;\r\n\r\n                    if (err) {\r\n                        self.fire(\"error\", err, asset);\r\n                        self.fire(\"error:\" + asset.id, err, asset);\r\n                        asset.fire(\"error\", err, asset);\r\n                        return;\r\n                    }\r\n                    if (resource instanceof Array) {\r\n                        asset.resources = resource;\r\n                    } else {\r\n                        asset.resource = resource;\r\n                    }\r\n\r\n                    if (asset.type === 'script') {\r\n                        var loader = self._loader.getHandler('script');\r\n\r\n                        if (loader._cache[asset.id] && loader._cache[asset.id].parentNode === document.head) {\r\n                            // remove old element\r\n                            document.head.removeChild(loader._cache[asset.id]);\r\n                        }\r\n\r\n                        loader._cache[asset.id] = extra;\r\n                    }\r\n\r\n                    self._loader.patch(asset, self);\r\n\r\n                    self.fire(\"load\", asset);\r\n                    self.fire(\"load:\" + asset.id, asset);\r\n                    if (file && file.url)\r\n                        self.fire(\"load:url:\" + file.url, asset);\r\n                    asset.fire(\"load\", asset);\r\n                }, asset);\r\n            };\r\n\r\n            var _open = function () {\r\n                var resource = self._loader.open(asset.type, asset.data);\r\n                if (resource instanceof Array) {\r\n                    asset.resources = resource;\r\n                } else {\r\n                    asset.resource = resource;\r\n                }\r\n                asset.loaded = true;\r\n\r\n                self._loader.patch(asset, self);\r\n\r\n                self.fire(\"load\", asset);\r\n                self.fire(\"load:\" + asset.id, asset);\r\n                if (file && file.url)\r\n                    self.fire(\"load:url:\" + file.url, asset);\r\n                asset.fire(\"load\", asset);\r\n            };\r\n\r\n            if (!file) {\r\n                _open();\r\n            } else if (load) {\r\n                this.fire(\"load:start\", asset);\r\n                this.fire(\"load:\" + asset.id + \":start\", asset);\r\n\r\n                _load();\r\n            }\r\n        },\r\n\r\n        loadFromUrl: function (url, type, callback) {\r\n            this.loadFromUrlAndFilename(url, null, type, callback);\r\n        },\r\n\r\n        loadFromUrlAndFilename: function (url, filename, type, callback) {\r\n            var self = this;\r\n\r\n            var name = pc2d.path.getBasename(filename || url);\r\n\r\n            var file = {\r\n                filename: filename || name,\r\n                url: url\r\n            };\r\n            var data = {};\r\n\r\n            var asset = self.getByUrl(url);\r\n            if (!asset) {\r\n                asset = new pc2d.Asset(name, type, file, data);\r\n                self.add(asset);\r\n            }\r\n\r\n            var onLoadAsset = function (loadedAsset) {\r\n                if (type === 'material') {\r\n                    self._loadTextures([loadedAsset], function (err, textures) {\r\n                        if (err) {\r\n                            callback(err);\r\n                        } else {\r\n                            callback(null, loadedAsset);\r\n                        }\r\n                    });\r\n                } else {\r\n                    callback(null, loadedAsset);\r\n                }\r\n            };\r\n\r\n            if (asset.resource) {\r\n                onLoadAsset(asset);\r\n                return;\r\n            }\r\n\r\n            if (type === 'model') {\r\n                self._loadModel(asset, callback);\r\n                return;\r\n            }\r\n\r\n            asset.once(\"load\", onLoadAsset);\r\n            asset.once(\"error\", function (err) {\r\n                callback(err);\r\n            });\r\n            self.load(asset);\r\n        },\r\n\r\n        // private method used for engine-only loading of model data\r\n        _loadModel: function (asset, callback) {\r\n            var self = this;\r\n\r\n            var url = asset.getFileUrl();\r\n            var dir = pc2d.path.getDirectory(url);\r\n            var basename = pc2d.path.getBasename(url);\r\n            var ext = pc2d.path.getExtension(url);\r\n\r\n            var _loadAsset = function (assetToLoad) {\r\n                asset.once(\"load\", function (loadedAsset) {\r\n                    callback(null, loadedAsset);\r\n                });\r\n                asset.once(\"error\", function (err) {\r\n                    callback(err);\r\n                });\r\n                self.load(assetToLoad);\r\n            };\r\n\r\n            if (ext === '.json' || ext === '.glb') {\r\n                // playcanvas model format supports material mapping file\r\n                var mappingUrl = pc2d.path.join(dir, basename.replace(ext, \".mapping.json\"));\r\n                this._loader.load(mappingUrl, 'json', function (err, data) {\r\n                    if (err) {\r\n                        asset.data = { mapping: [] };\r\n                        _loadAsset(asset);\r\n                        return;\r\n                    }\r\n\r\n                    self._loadMaterials(dir, data, function (e, materials) {\r\n                        asset.data = data;\r\n                        _loadAsset(asset);\r\n                    });\r\n                });\r\n            } else {\r\n                // other model format (e.g. obj)\r\n                _loadAsset(asset);\r\n            }\r\n        },\r\n\r\n        // private method used for engine-only loading of model data\r\n        _loadMaterials: function (dir, mapping, callback) {\r\n            if (dir) {\r\n                // dir is generated from a call to pc2d.path.getDirectory which never returns\r\n                // a path ending in a forward slash so add one here\r\n                dir += '/';\r\n                if (this.prefix && dir.startsWith(this.prefix)) {\r\n                    dir = dir.slice(this.prefix.length);\r\n                }\r\n            }\r\n\r\n            var self = this;\r\n            var i;\r\n            var count = mapping.mapping.length;\r\n            var materials = [];\r\n\r\n            if (count === 0) {\r\n                callback(null, materials);\r\n            }\r\n\r\n            var onLoadAsset = function (err, asset) {\r\n                materials.push(asset);\r\n                count--;\r\n                if (count === 0)\r\n                    callback(null, materials);\r\n            };\r\n\r\n            for (i = 0; i < mapping.mapping.length; i++) {\r\n                var path = mapping.mapping[i].path;\r\n                if (path) {\r\n                    path = pc2d.path.join(dir, path);\r\n                    self.loadFromUrl(path, \"material\", onLoadAsset);\r\n                } else {\r\n                    count--;\r\n                }\r\n            }\r\n        },\r\n\r\n        // private method used for engine-only loading of model data\r\n        _loadTextures: function (materialAssets, callback) {\r\n            var self = this;\r\n            var i;\r\n            var used = {}; // prevent duplicate urls\r\n            var urls = [];\r\n            var textures = [];\r\n            var count = 0;\r\n            for (i = 0; i < materialAssets.length; i++) {\r\n                var materialData = materialAssets[i].data;\r\n\r\n                if (materialData.mappingFormat !== 'path') {\r\n                    console.warn('Skipping: ' + materialAssets[i].name + ', material files must be mappingFormat: \"path\" to be loaded from URL');\r\n                    continue;\r\n                }\r\n\r\n                var url = materialAssets[i].getFileUrl();\r\n                var dir = pc2d.path.getDirectory(url);\r\n                if (dir) {\r\n                    // pc2d.path.getDirectory never returns a path ending in a forward slash so add one\r\n                    dir += '/';\r\n\r\n                    if (this.prefix && dir.startsWith(this.prefix)) {\r\n                        dir = dir.slice(this.prefix.length);\r\n                    }\r\n                }\r\n\r\n                var textureUrl;\r\n\r\n                for (var pi = 0; pi < pc2d.StandardMaterial.TEXTURE_PARAMETERS.length; pi++) {\r\n                    var paramName = pc2d.StandardMaterial.TEXTURE_PARAMETERS[pi];\r\n\r\n                    if (materialData[paramName] && typeof(materialData[paramName]) === 'string') {\r\n                        var texturePath = materialData[paramName];\r\n                        textureUrl = pc2d.path.join(dir, texturePath);\r\n                        if (!used[textureUrl]) {\r\n                            used[textureUrl] = true;\r\n                            urls.push(textureUrl);\r\n                            count++;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!count) {\r\n                callback(null, textures);\r\n                return;\r\n            }\r\n\r\n            var onLoadAsset = function (err, texture) {\r\n                textures.push(texture);\r\n                count--;\r\n\r\n                if (err) console.error(err);\r\n\r\n                if (count === 0)\r\n                    callback(null, textures);\r\n            };\r\n\r\n            for (i = 0; i < urls.length; i++)\r\n                self.loadFromUrl(urls[i], \"texture\", onLoadAsset);\r\n        },\r\n\r\n        findAll: function (name, type) {\r\n            var self = this;\r\n            var idxs = this._names[name];\r\n            if (idxs) {\r\n                var assets = idxs.map(function (idx) {\r\n                    return self._assets[idx];\r\n                });\r\n\r\n                if (type) {\r\n                    return assets.filter(function (asset) {\r\n                        return (asset.type === type);\r\n                    });\r\n                }\r\n\r\n                return assets;\r\n            }\r\n\r\n            return [];\r\n        },\r\n\r\n        _onTagAdd: function (tag, asset) {\r\n            this._tags.add(tag, asset);\r\n        },\r\n\r\n        _onTagRemove: function (tag, asset) {\r\n            this._tags.remove(tag, asset);\r\n        },\r\n\r\n        findByTag: function () {\r\n            return this._tags.find(arguments);\r\n        },\r\n\r\n        filter: function (callback) {\r\n            var items = [];\r\n            for (var i = 0, len = this._assets.length; i < len; i++) {\r\n                if (callback(this._assets[i]))\r\n                    items.push(this._assets[i]);\r\n            }\r\n            return items;\r\n        },\r\n\r\n        find: function (name, type) {\r\n            var asset = this.findAll(name, type);\r\n            return asset ? asset[0] : null;\r\n        }\r\n    });\r\n\r\n    return {\r\n        AssetRegistry: AssetRegistry\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var ResourceLoader = function (app) {\r\n        this._handlers = {};\r\n        this._requests = {};\r\n        this._cache = {};\r\n        this._app = app;\r\n    };\r\n\r\n    Object.assign(ResourceLoader.prototype, {\r\n        addHandler: function (type, handler) {\r\n            this._handlers[type] = handler;\r\n            handler._loader = this;\r\n        },\r\n\r\n        removeHandler: function (type) {\r\n            delete this._handlers[type];\r\n        },\r\n\r\n        getHandler: function (type) {\r\n            return this._handlers[type];\r\n        },\r\n\r\n        load: function (url, type, callback, asset) {\r\n            var handler = this._handlers[type];\r\n            if (!handler) {\r\n                var err = \"No handler for asset type: \" + type;\r\n                callback(err);\r\n                return;\r\n            }\r\n\r\n            var key = url + type;\r\n\r\n            if (this._cache[key] !== undefined) {\r\n                // in cache\r\n                callback(null, this._cache[key]);\r\n            } else if (this._requests[key]) {\r\n                // existing request\r\n                this._requests[key].push(callback);\r\n            } else {\r\n                // new request\r\n                this._requests[key] = [callback];\r\n\r\n                var self = this;\r\n\r\n                var handleLoad = function (err, urlObj) {\r\n                    if (err) {\r\n                        self._onFailure(key, err);\r\n                        return;\r\n                    }\r\n\r\n                    handler.load(urlObj, function (err, data, extra) {\r\n                        // make sure key exists because loader\r\n                        // might have been destroyed by now\r\n                        if (!self._requests[key]) {\r\n                            return;\r\n                        }\r\n\r\n                        if (err) {\r\n                            self._onFailure(key, err);\r\n                            return;\r\n                        }\r\n\r\n                        try {\r\n                            self._onSuccess(key, handler.open(urlObj.original, data, asset), extra);\r\n                        } catch (e) {\r\n                            self._onFailure(key, e);\r\n                        }\r\n                    }, asset);\r\n                };\r\n\r\n                var normalizedUrl = url.split('?')[0];\r\n                if (this._app.enableBundles && this._app.bundles.hasUrl(normalizedUrl)) {\r\n                    if (!this._app.bundles.canLoadUrl(normalizedUrl)) {\r\n                        handleLoad('Bundle for ' + url + ' not loaded yet');\r\n                        return;\r\n                    }\r\n\r\n                    this._app.bundles.loadUrl(normalizedUrl, function (err, fileUrlFromBundle) {\r\n                        handleLoad(err, { load: fileUrlFromBundle, original: url });\r\n                    });\r\n                } else {\r\n                    handleLoad(null, { load: url, original: url });\r\n                }\r\n            }\r\n        },\r\n\r\n        _onSuccess: function (key, result, extra) {\r\n            this._cache[key] = result;\r\n            for (var i = 0; i < this._requests[key].length; i++) {\r\n                this._requests[key][i](null, result, extra);\r\n            }\r\n            delete this._requests[key];\r\n        },\r\n\r\n        _onFailure: function (key, err) {\r\n            console.error(err);\r\n            if (this._requests[key]) {\r\n                for (var i = 0; i < this._requests[key].length; i++) {\r\n                    this._requests[key][i](err);\r\n                }\r\n                delete this._requests[key];\r\n            }\r\n        },\r\n\r\n        open: function (type, data) {\r\n            var handler = this._handlers[type];\r\n            if (!handler) {\r\n                console.warn(\"No resource handler found for: \" + type);\r\n                return data;\r\n            }\r\n\r\n            return handler.open(null, data);\r\n\r\n        },\r\n\r\n        patch: function (asset, assets) {\r\n            var handler = this._handlers[asset.type];\r\n            if (!handler)  {\r\n                console.warn(\"No resource handler found for: \" + asset.type);\r\n                return;\r\n            }\r\n\r\n            if (handler.patch) {\r\n                handler.patch(asset, assets);\r\n            }\r\n        },\r\n\r\n        clearCache: function (url, type) {\r\n            delete this._cache[url + type];\r\n        },\r\n\r\n        getFromCache: function (url, type) {\r\n            if (this._cache[url + type]) {\r\n                return this._cache[url + type];\r\n            }\r\n        },\r\n\r\n        enableRetry: function () {\r\n            for (var key in this._handlers) {\r\n                this._handlers[key].retryRequests = true;\r\n            }\r\n        },\r\n\r\n        disableRetry: function () {\r\n            for (var key in this._handlers) {\r\n                this._handlers[key].retryRequests = false;\r\n            }\r\n        },\r\n\r\n        destroy: function () {\r\n            this._handlers = {};\r\n            this._requests = {};\r\n            this._cache = {};\r\n        }\r\n    });\r\n\r\n    return {\r\n        ResourceLoader: ResourceLoader\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n    var ScriptHandler = function (app) {\r\n        this._app = app;\r\n        this._scripts = { };\r\n        this._cache = { };\r\n    };\r\n\r\n    ScriptHandler._types = [];\r\n    ScriptHandler._push = function (Type) {\r\n        ScriptHandler._types.push(Type);\r\n    };\r\n\r\n    Object.assign(ScriptHandler.prototype, {\r\n        load: function (url, callback) {\r\n            // Scripts don't support bundling since we concatenate them. Below is for consistency.\r\n            if (typeof url === 'string') {\r\n                url = {\r\n                    load: url,\r\n                    original: url\r\n                };\r\n            }\r\n\r\n            var self = this;\r\n            pc2d.script.app = this._app;\r\n\r\n            this._loadScript(url.original, function (err, url, extra) {\r\n                if (!err) {\r\n                    if (pc2d.script.legacy) {\r\n                        var Type = null;\r\n                        // pop the type from the loading stack\r\n                        if (ScriptHandler._types.length) {\r\n                            Type = ScriptHandler._types.pop();\r\n                        }\r\n\r\n                        if (Type) {\r\n                            // store indexed by URL\r\n                            this._scripts[url] = Type;\r\n                        } else {\r\n                            Type = null;\r\n                        }\r\n\r\n                        // return the resource\r\n                        callback(null, Type, extra);\r\n                    } else {\r\n                        var obj = { };\r\n\r\n                        for (var i = 0; i < ScriptHandler._types.length; i++)\r\n                            obj[ScriptHandler._types[i].name] = ScriptHandler._types[i];\r\n\r\n                        ScriptHandler._types.length = 0;\r\n\r\n                        callback(null, obj, extra);\r\n\r\n                        // no cache for scripts\r\n                        delete self._loader._cache[url + 'script'];\r\n                    }\r\n                } else {\r\n                    callback(err);\r\n                }\r\n            }.bind(this));\r\n        },\r\n\r\n        open: function (url, data) {\r\n            return data;\r\n        },\r\n\r\n        patch: function (asset, assets) { },\r\n\r\n        _loadScript: function (url, callback) {\r\n            var head = document.head;\r\n            var element = document.createElement('script');\r\n            this._cache[url] = element;\r\n\r\n            // use async=false to force scripts to execute in order\r\n            element.async = false;\r\n\r\n            element.addEventListener('error', function (e) {\r\n                callback(pc2d.string.format(\"Script: {0} failed to load\", e.target.src));\r\n            }, false);\r\n\r\n            var done = false;\r\n            element.onload = element.onreadystatechange = function () {\r\n                if (!done && (!this.readyState || (this.readyState == \"loaded\" || this.readyState == \"complete\"))) {\r\n                    done = true; // prevent double event firing\r\n                    callback(null, url, element);\r\n                }\r\n            };\r\n            // set the src attribute after the onload callback is set, to avoid an instant loading failing to fire the callback\r\n            element.src = url;\r\n\r\n            head.appendChild(element);\r\n        }\r\n    });\r\n\r\n    return {\r\n        ScriptHandler: ScriptHandler\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var SceneParser = function (app, isTemplate) {\r\n        this._app = app;\r\n\r\n        this._isTemplate = isTemplate;\r\n    };\r\n\r\n    Object.assign(SceneParser.prototype, {\r\n        parse: function (data) {\r\n            var entities = {};\r\n            var id, i;\r\n            var parent = null;\r\n\r\n            if (data.collapsedInstances) {\r\n                this._addCollapsedToEntities(this._app, data);\r\n            }\r\n\r\n            // instantiate entities\r\n            for (id in data.entities) {\r\n                entities[id] = this._createEntity(data.entities[id]);\r\n                if (data.entities[id].parent === null) {\r\n                    parent = entities[id];\r\n                }\r\n            }\r\n\r\n            // put entities into hierarchy\r\n            for (id in data.entities) {\r\n                var l = data.entities[id].children.length;\r\n                for (i = 0; i < l; i++) {\r\n                    // pop resource id off the end of the array\r\n                    var resource_id = data.entities[id].children[i];\r\n                    if (entities[resource_id]) {\r\n                        // push entity on the front of the array\r\n                        entities[id].addChild(entities[resource_id]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._openComponentData(parent, data.entities);\r\n\r\n            return parent;\r\n        },\r\n\r\n        _createEntity: function (data) {\r\n            var entity = new pc2d.Entity();\r\n\r\n            // var p = data.position;\r\n            // var r = data.rotation;\r\n            // var s = data.scale;\r\n\r\n            entity.name = data.name;\r\n            entity.setGuid(data.resource_id);\r\n            // entity.setLocalPosition(p[0], p[1], p[2]);\r\n            // entity.setLocalEulerAngles(r[0], r[1], r[2]);\r\n            // entity.setLocalScale(s[0], s[1], s[2]);\r\n            entity._enabled = data.enabled !== undefined ? data.enabled : true;\r\n\r\n            if (!this._isTemplate) {\r\n                entity._enabledInHierarchy = entity._enabled;\r\n            }\r\n\r\n            entity.template = data.template;\r\n\r\n            if (data.tags) {\r\n                for (var i = 0; i < data.tags.length; i++) {\r\n                    entity.tags.add(data.tags[i]);\r\n                }\r\n            }\r\n\r\n            if (data.labels) {\r\n                data.labels.forEach(function (label) {\r\n                    entity.addLabel(label);\r\n                });\r\n            }\r\n\r\n            return entity;\r\n        },\r\n\r\n        _openComponentData: function (entity, entities) {\r\n            // Create components in order\r\n            var systemsList = this._app.systems.list;\r\n\r\n            var i, len = systemsList.length;\r\n            var entityData = entities[entity.getGuid()];\r\n            for (i = 0; i < len; i++) {\r\n                var system = systemsList[i];\r\n                var componentData = entityData.components[system.id];\r\n                if (componentData) {\r\n                    system.addComponent(entity, componentData);\r\n                }\r\n            }\r\n\r\n            // Open all children and add them to the node\r\n            len = entityData.children.length;\r\n            var children = entity._children;\r\n            for (i = 0; i < len; i++) {\r\n                if(!children[i]) return\r\n                children[i] = this._openComponentData(children[i], entities);\r\n            }\r\n\r\n            return entity;\r\n        },\r\n\r\n        _addCollapsedToEntities: function (app, data) {\r\n            data.collapsedInstances.forEach(function (h) {\r\n                var expanded = pc2d.TemplateUtils.expandTemplateEntities(\r\n                    app, h.instanceEntities);\r\n\r\n                Object.assign(data.entities, expanded);\r\n            });\r\n        }\r\n    });\r\n\r\n    return {\r\n        SceneParser: SceneParser\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n    var SceneHandler = function (app) {\r\n        this._app = app;\r\n        this.retryRequests = false;\r\n    };\r\n\r\n    Object.assign(SceneHandler.prototype, {\r\n        load: function (url, callback) {\r\n            if (typeof url === 'string') {\r\n                url = {\r\n                    load: url,\r\n                    original: url\r\n                };\r\n            }\r\n\r\n            var assets = this._app.assets;\r\n\r\n            pc2d.http.get(url.load, {\r\n                retry: this.retryRequests\r\n            }, function (err, response) {\r\n                if (!err) {\r\n                    pc2d.TemplateUtils.waitForTemplatesInScene(\r\n                        response,\r\n                        assets,\r\n                        callback);\r\n                } else {\r\n                    var errMsg = 'Error while loading scene ' + url.original;\r\n                    if (err.message) {\r\n                        errMsg += ': ' + err.message;\r\n                        if (err.stack) {\r\n                            errMsg += '\\n' + err.stack;\r\n                        }\r\n                    } else {\r\n                        errMsg += ': ' + err;\r\n                    }\r\n\r\n                    callback(errMsg);\r\n                }\r\n            });\r\n        },\r\n\r\n        open: function (url, data) {\r\n            // prevent script initialization until entire scene is open\r\n            this._app.systems.script.preloading = true;\r\n\r\n            var parser = new pc2d.SceneParser(this._app, false);\r\n            var parent = parser.parse(data);\r\n\r\n            // set scene root\r\n            var scene = this._app.scene;\r\n            scene.root = parent;\r\n\r\n            this._app.applySceneSettings(data.settings);\r\n\r\n            // re-enable script initialization\r\n            this._app.systems.script.preloading = false;\r\n\r\n            return scene;\r\n        },\r\n\r\n        patch: function (asset, assets) {\r\n        }\r\n    });\r\n\r\n    return {\r\n        SceneHandler: SceneHandler\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var CssHandler = function () {\r\n        this.retryRequests = false;\r\n    };\r\n\r\n    Object.assign(CssHandler.prototype, {\r\n        load: function (url, callback) {\r\n            if (typeof url === 'string') {\r\n                url = {\r\n                    load: url,\r\n                    original: url\r\n                };\r\n            }\r\n\r\n            if(url.load.startsWith(\"data:text/css;\")){\r\n                var link = document.createElement('link');\r\n                link.rel=\"stylesheet\";\r\n                link.href = url.load;\r\n                document.head.appendChild(link);\r\n                callback(null, \"\");\r\n            }else{\r\n\r\n                var link = document.createElement('link');\r\n                link.rel=\"stylesheet\";\r\n                link.href = url.load;\r\n                document.head.appendChild(link);\r\n                callback(null, \"\");\r\n\r\n                // pc2d.http.get(url.load, {\r\n                //     retry: this.retryRequests\r\n                // }, function (err, response) {\r\n                //     if (!err) {\r\n                //         callback(null, response);\r\n                //     } else {\r\n                //         callback(pc.string.format(\"Error loading css resource: {0} [{1}]\", url.original, err));\r\n                //     }\r\n                // });\r\n            }\r\n\r\n           \r\n        },\r\n\r\n        open: function (url, data) {\r\n            return data;\r\n        },\r\n\r\n        patch: function (asset, assets) {\r\n        }\r\n    });\r\n    var createStyle = function (cssString) {\r\n        var result = document.createElement('style');\r\n        result.type = 'text/css';\r\n        if (result.styleSheet) {\r\n            result.styleSheet.cssText = cssString;\r\n        } else {\r\n            result.appendChild(document.createTextNode(cssString));\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    return {\r\n        CssHandler: CssHandler,\r\n        createStyle: createStyle\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var JsonHandler = function () {\r\n        this.retryRequests = false;\r\n    };\r\n\r\n    Object.assign(JsonHandler.prototype, {\r\n        load: function (url, callback) {\r\n            if (typeof url === 'string') {\r\n                url = {\r\n                    load: url,\r\n                    original: url\r\n                };\r\n            }\r\n\r\n            // if this a blob URL we need to set the response type as json\r\n            var options = {\r\n                retry: this.retryRequests\r\n            };\r\n\r\n            if (url.load.startsWith('blob:')) {\r\n                options.responseType = pc2d.Http.ResponseType.JSON;\r\n            }\r\n\r\n            pc2d.http.get(url.load, options, function (err, response) {\r\n                if (!err) {\r\n                    callback(null, response);\r\n                } else {\r\n                    callback(pc2d.string.format(\"Error loading JSON resource: {0} [{1}]\", url.original, err));\r\n                }\r\n            });\r\n        },\r\n\r\n        open: function (url, data) {\r\n            return data;\r\n        },\r\n\r\n        patch: function (asset, assets) {\r\n        }\r\n    });\r\n\r\n    return {\r\n        JsonHandler: JsonHandler\r\n    };\r\n}());","Object.assign(pc, function () {\r\n    'use strict';\r\n\r\n    var TemplateHandler = function (app) {\r\n        this._app = app;\r\n    };\r\n\r\n    Object.assign(TemplateHandler.prototype, {\r\n        load: function (url, callback) {\r\n            if (typeof url === 'string') {\r\n                url = {\r\n                    load: url,\r\n                    original: url\r\n                };\r\n            }\r\n\r\n            var assets = this._app.assets;\r\n\r\n            pc2d.http.get(url.load, function (err, response) {\r\n                if (err) {\r\n                    callback(\"Error requesting template: \" + url.original);\r\n                } else {\r\n                    pc2d.TemplateUtils.waitForTemplateAssets(\r\n                        response.entities,\r\n                        assets,\r\n                        callback,\r\n                        response);\r\n                }\r\n            });\r\n        },\r\n\r\n        open: function (url, data) {\r\n            return new pc2d.Template(this._app, data);\r\n        }\r\n    });\r\n\r\n    return {\r\n        TemplateHandler: TemplateHandler\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var TemplateUtils = {\r\n        waitForTemplatesInScene: function (data, assets, callback) {\r\n            if (data.collapsedInstances) {\r\n                var entities = pc2d.TemplateUtils._getAllCollapsedEntities(data);\r\n\r\n                pc2d.TemplateUtils.waitForTemplateAssets(\r\n                    entities,\r\n                    assets,\r\n                    callback,\r\n                    data);\r\n            } else {\r\n                callback(null, data);\r\n            }\r\n        },\r\n\r\n        waitForTemplateAssets: function (entities, assets, callback, response) {\r\n            var templateIds = pc2d.TemplateUtils._extractTemplateIds(entities);\r\n\r\n            var loader = new pc2d.AssetListLoader(templateIds, assets);\r\n\r\n            loader.load(function (err) {\r\n                callback(err, response);\r\n            });\r\n        },\r\n\r\n        _getAllCollapsedEntities: function (data) {\r\n            var entities = {};\r\n\r\n            data.collapsedInstances.forEach(function (h) {\r\n                Object.assign(entities, h.instanceEntities);\r\n            });\r\n\r\n            return entities;\r\n        },\r\n\r\n        _extractTemplateIds: function (entities) {\r\n            var templateIds = [];\r\n\r\n            for (var guid in entities) {\r\n                var id = entities[guid].template_id;\r\n\r\n                if (id) {\r\n                    templateIds.push(id);\r\n                }\r\n            }\r\n\r\n            return templateIds;\r\n        },\r\n\r\n        expandTemplateEntities: function (app, entities) {\r\n            var result = {};\r\n\r\n            for (var guid in entities) {\r\n                var h = entities[guid];\r\n\r\n                result[guid] = h.collapsed_entity ?\r\n                    pc2d.TemplateUtils.expandEntity(app, h) : h;\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        expandEntity: function (app, data) {\r\n            // todo implement this\r\n        }\r\n    };\r\n\r\n    return {\r\n        TemplateUtils: TemplateUtils\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var Template = function Template(app, data) {\r\n        this._app = app;\r\n\r\n        this._data = data;\r\n\r\n        this._expandedData = {};\r\n\r\n        this._templateRoot = null;\r\n    };\r\n\r\n    Template.prototype.instantiate = function () {\r\n        if (!this._templateRoot) { // at first use, after scripts are loaded\r\n            this._parseTemplate();\r\n        }\r\n\r\n        return this._templateRoot.clone();\r\n    };\r\n\r\n\r\n    Template.prototype.getExpandedData = function () {\r\n        if (!this._expandedData.entities) {\r\n            this._expandedData.entities = pc2d.TemplateUtils.expandTemplateEntities(\r\n                this._app, this._data.entities);\r\n        }\r\n\r\n        return this._expandedData;\r\n    };\r\n\r\n    Template.prototype._parseTemplate = function () {\r\n        var parser = new pc2d.SceneParser(this._app, true);\r\n\r\n        this._templateRoot = parser.parse(this.getExpandedData());\r\n    };\r\n\r\n    return {\r\n        Template: Template\r\n    };\r\n}());","Object.assign(pc2d, function () {\r\n    'use strict';\r\n\r\n    var EVENT_RESIZE = 'resizecanvas';\r\nvar GraphicsDevice = function (canvas, options) {\r\n    pc2d.EventHandler.call(this);\r\n    var i;\r\n    this.canvas = canvas;\r\n    this._maxPixelRatio = 1;\r\n    this.renderTarget = null;\r\n\r\n    // local width/height without pixelRatio applied\r\n    this._width = 0;\r\n    this._height = 0;\r\n\r\n  \r\n}\r\nGraphicsDevice.prototype = Object.create(pc2d.EventHandler.prototype);\r\nGraphicsDevice.prototype.constructor = GraphicsDevice;\r\n\r\nObject.assign(GraphicsDevice.prototype, {\r\n    resizeCanvas: function (width, height) {\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        var ratio = Math.min(this._maxPixelRatio, window.devicePixelRatio);\r\n        width *= ratio;\r\n        height *= ratio;\r\n        // this.canvas.width = width;\r\n        // this.canvas.height = height;\r\n        this.fire(EVENT_RESIZE, width, height);\r\n    },\r\n\r\n    setResolution: function (width, height) {\r\n        this._width = width;\r\n        this._height = height;\r\n        // this.canvas.width = width;\r\n        // this.canvas.height = height;\r\n        this.fire(EVENT_RESIZE, width, height);\r\n    },\r\n    destroy: function () {\r\n        this.canvas = null;\r\n    },\r\n  \r\n});\r\n\r\n\r\nObject.defineProperty(GraphicsDevice.prototype, 'width', {\r\n    get: function () {\r\n        return this.canvas.width;\r\n    }\r\n});\r\n\r\nObject.defineProperty(GraphicsDevice.prototype, 'height', {\r\n    get: function () {\r\n        return this.canvas.height;\r\n    }\r\n});\r\n\r\n\r\nObject.defineProperty(GraphicsDevice.prototype, 'fullscreen', {\r\n    get: function () {\r\n        return !!document.fullscreenElement;\r\n    },\r\n    set: function (fullscreen) {\r\n        if (fullscreen) {\r\n            var canvas = this.canvas;\r\n            canvas.requestFullscreen();\r\n        } else {\r\n            document.exitFullscreen();\r\n        }\r\n    }\r\n});\r\n\r\n\r\nObject.defineProperty(GraphicsDevice.prototype, 'maxPixelRatio', {\r\n    get: function () {\r\n        return this._maxPixelRatio;\r\n    },\r\n    set: function (ratio) {\r\n        this._maxPixelRatio = ratio;\r\n        this.resizeCanvas(this._width, this._height);\r\n    }\r\n});\r\n\r\n\r\nreturn {\r\n    GraphicsDevice: GraphicsDevice\r\n};\r\n\r\n}());","Object.assign(pc2d, function () {\r\n    var Entity = function (name, app){\r\n        pc2d.GraphNode.call(this, name);\r\n\r\n        if (name instanceof pc2d.Application) app = name;\r\n        this._batchHandle = null; // The handle for a RequestBatch, set this if you want to Component's to load their resources using a pre-existing RequestBatch.\r\n        this.c = {}; // Component storage\r\n\r\n        this._app = app; // store app\r\n        if (!app) {\r\n            this._app = pc2d.Application.getApplication(); // get the current application\r\n            if (!this._app) {\r\n                throw new Error(\"Couldn't find current application\");\r\n            }\r\n        }\r\n\r\n        this._guid = null;\r\n\r\n        // used by component systems to speed up destruction\r\n        this._destroying = false;\r\n    };\r\n    Entity.prototype = Object.create(pc2d.GraphNode.prototype);\r\n    Entity.prototype.constructor = Entity;\r\n\r\n \r\n    Entity.prototype.addComponent = function (type, data) {\r\n        var system = this._app.systems[type];\r\n        if (!system) {\r\n            // #ifdef DEBUG\r\n            console.error(\"addComponent: System \" + type + \" doesn't exist\");\r\n            // #endif\r\n            return null;\r\n        }\r\n        if (this.c[type]) {\r\n            // #ifdef DEBUG\r\n            console.warn(\"addComponent: Entity already has \" + type + \" component\");\r\n            // #endif\r\n            return null;\r\n        }\r\n        return system.addComponent(this, data);\r\n    };\r\n\r\n    Entity.prototype.removeComponent = function (type) {\r\n        var system = this._app.systems[type];\r\n        if (!system) {\r\n            // #ifdef DEBUG\r\n            console.error(\"removeComponent: System \" + type + \" doesn't exist\");\r\n            // #endif\r\n            return;\r\n        }\r\n        if (!this.c[type]) {\r\n            // #ifdef DEBUG\r\n            console.warn(\"removeComponent: Entity doesn't have \" + type + \" component\");\r\n            // #endif\r\n            return;\r\n        }\r\n        system.removeComponent(this);\r\n    };\r\n\r\n    Entity.prototype.findComponent = function (type) {\r\n        var entity = this.findOne(function (node) {\r\n            return node.c && node.c[type];\r\n        });\r\n        return entity && entity.c[type];\r\n    };\r\n\r\n    Entity.prototype.findComponents = function (type) {\r\n        var entities = this.find(function (node) {\r\n            return node.c && node.c[type];\r\n        });\r\n        return entities.map(function (entity) {\r\n            return entity.c[type];\r\n        });\r\n    };\r\n\r\n    Entity.prototype.getGuid = function () {\r\n        // if the guid hasn't been set yet then set it now\r\n        // before returning it\r\n        if (! this._guid) {\r\n            this.setGuid(pc2d.guid.create());\r\n        }\r\n\r\n        return this._guid;\r\n    };\r\n\r\n    Entity.prototype.setGuid = function (guid) {\r\n        // remove current guid from entityIndex\r\n        var index = this._app._entityIndex;\r\n        if (this._guid) {\r\n            delete index[this._guid];\r\n        }\r\n\r\n        // add new guid to entityIndex\r\n        this._guid = guid;\r\n        index[this._guid] = this;\r\n    };\r\n\r\n    Entity.prototype._notifyHierarchyStateChanged = function (node, enabled) {\r\n        var enableFirst = false;\r\n        if (node === this && this._app._enableList.length === 0)\r\n            enableFirst = true;\r\n\r\n        node._beingEnabled = true;\r\n\r\n        node._onHierarchyStateChanged(enabled);\r\n\r\n        if (node._onHierarchyStatePostChanged)\r\n            this._app._enableList.push(node);\r\n\r\n        var i, len;\r\n        var c = node._children;\r\n        for (i = 0, len = c.length; i < len; i++) {\r\n            if (c[i]._enabled)\r\n                this._notifyHierarchyStateChanged(c[i], enabled);\r\n        }\r\n\r\n        node._beingEnabled = false;\r\n\r\n        if (enableFirst) {\r\n            // do not cache the length here, as enableList may be added to during loop\r\n            for (i = 0; i < this._app._enableList.length; i++) {\r\n                this._app._enableList[i]._onHierarchyStatePostChanged();\r\n            }\r\n\r\n            this._app._enableList.length = 0;\r\n        }\r\n    };\r\n\r\n    Entity.prototype._onHierarchyStateChanged = function (enabled) {\r\n        pc2d.GraphNode.prototype._onHierarchyStateChanged.call(this, enabled);\r\n\r\n        // enable / disable all the components\r\n        var component;\r\n        var components = this.c;\r\n        for (var type in components) {\r\n            if (components.hasOwnProperty(type)) {\r\n                component = components[type];\r\n                if (component.enabled) {\r\n                    if (enabled) {\r\n                        component.onEnable();\r\n                    } else {\r\n                        component.onDisable();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    Entity.prototype._onHierarchyStatePostChanged = function () {\r\n        // post enable all the components\r\n        var components = this.c;\r\n        for (var type in components) {\r\n            if (components.hasOwnProperty(type))\r\n                components[type].onPostStateChange();\r\n        }\r\n    };\r\n\r\n    Entity.prototype.findByGuid = function (guid) {\r\n        if (this._guid === guid) return this;\r\n\r\n        var e = this._app._entityIndex[guid];\r\n        if (e && (e === this || e.isDescendantOf(this))) {\r\n            return e;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    Entity.prototype.destroy = function () {\r\n        var name;\r\n\r\n        this._destroying = true;\r\n\r\n        // Disable all enabled components first\r\n        for (name in this.c) {\r\n            this.c[name].enabled = false;\r\n        }\r\n\r\n        // Remove all components\r\n        for (name in this.c) {\r\n            this.c[name].system.removeComponent(this);\r\n        }\r\n\r\n        // Detach from parent\r\n        if (this._parent)\r\n            this._parent.removeChild(this);\r\n\r\n        var children = this._children;\r\n        var child = children.shift();\r\n        while (child) {\r\n            if (child instanceof pc2d.Entity) {\r\n                child.destroy();\r\n            }\r\n            child._parent = null;\r\n\r\n            child = children.shift();\r\n        }\r\n\r\n        // fire destroy event\r\n        this.fire('destroy', this);\r\n\r\n        // clear all events\r\n        this.off();\r\n\r\n        // remove from entity index\r\n        if (this._guid) {\r\n            delete this._app._entityIndex[this._guid];\r\n        }\r\n\r\n        this._destroying = false;\r\n    };\r\n\r\n    Entity.prototype.clone = function () {\r\n        var duplicatedIdsMap = {};\r\n        var clone = this._cloneRecursively(duplicatedIdsMap);\r\n        duplicatedIdsMap[this.getGuid()] = clone;\r\n\r\n        resolveDuplicatedEntityReferenceProperties(this, this, clone, duplicatedIdsMap);\r\n\r\n        return clone;\r\n    };\r\n\r\n    Entity.prototype.cloneShallow = function() {\r\n        var clone = new pc2d.Entity(this._app);\r\n        pc2d.GraphNode.prototype._cloneInternal.call(this, clone);\r\n\r\n        for (var type in this.c) {\r\n            var component = this.c[type];\r\n            component.system.cloneComponent(this, clone);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    Entity.prototype._cloneRecursively = function (duplicatedIdsMap) {\r\n        var clone = new pc2d.Entity(this._app);\r\n        pc2d.GraphNode.prototype._cloneInternal.call(this, clone);\r\n\r\n        for (var type in this.c) {\r\n            var component = this.c[type];\r\n            component.system.cloneComponent(this, clone);\r\n        }\r\n\r\n        var i;\r\n        for (i = 0; i < this._children.length; i++) {\r\n            var oldChild = this._children[i];\r\n            if (oldChild instanceof pc2d.Entity) {\r\n                var newChild = oldChild._cloneRecursively(duplicatedIdsMap);\r\n                clone.addChild(newChild);\r\n                duplicatedIdsMap[oldChild.getGuid()] = newChild;\r\n            }\r\n        }\r\n\r\n        return clone;\r\n    };\r\n    function resolveDuplicatedEntityReferenceProperties(oldSubtreeRoot, oldEntity, newEntity, duplicatedIdsMap) {\r\n        var i, len;\r\n\r\n        if (oldEntity instanceof pc2d.Entity) {\r\n            var components = oldEntity.c;\r\n\r\n            // Handle component properties\r\n            for (var componentName in components) {\r\n                var component = components[componentName];\r\n                var entityProperties = component.system.getPropertiesOfType('entity');\r\n\r\n                for (i = 0, len = entityProperties.length; i < len; i++) {\r\n                    var propertyDescriptor = entityProperties[i];\r\n                    var propertyName = propertyDescriptor.name;\r\n                    var oldEntityReferenceId = component[propertyName];\r\n                    var entityIsWithinOldSubtree = !!oldSubtreeRoot.findByGuid(oldEntityReferenceId);\r\n\r\n                    if (entityIsWithinOldSubtree) {\r\n                        var newEntityReferenceId = duplicatedIdsMap[oldEntityReferenceId].getGuid();\r\n\r\n                        if (newEntityReferenceId) {\r\n                            newEntity.c[componentName][propertyName] = newEntityReferenceId;\r\n                        } else {\r\n                            console.warn('Could not find corresponding entity id when resolving duplicated entity references');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle entity script attributes\r\n            if (components.script && ! newEntity._app.useLegacyScriptAttributeCloning) {\r\n                newEntity.script.resolveDuplicatedEntityReferenceProperties(components.script, duplicatedIdsMap);\r\n            }\r\n\r\n            // Recurse into children. Note that we continue to pass in the same `oldSubtreeRoot`,\r\n            // in order to correctly handle cases where a child has an entity reference\r\n            // field that points to a parent or other ancestor that is still within the\r\n            // duplicated subtree.\r\n            var _old = oldEntity.children.filter(function (e) {\r\n                return (e instanceof pc2d.Entity);\r\n            });\r\n            var _new = newEntity.children.filter(function (e) {\r\n                return (e instanceof pc2d.Entity);\r\n            });\r\n\r\n            for (i = 0, len = _old.length; i < len; i++) {\r\n                resolveDuplicatedEntityReferenceProperties(oldSubtreeRoot, _old[i], _new[i], duplicatedIdsMap);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        Entity: Entity\r\n    };\r\n}());","pc2d.script = (function () {\r\n    var _legacy = false;\r\n    var _createdLoadingScreen = false;\r\n\r\n    var script = {\r\n        // set during script load to be used for initializing script\r\n        app: null,\r\n\r\n        create: function (name, callback) {\r\n            if (!_legacy)\r\n                return;\r\n\r\n            // get the ScriptType from the callback\r\n            var ScriptType = callback(pc2d.script.app);\r\n\r\n            // store the script name\r\n            ScriptType._pcScriptName = name;\r\n\r\n            // Push this onto loading stack\r\n            pc2d.ScriptHandler._push(ScriptType);\r\n\r\n            this.fire(\"created\", name, callback);\r\n        },\r\n\r\n        attribute: function (name, type, defaultValue, options) {\r\n            // only works when parsing the script...\r\n        },\r\n        createLoadingScreen: function (callback) {\r\n            if (_createdLoadingScreen)\r\n                return;\r\n\r\n            _createdLoadingScreen = true;\r\n\r\n            var app = pc2d.Application.getApplication();\r\n            callback(app);\r\n        }\r\n    };\r\n\r\n    Object.defineProperty(script, 'legacy', {\r\n        get: function () {\r\n            return _legacy;\r\n        },\r\n        set: function (value) {\r\n            _legacy = value;\r\n        }\r\n    });\r\n\r\n    pc2d.events.attach(script);\r\n\r\n    return script;\r\n}());","Object.assign(pc2d, function () {\r\n\r\n    var SceneRegistryItem = function (name, url) {\r\n        this.name = name;\r\n        this.url = url;\r\n    };\r\n\r\n    var SceneRegistry = function (app) {\r\n        this._app = app;\r\n        this._list = [];\r\n        this._index = {};\r\n        this._urlIndex = {};\r\n    };\r\n\r\n    SceneRegistry.prototype.destroy = function () {\r\n        this._app = null;\r\n    };\r\n\r\n    SceneRegistry.prototype.list = function () {\r\n        return this._list;\r\n    };\r\n\r\n    SceneRegistry.prototype.add = function (name, url) {\r\n        if (this._index.hasOwnProperty(name)) {\r\n            // #ifdef DEBUG\r\n            console.warn('pc2d.SceneRegistry: trying to add more than one scene called: ' + name);\r\n            // #endif\r\n            return false;\r\n        }\r\n\r\n        var item = new pc2d.SceneRegistryItem(name, url);\r\n\r\n        var i = this._list.push(item);\r\n        this._index[item.name] = i - 1;\r\n        this._urlIndex[item.url] = i - 1;\r\n\r\n        return true;\r\n    };\r\n\r\n    SceneRegistry.prototype.find = function (name) {\r\n        if (this._index.hasOwnProperty(name)) {\r\n            return this._list[this._index[name]];\r\n        }\r\n        return null;\r\n\r\n    };\r\n\r\n    SceneRegistry.prototype.findByUrl = function (url) {\r\n        if (this._urlIndex.hasOwnProperty(url)) {\r\n            return this._list[this._urlIndex[url]];\r\n        }\r\n        return null;\r\n    };\r\n\r\n    SceneRegistry.prototype.remove = function (name) {\r\n        if (this._index.hasOwnProperty(name)) {\r\n            var i = this._index[name];\r\n            var item = this._list[i];\r\n\r\n            delete this._urlIndex[item.url];\r\n            // remove from index\r\n            delete this._index[name];\r\n\r\n            // remove from list\r\n            this._list.splice(i, 1);\r\n\r\n            // refresh index\r\n            for (i = 0; i < this._list.length; i++) {\r\n                item = this._list[i];\r\n                this._index[item.name] = i;\r\n                this._urlIndex[item.url] = i;\r\n            }\r\n        }\r\n    };\r\n\r\n    SceneRegistry.prototype.loadSceneHierarchy = function (url, callback) {\r\n        var self = this;\r\n\r\n        // Because we need to load scripts before we instance the hierarchy (i.e. before we create script components)\r\n        // Split loading into load and open\r\n        var handler = this._app.loader.getHandler(\"hierarchy\");\r\n\r\n        // include asset prefix if present\r\n        if (this._app.assets && this._app.assets.prefix && !pc2d.ABSOLUTE_URL.test(url)) {\r\n            url = pc2d.path.join(this._app.assets.prefix, url);\r\n        }\r\n\r\n        handler.load(url, function (err, data) {\r\n            if (err) {\r\n                if (callback) callback(err);\r\n                return;\r\n            }\r\n\r\n            // called after scripts are preloaded\r\n            var _loaded = function () {\r\n                self._app.systems.script.preloading = true;\r\n                var entity = handler.open(url, data);\r\n                self._app.systems.script.preloading = false;\r\n\r\n                // clear from cache because this data is modified by entity operations (e.g. destroy)\r\n                self._app.loader.clearCache(url, \"hierarchy\");\r\n\r\n                // add to hierarchy\r\n                self._app.root.addChild(entity);\r\n\r\n                // initialize components\r\n                pc2d.ComponentSystem.initialize(entity);\r\n                pc2d.ComponentSystem.postInitialize(entity);\r\n\r\n                if (callback) callback(err, entity);\r\n            };\r\n\r\n            // load priority and referenced scripts before opening scene\r\n            self._app._preloadScripts(data, _loaded);\r\n        });\r\n    };\r\n\r\n    SceneRegistry.prototype.loadSceneSettings = function (url, callback) {\r\n        var self = this;\r\n\r\n        // include asset prefix if present\r\n        if (this._app.assets && this._app.assets.prefix && !pc2d.ABSOLUTE_URL.test(url)) {\r\n            url = pc2d.path.join(this._app.assets.prefix, url);\r\n        }\r\n\r\n        this._app.loader.load(url, \"scenesettings\", function (err, settings) {\r\n            if (!err) {\r\n                self._app.applySceneSettings(settings);\r\n                if (callback) {\r\n                    callback(null);\r\n                }\r\n\r\n            } else {\r\n                if (callback) {\r\n                    callback(err);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    SceneRegistry.prototype.loadScene =  function (url, callback) {\r\n        var self = this;\r\n\r\n        var handler = this._app.loader.getHandler(\"scene\");\r\n\r\n        // include asset prefix if present\r\n        if (this._app.assets && this._app.assets.prefix && !pc2d.ABSOLUTE_URL.test(url)) {\r\n            url = pc2d.path.join(this._app.assets.prefix, url);\r\n        }\r\n\r\n        handler.load(url, function (err, data) {\r\n            if (!err) {\r\n                var _loaded = function () {\r\n                    // parse and create scene\r\n                    self._app.systems.script.preloading = true;\r\n                    var scene = handler.open(url, data);\r\n                    self._app.systems.script.preloading = false;\r\n\r\n                    // clear scene from cache because we'll destroy it when we load another one\r\n                    // so data will be invalid\r\n                    self._app.loader.clearCache(url, \"scene\");\r\n\r\n                    self._app.loader.patch({\r\n                        resource: scene,\r\n                        type: \"scene\"\r\n                    }, self._app.assets);\r\n\r\n                    self._app.root.addChild(scene.root);\r\n\r\n                    // Initialise pack settings\r\n                \r\n\r\n                    if (callback) {\r\n                        callback(null, scene);\r\n                    }\r\n                };\r\n\r\n                // preload scripts before opening scene\r\n                self._app._preloadScripts(data, _loaded);\r\n            } else {\r\n                if (callback) {\r\n                    callback(err);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return {\r\n        SceneRegistry: SceneRegistry,\r\n        SceneRegistryItem: SceneRegistryItem\r\n    };\r\n\r\n}());","Object.assign(pc2d, function () {\r\nvar Application = function (canvas, options) {\r\n        pc2d.EventHandler.call(this);\r\n        options = options || {};\r\n    \r\n        // Store application instance\r\n        Application._applications[canvas.id] = this;\r\n        Application._currentApplication = this;\r\n\r\n        pc2d.app = this;\r\n\r\n        this._time = 0;\r\n        this.timeScale = 1;\r\n        this.maxDeltaTime = 0.1; // Maximum delta is 0.1s or 10 fps.\r\n\r\n        this.frame = 0; // the total number of frames the application has updated since start() was called\r\n\r\n        this.autoRender = true;\r\n        this.renderNextFrame = false;\r\n\r\n\r\n        this._librariesLoaded = false;\r\n        this._fillMode = pc2d.FILLMODE_KEEP_ASPECT;\r\n        this._resolutionMode = pc2d.RESOLUTION_FIXED;\r\n        this._allowResize = true;\r\n\r\n        // for compatibility\r\n        this.context = this;\r\n\r\n        this.graphicsDevice = new pc2d.GraphicsDevice(canvas);\r\n        \r\n        \r\n\r\n\r\n       // this._soundManager = new pc2d.SoundManager(options);\r\n\r\n        this.loader = new pc2d.ResourceLoader(this);\r\n\r\n        // stores all entities that have been created\r\n        // for this app by guid\r\n        this._entityIndex = {};\r\n        this.rootIframe = canvas;\r\n\r\n        this.scene = {};\r\n        this.root = new pc2d.Entity(this);\r\n\r\n\r\n        if(this.rootIframe.contentWindow){\r\n            this.root.buildinStyle = document.createElement(\"style\");\r\n            this.root.buildinStyle.type = \"text/css\";\r\n           \r\n            this.root.dom = this.rootIframe.contentWindow.document.body;\r\n            this.root.head = this.rootIframe.contentWindow.document.head;\r\n\r\n            this.root.head.appendChild(this.root.buildinStyle);\r\n        }else{\r\n            this.root.dom = canvas;\r\n            this.root.head = document.head;\r\n        }\r\n\r\n        this.root._enabledInHierarchy = true;\r\n        this._enableList = [];\r\n        this._enableList.size = 0;\r\n\r\n        this.assets = new pc2d.AssetRegistry(this.loader);\r\n        this.scriptsOrder = options.scriptsOrder || [];\r\n        this.scripts = new pc2d.ScriptRegistry(this);\r\n\r\n\r\n        this.scenes = new pc2d.SceneRegistry(this);\r\n\r\n        this.loader.addHandler(\"scene\", new pc2d.SceneHandler(this));\r\n        this.loader.addHandler(\"template\", new pc2d.TemplateHandler(this));\r\n        this.loader.addHandler(\"script\", new pc2d.ScriptHandler(this));\r\n        this.loader.addHandler(\"css\", new pc2d.CssHandler(this));\r\n        this.loader.addHandler(\"json\", new pc2d.JsonHandler(this));\r\n        this._visibilityChangeHandler = this.onVisibilityChange.bind(this);\r\n\r\n        this.systems = new pc2d.ComponentSystemRegistry();\r\n        this.systems.add(new pc2d.ScriptComponentSystem(this));\r\n        this.systems.add(new pc2d.CssComponentSystem(this));\r\n       \r\n\r\n\r\n        // Depending on browser add the correct visibiltychange event and store the name of the hidden attribute\r\n        // in this._hiddenAttr.\r\n        if (typeof document !== 'undefined') {\r\n            if (document.hidden !== undefined) {\r\n                this._hiddenAttr = 'hidden';\r\n                document.addEventListener('visibilitychange', this._visibilityChangeHandler, false);\r\n            } else if (document.mozHidden !== undefined) {\r\n                this._hiddenAttr = 'mozHidden';\r\n                document.addEventListener('mozvisibilitychange', this._visibilityChangeHandler, false);\r\n            } else if (document.msHidden !== undefined) {\r\n                this._hiddenAttr = 'msHidden';\r\n                document.addEventListener('msvisibilitychange', this._visibilityChangeHandler, false);\r\n            } else if (document.webkitHidden !== undefined) {\r\n                this._hiddenAttr = 'webkitHidden';\r\n                document.addEventListener('webkitvisibilitychange', this._visibilityChangeHandler, false);\r\n            }\r\n        }\r\n\r\n        // bind tick function to current scope\r\n\r\n        /* eslint-disable-next-line no-use-before-define */\r\n        this.tick = makeTick(this); // Circular linting issue as makeTick and Application reference each other\r\n    };\r\n    Application.prototype = Object.create(pc2d.EventHandler.prototype);\r\n    Application.prototype.constructor = Application;\r\n\r\n    Application._currentApplication = null;\r\n    Application._applications = {};\r\n\r\n    Application.getApplication = function (id) {\r\n        return id ? Application._applications[id] : Application._currentApplication;\r\n    };\r\n\r\n    // Mini-object used to measure progress of loading sets\r\n    var Progress = function (length) {\r\n        this.length = length;\r\n        this.count = 0;\r\n\r\n        this.inc = function () {\r\n            this.count++;\r\n        };\r\n\r\n        this.done = function () {\r\n            return (this.count === this.length);\r\n        };\r\n    };\r\n\r\n    Object.defineProperty(Application.prototype, 'fillMode', {\r\n        get: function () {\r\n            return this._fillMode;\r\n        }\r\n    });\r\n\r\n    Object.defineProperty(Application.prototype, 'resolutionMode', {\r\n        get: function () {\r\n            return this._resolutionMode;\r\n        }\r\n    });\r\n\r\n    Object.assign(Application.prototype, {\r\n        configure: function (url, callback) {\r\n            var self = this;\r\n            pc2d.http.get(url, function (err, response) {\r\n                if (err) {\r\n                    callback(err);\r\n                    return;\r\n                }\r\n\r\n                var props = response.application_properties;\r\n                var scenes = response.scenes;\r\n                var assets = response.assets;\r\n\r\n                self._parseApplicationProperties(props, function (err) {\r\n                    self._parseScenes(scenes);\r\n                    self._parseAssets(assets);\r\n                    if (!err) {\r\n                        callback(null);\r\n                    } else {\r\n                        callback(err);\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n        preload: function (callback) {\r\n            var self = this;\r\n            var i, total;\r\n\r\n            self.fire(\"preload:start\");\r\n\r\n            // get list of assets to preload\r\n            var assets = this.assets.list({\r\n                preload: true\r\n            });\r\n\r\n            var _assets = new Progress(assets.length);\r\n\r\n            var _done = false;\r\n\r\n            // check if all loading is done\r\n            var done = function () {\r\n                // do not proceed if application destroyed\r\n                if (!self.graphicsDevice) {\r\n                    return;\r\n                }\r\n\r\n                if (!_done && _assets.done()) {\r\n                    _done = true;\r\n                    self.fire(\"preload:end\");\r\n                    callback();\r\n                }\r\n            };\r\n\r\n            // totals loading progress of assets\r\n            total = assets.length;\r\n            var count = function () {\r\n                return _assets.count;\r\n            };\r\n\r\n            if (_assets.length) {\r\n                var onAssetLoad = function (asset) {\r\n                    _assets.inc();\r\n                    self.fire('preload:progress', count() / total);\r\n\r\n                    if (_assets.done())\r\n                        done();\r\n                };\r\n\r\n                var onAssetError = function (err, asset) {\r\n                    _assets.inc();\r\n                    self.fire('preload:progress', count() / total);\r\n\r\n                    if (_assets.done())\r\n                        done();\r\n                };\r\n\r\n                // for each asset\r\n                for (i = 0; i < assets.length; i++) {\r\n                    if (!assets[i].loaded) {\r\n                        assets[i].once('load', onAssetLoad);\r\n                        assets[i].once('error', onAssetError);\r\n\r\n                        this.assets.load(assets[i]);\r\n                    } else {\r\n                        _assets.inc();\r\n                        self.fire(\"preload:progress\", count() / total);\r\n\r\n                        if (_assets.done())\r\n                            done();\r\n                    }\r\n                }\r\n            } else {\r\n                done();\r\n            }\r\n        },\r\n\r\n        getSceneUrl: function (name) {\r\n            var entry = this.scenes.find(name);\r\n            if (entry) {\r\n                return entry.url;\r\n            }\r\n            return null;\r\n        },\r\n\r\n        loadSceneHierarchy: function (url, callback) {\r\n            this.scenes.loadSceneHierarchy(url, callback);\r\n        },\r\n        loadSceneSettings: function (url, callback) {\r\n            this.scenes.loadSceneSettings(url, callback);\r\n        },\r\n\r\n\r\n        loadScene: function (url, callback) {\r\n            this.scenes.loadScene(url, callback);\r\n        },\r\n\r\n\r\n        _preloadScripts: function (sceneData, callback) {\r\n            if (!pc2d.script.legacy) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            self.systems.script.preloading = true;\r\n\r\n            var scripts = this._getScriptReferences(sceneData);\r\n\r\n            var i = 0, l = scripts.length;\r\n            var progress = new Progress(l);\r\n            var scriptUrl;\r\n            var regex = /^http(s)?:\\/\\//;\r\n\r\n            if (l) {\r\n                var onLoad = function (err, ScriptType) {\r\n                    if (err)\r\n                        console.error(err);\r\n\r\n                    progress.inc();\r\n                    if (progress.done()) {\r\n                        self.systems.script.preloading = false;\r\n                        callback();\r\n                    }\r\n                };\r\n\r\n                for (i = 0; i < l; i++) {\r\n                    scriptUrl = scripts[i];\r\n                    \r\n                    // support absolute URLs (for now)\r\n                    if (!regex.test(scriptUrl.toLowerCase()) && self._scriptPrefix)\r\n                        scriptUrl = pc2d.path.join(self._scriptPrefix, scripts[i]);\r\n\r\n                    this.loader.load(scriptUrl, 'script', onLoad);\r\n                }\r\n            } else {\r\n                self.systems.script.preloading = false;\r\n                callback();\r\n            }\r\n        },\r\n\r\n        // set application properties from data file\r\n        _parseApplicationProperties: function (props, callback) {\r\n            var i;\r\n            var len;\r\n\r\n            // TODO: remove this temporary block after migrating properties\r\n            if (!props.useDevicePixelRatio)\r\n                props.useDevicePixelRatio = props.use_device_pixel_ratio;\r\n            if (!props.resolutionMode)\r\n                props.resolutionMode = props.resolution_mode;\r\n            if (!props.fillMode)\r\n                props.fillMode = props.fill_mode;\r\n\r\n            this._width = props.width;\r\n            this._height = props.height;\r\n            if (props.useDevicePixelRatio) {\r\n                this.graphicsDevice.maxPixelRatio = window.devicePixelRatio;\r\n            }\r\n\r\n            this.setCanvasResolution(props.resolutionMode, this._width, this._height);\r\n            this.setCanvasFillMode(props.fillMode, this._width, this._height);\r\n\r\n            // set up layers\r\n            if (props.layers && props.layerOrder) {\r\n                var composition = new pc2d.LayerComposition();\r\n\r\n                var layers = {};\r\n                for (var key in props.layers) {\r\n                    var data = props.layers[key];\r\n                    data.id = parseInt(key, 10);\r\n                    // depth layer should only be enabled when needed\r\n                    // by incrementing its ref counter\r\n                    data.enabled = data.id !== pc2d.LAYERID_DEPTH;\r\n                    layers[key] = new pc2d.Layer(data);\r\n                }\r\n\r\n                for (i = 0, len = props.layerOrder.length; i < len; i++) {\r\n                    var sublayer = props.layerOrder[i];\r\n                    var layer = layers[sublayer.layer];\r\n                    if (!layer) continue;\r\n\r\n                    if (sublayer.transparent) {\r\n                        composition.pushTransparent(layer);\r\n                    } else {\r\n                        composition.pushOpaque(layer);\r\n                    }\r\n\r\n                    composition.subLayerEnabled[i] = sublayer.enabled;\r\n                }\r\n\r\n                this.scene.layers = composition;\r\n            }\r\n\r\n            // add batch groups\r\n            if (props.batchGroups) {\r\n                for (i = 0, len = props.batchGroups.length; i < len; i++) {\r\n                    var grp = props.batchGroups[i];\r\n                    this.batcher.addGroup(grp.name, grp.dynamic, grp.maxAabbSize, grp.id, grp.layers);\r\n                }\r\n\r\n            }\r\n\r\n            // set localization assets\r\n            if (props.i18nAssets) {\r\n                this.i18n.assets = props.i18nAssets;\r\n            }\r\n\r\n            this._loadLibraries(props.libraries, callback);\r\n        },\r\n\r\n        _loadLibraries: function (urls, callback) {\r\n            var len = urls.length;\r\n            var count = len;\r\n            var self = this;\r\n\r\n            var regex = /^http(s)?:\\/\\//;\r\n\r\n            if (len) {\r\n                var onLoad = function (err, script) {\r\n                    count--;\r\n                    if (err) {\r\n                        callback(err);\r\n                    } else if (count === 0) {\r\n                        self.onLibrariesLoaded();\r\n                        callback(null);\r\n                    }\r\n                };\r\n\r\n                for (var i = 0; i < len; ++i) {\r\n                    var url = urls[i];\r\n\r\n                    if (!regex.test(url.toLowerCase()) && self._scriptPrefix)\r\n                        url = pc2d.path.join(self._scriptPrefix, url);\r\n\r\n                    this.loader.load(url, 'script', onLoad);\r\n                }\r\n            } else {\r\n                self.onLibrariesLoaded();\r\n                callback(null);\r\n            }\r\n        },\r\n\r\n        // insert scene name/urls into the registry\r\n        _parseScenes: function (scenes) {\r\n            if (!scenes) return;\r\n\r\n            for (var i = 0; i < scenes.length; i++) {\r\n                this._sceneRegistry.add(scenes[i].name, scenes[i].url);\r\n            }\r\n        },\r\n\r\n        // insert assets into registry\r\n        _parseAssets: function (assets) {\r\n            var i, id;\r\n            var list = [];\r\n\r\n            var scriptsIndex = {};\r\n            var bundlesIndex = {};\r\n\r\n            if (!pc2d.script.legacy) {\r\n                // add scripts in order of loading first\r\n                for (i = 0; i < this.scriptsOrder.length; i++) {\r\n                    id = this.scriptsOrder[i];\r\n                    if (!assets[id])\r\n                        continue;\r\n\r\n                    scriptsIndex[id] = true;\r\n                    list.push(assets[id]);\r\n                }\r\n\r\n                // then add bundles\r\n                if (this.enableBundles) {\r\n                    for (id in assets) {\r\n                        if (assets[id].type === 'bundle') {\r\n                            bundlesIndex[id] = true;\r\n                            list.push(assets[id]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // then add rest of assets\r\n                for (id in assets) {\r\n                    if (scriptsIndex[id] || bundlesIndex[id])\r\n                        continue;\r\n\r\n                    list.push(assets[id]);\r\n                }\r\n            }\r\n\r\n            for (i = 0; i < list.length; i++) {\r\n                var data = list[i];\r\n                var asset = new pc2d.Asset(data.name, data.type, data.file, data.data);\r\n                asset.id = data.id;\r\n                asset.preload = data.preload ? data.preload : false;\r\n                // if this is a script asset and has already been embedded in the page then\r\n                // mark it as loaded\r\n                asset.loaded = data.type === 'script' && data.data && data.data.loadingType > 0;\r\n                // tags\r\n                asset.tags.add(data.tags);\r\n                // i18n\r\n                if (data.i18n) {\r\n                    for (var locale in data.i18n) {\r\n                        asset.addLocalizedAssetId(locale, data.i18n[locale]);\r\n                    }\r\n                }\r\n                // registry\r\n                this.assets.add(asset);\r\n            }\r\n        },\r\n\r\n        _getScriptReferences: function (scene) {\r\n            var i, key;\r\n\r\n            var priorityScripts = [];\r\n            if (scene.settings.priority_scripts) {\r\n                priorityScripts = scene.settings.priority_scripts;\r\n            }\r\n\r\n            var _scripts = [];\r\n            var _index = {};\r\n\r\n            // first add priority scripts\r\n            for (i = 0; i < priorityScripts.length; i++) {\r\n                _scripts.push(priorityScripts[i]);\r\n                _index[priorityScripts[i]] = true;\r\n            }\r\n\r\n            // then iterate hierarchy to get referenced scripts\r\n            var entities = scene.entities;\r\n            for (key in entities) {\r\n                if (!entities[key].components.script) {\r\n                    continue;\r\n                }\r\n\r\n                var scripts = entities[key].components.script.scripts;\r\n                for (i = 0; i < scripts.length; i++) {\r\n                    if (_index[scripts[i].url])\r\n                        continue;\r\n                    _scripts.push(scripts[i].url);\r\n                    _index[scripts[i].url] = true;\r\n                }\r\n            }\r\n\r\n            return _scripts;\r\n        },\r\n\r\n        start: function () {\r\n            this.frame = 0;\r\n\r\n            this.fire(\"start\", {\r\n                timestamp: pc2d.now(),\r\n                target: this\r\n            });\r\n\r\n            if (!this._librariesLoaded) {\r\n                this.onLibrariesLoaded();\r\n            }\r\n\r\n            pc2d.ComponentSystem.initialize(this.root);\r\n            this.fire(\"initialize\");\r\n\r\n            pc2d.ComponentSystem.postInitialize(this.root);\r\n            this.fire(\"postinitialize\");\r\n\r\n            this.tick();\r\n        },\r\n\r\n        update: function (dt) {\r\n            this.frame++;\r\n            \r\n\r\n           // this.graphicsDevice.updateClientRect();\r\n\r\n            pc2d.ComponentSystem.update(dt, this._inTools);\r\n            pc2d.ComponentSystem.postUpdate(dt, this._inTools);\r\n\r\n            // fire update event\r\n            this.fire(\"update\", dt);\r\n\r\n            if (this.controller) {\r\n                this.controller.update(dt);\r\n            }\r\n            if (this.mouse) {\r\n                this.mouse.update(dt);\r\n            }\r\n            if (this.keyboard) {\r\n                this.keyboard.update(dt);\r\n            }\r\n            if (this.gamepads) {\r\n                this.gamepads.update(dt);\r\n            }\r\n\r\n            \r\n        },\r\n\r\n        render: function () {\r\n          \r\n\r\n            this.fire(\"prerender\");\r\n            this.root.syncHierarchy();\r\n            this.batcher && this.batcher.updateAll();\r\n            pc2d._skipRenderCounter = 0;\r\n            this.renderer && this.renderer.renderComposition(this.scene.layers);\r\n            this.fire(\"postrender\");     \r\n        },\r\n\r\n        setCanvasFillMode: function (mode, width, height) {\r\n            this._fillMode = mode;\r\n            this.resizeCanvas(width, height);\r\n        },\r\n\r\n        setCanvasResolution: function (mode, width, height) {\r\n            this._resolutionMode = mode;\r\n\r\n            // In AUTO mode the resolution is the same as the canvas size, unless specified\r\n            if (mode === pc2d.RESOLUTION_AUTO && (width === undefined)) {\r\n                width = this.graphicsDevice.canvas.clientWidth;\r\n                height = this.graphicsDevice.canvas.clientHeight;\r\n            }\r\n\r\n            this.graphicsDevice.resizeCanvas(width, height);\r\n        },\r\n        isHidden: function () {\r\n            return document[this._hiddenAttr];\r\n        },\r\n        onVisibilityChange: function () {\r\n            if (this.isHidden()) {\r\n                this.fire(\"visibilityHidden\")\r\n             //   this._audioManager.suspend();\r\n            } else {\r\n                this.fire(\"visibilityVisible\")\r\n             //   this._audioManager.resume();\r\n            }\r\n        },\r\n        resizeCanvas: function (width, height) {\r\n            if (!this._allowResize) return; // prevent resizing (e.g. if presenting in VR HMD)\r\n\r\n            var windowWidth = window.innerWidth;\r\n            var windowHeight = window.innerHeight;\r\n\r\n            if (this._fillMode === pc2d.FILLMODE_KEEP_ASPECT) {\r\n                var r = this.graphicsDevice.canvas.width / this.graphicsDevice.canvas.height;\r\n                var winR = windowWidth / windowHeight;\r\n\r\n                if (r > winR) {\r\n                    width = windowWidth;\r\n                    height = width / r;\r\n                } else {\r\n                    height = windowHeight;\r\n                    width = height * r;\r\n                }\r\n            } else if (this._fillMode === pc2d.FILLMODE_FILL_WINDOW) {\r\n                width = windowWidth;\r\n                height = windowHeight;\r\n            } else {\r\n                // FILLMODE_NONE use width and height that are provided\r\n            }\r\n\r\n            // this.graphicsDevice.canvas.style.width = width + 'px';\r\n            // this.graphicsDevice.canvas.style.height = height + 'px';\r\n\r\n            // In AUTO mode the resolution is changed to match the canvas size\r\n            if (this._resolutionMode === pc2d.RESOLUTION_AUTO) {\r\n                this.setCanvasResolution(pc2d.RESOLUTION_AUTO);\r\n            }\r\n\r\n            // return the final values calculated for width and height\r\n            return {\r\n                width: width,\r\n                height: height\r\n            };\r\n        },\r\n        onLibrariesLoaded: function () {\r\n            this._librariesLoaded = true;\r\n            \r\n        },\r\n        applySceneSettings: function (settings) {\r\n            var asset;\r\n\r\n\r\n        },\r\n\r\n\r\n     \r\n       \r\n\r\n        _processTimestamp: function (timestamp) {\r\n            return timestamp;\r\n        },\r\n\r\n        destroy: function () {\r\n            var i, l;\r\n            var canvasId = this.graphicsDevice.canvas.id;\r\n\r\n            this.off('librariesloaded');\r\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler, false);\r\n            document.removeEventListener('mozvisibilitychange', this._visibilityChangeHandler, false);\r\n            document.removeEventListener('msvisibilitychange', this._visibilityChangeHandler, false);\r\n            document.removeEventListener('webkitvisibilitychange', this._visibilityChangeHandler, false);\r\n            this._visibilityChangeHandler = null;\r\n            this.onVisibilityChange = null;\r\n\r\n            this.root.destroy();\r\n            this.root = null;\r\n\r\n            if (this.mouse) {\r\n                this.mouse.off();\r\n                this.mouse.detach();\r\n                this.mouse = null;\r\n            }\r\n\r\n            if (this.keyboard) {\r\n                this.keyboard.off();\r\n                this.keyboard.detach();\r\n                this.keyboard = null;\r\n            }\r\n\r\n            if (this.touch) {\r\n                this.touch.off();\r\n                this.touch.detach();\r\n                this.touch = null;\r\n            }\r\n\r\n            if (this.elementInput) {\r\n                this.elementInput.detach();\r\n                this.elementInput = null;\r\n            }\r\n\r\n            if (this.controller) {\r\n                this.controller = null;\r\n            }\r\n\r\n            var systems = this.systems.list;\r\n            for (i = 0, l = systems.length; i < l; i++) {\r\n                systems[i].destroy();\r\n            }\r\n\r\n            pc2d.ComponentSystem.destroy();\r\n\r\n            // destroy all texture resources\r\n            var assets = this.assets.list();\r\n            for (i = 0; i < assets.length; i++) {\r\n                assets[i].unload();\r\n                assets[i].off();\r\n            }\r\n            this.assets.off();\r\n\r\n\r\n\r\n\r\n            for (var key in this.loader.getHandler('script')._cache) {\r\n                var element = this.loader.getHandler('script')._cache[key];\r\n                var parent = element.parentNode;\r\n                if (parent) parent.removeChild(element);\r\n            }\r\n            this.loader.getHandler('script')._cache = {};\r\n\r\n            this.loader.destroy();\r\n            this.loader = null;\r\n\r\n            this.scene.destroy();\r\n            this.scene = null;\r\n\r\n            this.systems = [];\r\n            this.context = null;\r\n\r\n            // script registry\r\n            this.scripts.destroy();\r\n            this.scripts = null;\r\n\r\n            this._sceneRegistry.destroy();\r\n            this._sceneRegistry = null;\r\n\r\n            this.lightmapper.destroy();\r\n            this.lightmapper = null;\r\n\r\n            this.batcher.destroyManager();\r\n            this.batcher = null;\r\n\r\n            this._entityIndex = {};\r\n\r\n            this.defaultLayerDepth.onPreRenderOpaque = null;\r\n            this.defaultLayerDepth.onPostRenderOpaque = null;\r\n            this.defaultLayerDepth.onDisable = null;\r\n            this.defaultLayerDepth.onEnable = null;\r\n            this.defaultLayerDepth = null;\r\n            this.defaultLayerWorld = null;\r\n\r\n            pc2d.destroyPostEffectQuad();\r\n\r\n            if (this.vr) {\r\n                this.vr.destroy();\r\n                this.vr = null;\r\n            }\r\n            this.xr.end();\r\n\r\n            this.graphicsDevice.destroy();\r\n            this.graphicsDevice = null;\r\n\r\n            this.renderer = null;\r\n            this.tick = null;\r\n\r\n            this.off(); // remove all events\r\n\r\n            if (this._audioManager) {\r\n                this._audioManager.destroy();\r\n                this._audioManager = null;\r\n            }\r\n\r\n            pc2d.http = new pc2d.Http();\r\n            pc2d.script.app = null;\r\n            // remove default particle texture\r\n            pc2d.ParticleEmitter.DEFAULT_PARAM_TEXTURE = null;\r\n\r\n            Application._applications[canvasId] = null;\r\n\r\n            if (Application._currentApplication === this) {\r\n                Application._currentApplication = null;\r\n            }\r\n        },\r\n        getEntityFromIndex: function (guid) {\r\n            return this._entityIndex[guid];\r\n        }\r\n    });\r\n\r\n    // static data\r\n    var _frameEndData = {};\r\n\r\n    // create tick function to be wrapped in closure\r\n    var makeTick = function (_app) {\r\n        var app = _app;\r\n        var frameRequest;\r\n\r\n        return function (timestamp, frame) {\r\n            if (!app.graphicsDevice)\r\n                return;\r\n\r\n            Application._currentApplication = app;\r\n\r\n            if (frameRequest) {\r\n                window.cancelAnimationFrame(frameRequest);\r\n                frameRequest = null;\r\n            }\r\n\r\n            // have current application pointer in pc\r\n            pc2d.app = app;\r\n\r\n            var now = app._processTimestamp(timestamp) || pc2d.now();\r\n            var ms = now - (app._time || now);\r\n            var dt = ms / 1000.0;\r\n            dt = pc2d.math.clamp(dt, 0, app.maxDeltaTime);\r\n            dt *= app.timeScale;\r\n\r\n            app._time = now;\r\n\r\n            frameRequest = window.requestAnimationFrame(app.tick);\r\n          \r\n            app.update(dt);\r\n\r\n            if (app.autoRender || app.renderNextFrame) {\r\n                app.render();\r\n                app.renderNextFrame = false;\r\n            }\r\n\r\n            // set event data\r\n            _frameEndData.timestamp = pc2d.now();\r\n            _frameEndData.target = app;\r\n\r\n            app.fire(\"frameend\", _frameEndData);\r\n            app.fire(\"frameEnd\", _frameEndData);// deprecated old event, remove when editor updated\r\n\r\n        };\r\n    };\r\n\r\n    return {\r\n     \r\n        FILLMODE_NONE: 'NONE',\r\n        FILLMODE_FILL_WINDOW: 'FILL_WINDOW',\r\n        FILLMODE_KEEP_ASPECT: 'KEEP_ASPECT',\r\n        RESOLUTION_AUTO: 'AUTO',\r\n        RESOLUTION_FIXED: 'FIXED',\r\n\r\n        Application: Application\r\n    };\r\n}());","import pc2d from  \"./core/pc2d-core.js\";\r\nimport  \"./core/pc2d-eventhandle.js\";\r\nimport  \"./core/pc2d-tags.js\";\r\nimport  \"./math/math.js\";\r\nimport  \"./math/curve.js\";\r\nimport  \"./math/curve-set.js\";\r\nimport  \"./math/curve-evaluator.js\";\r\nimport  \"./math/vec2.js\";\r\nimport  \"./math/vec3.js\";\r\nimport  \"./math/vec4.js\";\r\n//import  \"./math/quat.js\";\r\n// import  \"./math/mat3.js\";\r\n// import  \"./math/mat4.js\";\r\nimport  \"./framework/utils/sorted-loop-array.js\";\r\nimport  \"./framework/components/data.js\";\r\nimport  \"./framework/components/component.js\";\r\nimport  \"./framework/components/system.js\";\r\nimport  \"./framework/components/register.js\";\r\nimport  \"./framework/components/script/data.js\";\r\nimport  \"./framework/components/script/component.js\";\r\nimport  \"./framework/components/script/system.js\";\r\nimport  \"./framework/components/css/data.js\";\r\nimport  \"./framework/components/css/component.js\";\r\nimport  \"./framework/components/css/system.js\";\r\n// import  \"./framework/components/animation/data.js\";\r\n// import  \"./framework/components/animation/component.js\";\r\n// import  \"./framework/components/animation/system.js\";\r\nimport  \"./pc2d-graphnode-web.js\";\r\nimport  \"./net/http.js\";\r\nimport  \"./script/script.js\";\r\nimport  \"./script/script-type.js\";\r\nimport  \"./script/script-attributes.js\";\r\nimport  \"./script/script-registry.js\";\r\nimport  \"./script/script.js\";\r\nimport  \"./asset/asset-list-loader.js\";\r\nimport  \"./asset/asset-variant.js\";\r\nimport  \"./asset/asset.js\";\r\nimport  \"./asset/asset-registry.js\";\r\nimport  \"./resources/loader.js\";\r\nimport  \"./resources/script.js\";\r\nimport  \"./resources/parser/scene-web.js\";\r\nimport  \"./resources/scene.js\";\r\nimport  \"./resources/css.js\";\r\nimport  \"./resources/json.js\";\r\nimport  \"./resources/template.js\";\r\nimport  \"./template/template-utils.js\";\r\nimport  \"./template/template.js\";\r\nimport  \"./graphics/device.js\";\r\nimport  \"./framework/pc2d-entity.js\";\r\nimport  \"./framework/pc2d-script.js\";\r\nimport  \"./framework/pc2d-scene-registry.js\";\r\nimport  \"./framework/pc2d-application.js\";\r\n\r\nexport default pc2d;\r\n\r\n"]}